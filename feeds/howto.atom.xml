<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>wiki'd - HowTo</title><link href="http://wiki.jokeru.ro/" rel="alternate"></link><link href="http://wiki.jokeru.ro/feeds/howto.atom.xml" rel="self"></link><id>http://wiki.jokeru.ro/</id><updated>2014-12-03T00:11:00+00:00</updated><entry><title>SSH Brute Force / SSH DoS</title><link href="http://wiki.jokeru.ro/howto-ssh-brute-force-ssh-dos.html" rel="alternate"></link><published>2014-12-03T00:11:00+00:00</published><updated>2014-12-03T00:11:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-12-03:/howto-ssh-brute-force-ssh-dos.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;ssh_exchange_identification: Connection closed by remote host&lt;/strong&gt; -
this was the message returned when trying to connect to a server
(Debian, exposed to Internet, using a non-standard port for ssh service)
using a valid key. After 5+ retries i finally managed to connect.&lt;/p&gt;
&lt;p&gt;I checked the "/var/log/auth.log" logs and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;ssh_exchange_identification: Connection closed by remote host&lt;/strong&gt; -
this was the message returned when trying to connect to a server
(Debian, exposed to Internet, using a non-standard port for ssh service)
using a valid key. After 5+ retries i finally managed to connect.&lt;/p&gt;
&lt;p&gt;I checked the "/var/log/auth.log" logs and the enemy showed up: someone
was brute-forcing the root access spawning many connections
simultaneously (and i guess this was the reason i could not complete the
ssh connection)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The fix:&lt;/strong&gt;
&lt;a href="http://wiki.jokeru.ro/howto-fail2ban-brute-force-protection-custom-filter" title="Fail2Ban brute force protection – custom filter"&gt;fail2ban&lt;/a&gt;
!&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ apt-get install fail2ban -y&lt;br&gt;
# disable default jails&lt;br&gt;
\$ sed -i 's/\^enabled = true\$/enabled = false/g'
/etc/fail2ban/jail.conf&lt;br&gt;
# create custom ssh jail using standard sshd filter&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; /etc/fail2ban/jail.local&lt;br&gt;
[ssh]&lt;br&gt;
enabled = true&lt;br&gt;
port = 22222&lt;br&gt;
filter = sshd&lt;br&gt;
backend = polling&lt;br&gt;
logpath = /var/log/auth.log&lt;br&gt;
maxretry = 5&lt;br&gt;
bantime = 3600&lt;br&gt;
EOF&lt;br&gt;
\$ /etc/init.d/fail2ban restart&lt;/p&gt;
&lt;p&gt;\$ fail2ban-client status ssh&lt;br&gt;
\$ iptables -L -nv&lt;br&gt;
\$ tail /var/log/fail2ban.log&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="DoS"></category><category term="fail2ban"></category><category term="FireWall"></category><category term="ids"></category><category term="security"></category><category term="SSH"></category></entry><entry><title>Slow MySQL on AWS</title><link href="http://wiki.jokeru.ro/slow-mysql-on-aws.html" rel="alternate"></link><published>2014-10-29T16:00:00+00:00</published><updated>2014-10-29T16:00:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-10-29:/slow-mysql-on-aws.html</id><summary type="html">&lt;p&gt;While stress-testing a project hosted on Amazon, we've found an issue
with the MySQL Server (2 CPU, 4G RAM): slow and unresponsive !&lt;br&gt;
[cc lang='bash']&lt;br&gt;
root@nms:\~# ab -c 10 -n 100 "http://mysql/stress.php" 2&gt;/dev/null |
grep "Time taken for tests"&lt;br&gt;
Time taken for tests: 11.150 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;While stress-testing a project hosted on Amazon, we've found an issue
with the MySQL Server (2 CPU, 4G RAM): slow and unresponsive !&lt;br&gt;
[cc lang='bash']&lt;br&gt;
root@nms:\~# ab -c 10 -n 100 "http://mysql/stress.php" 2&gt;/dev/null |
grep "Time taken for tests"&lt;br&gt;
Time taken for tests: 11.150 seconds&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;Let's &lt;strong&gt;dive&lt;/strong&gt; into it:&lt;br&gt;
- a quick "top" check revealed 100% CPU usage with 97% wa, so the issue
was disk io&lt;br&gt;
[cc lang='bash']&lt;br&gt;
top - 12:10:43 up 3 days, 27 min, 1 user, load average: 21.75, 7.37,
3.23&lt;br&gt;
Tasks: 155 total, 1 running, 154 sleeping, 0 stopped, 0 zombie&lt;br&gt;
%Cpu0 : 2.4 us, 0.3 sy, 0.0 ni, 0.0 id, 97.3 wa, 0.0 hi, 0.0 si, 0.0
st&lt;br&gt;
%Cpu1 : 1.7 us, 0.7 sy, 0.0 ni, 0.0 id, 97.7 wa, 0.0 hi, 0.0 si, 0.0
st&lt;br&gt;
[/cc]&lt;br&gt;
- since a graph tells more than 1000 words, we've also checked the
&lt;a href="http://wiki.jokeru.ro/system-performance-monitoring-with-collectd" title="System Performance Monitoring with collectd"&gt;collectd&lt;/a&gt;
graphs and spotted a curious thing: the disk causing the issues was not
the MySQL disk (/var/lib/mysql is mounted on a high performance ssd),
but the root disk !&lt;br&gt;
- using the
&lt;a href="http://wiki.jokeru.ro/managing-disk-ios" title="Managing Disk IOs"&gt;block_dump&lt;/a&gt;
option, we nailed it: MySQL was creating some temporary tables under
/tmp (default config) and this was causing the slowness&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;fix&lt;/strong&gt; (for the tests bellow, we increased 10 times the concurrency
and total requests number):&lt;br&gt;
- the first attempt was to move the mysql "tmpdir" to "/mnt/mysql-tmp/"
(the ephemeral / instance storage)&lt;br&gt;
[cc lang='bash']&lt;br&gt;
root@nms:\~# ab -c 100 -n 1000 "http://mysql/stress.php" 2&gt;/dev/null
| grep "Time taken for tests"&lt;br&gt;
Time taken for tests: 21.024 seconds&lt;br&gt;
[/cc]&lt;br&gt;
- but the final option was to move it to a "tmpfs" folder (in RAM)&lt;br&gt;
[cc lang='bash']&lt;br&gt;
root@nms:\~# ab -c 100 -n 1000 "http://mysql/stress.php" 2&gt;/dev/null
| grep "Time taken for tests"&lt;br&gt;
Time taken for tests: 8.937 seconds&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="AWS"></category><category term="IOPS"></category><category term="MySQL"></category><category term="Performance"></category><category term="Ubuntu"></category></entry><entry><title>Redmon - redis dashboard / admin interface / monitoring</title><link href="http://wiki.jokeru.ro/redmon-redis-dashboard-admin-interface-monitoring.html" rel="alternate"></link><published>2014-10-24T12:12:00+01:00</published><updated>2014-10-24T12:12:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-10-24:/redmon-redis-dashboard-admin-interface-monitoring.html</id><summary type="html">&lt;p&gt;I've been looking for a Redis Admin UI, but it looks like there is no
"standard" one.&lt;/p&gt;
&lt;p&gt;Then I've tried Redmon and liked it because:&lt;br&gt;
- easy to install&lt;br&gt;
- it has a nice design&lt;br&gt;
- you can run console commands&lt;br&gt;
- you can change configuration&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# debian squeeze&lt;br&gt;
\$ apt-get install ruby …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been looking for a Redis Admin UI, but it looks like there is no
"standard" one.&lt;/p&gt;
&lt;p&gt;Then I've tried Redmon and liked it because:&lt;br&gt;
- easy to install&lt;br&gt;
- it has a nice design&lt;br&gt;
- you can run console commands&lt;br&gt;
- you can change configuration&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# debian squeeze&lt;br&gt;
\$ apt-get install ruby rubygems&lt;br&gt;
\$ gem install sinatra json&lt;br&gt;
\$ gem install redmon&lt;br&gt;
\$ /var/lib/gems/1.8/gems/redmon-0.0.10/bin/redmon -a 127.0.0.1 -l 300
&amp;amp;&lt;br&gt;
# redmon will be protected by a reverse proxy, that's why we bind it
to localhost&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;
[caption id="attachment\_1210" align="aligncenter"
width="300"][![redmon](http://wiki.jokeru.ro/wp-content/uploads/2014/10/redmon-300x218.png)](http://wiki.jokeru.ro/wp-content/uploads/2014/10/redmon.png)

&lt;center&gt;
Redmon Interface

&lt;/center&gt;
[/caption]

&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;more details:
&lt;a href="https://github.com/steelThread/redmon" title="https://github.com/steelThread/redmon"&gt;https://github.com/steelThread/redmon&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="redis"></category><category term="redmon"></category><category term="ui"></category></entry><entry><title>Secure your ELK environment</title><link href="http://wiki.jokeru.ro/how-to-secure-your-elk-environment.html" rel="alternate"></link><published>2014-09-29T00:01:00+01:00</published><updated>2014-09-29T00:01:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-09-29:/how-to-secure-your-elk-environment.html</id><summary type="html">&lt;p&gt;So you've got your &lt;a href="http://wiki.jokeru.ro/howto-elk-the-elasticsearch-logstash-kibana-stack" title="ELK – the Elasticsearch Logstash Kibana stack"&gt;ELK
setup&lt;/a&gt;
- let's suppose you've installed all components (logstash and
elasticsearch) on the same server.&lt;br&gt;
Everything is looking great, but there is one "little" security
problem: everybody can access it, and you don't want that :)&lt;/p&gt;
&lt;p&gt;It's time to take action !&lt;/p&gt;
&lt;p&gt;Secure the access to logstash-web service …&lt;/p&gt;</summary><content type="html">&lt;p&gt;So you've got your &lt;a href="http://wiki.jokeru.ro/howto-elk-the-elasticsearch-logstash-kibana-stack" title="ELK – the Elasticsearch Logstash Kibana stack"&gt;ELK
setup&lt;/a&gt;
- let's suppose you've installed all components (logstash and
elasticsearch) on the same server.&lt;br&gt;
Everything is looking great, but there is one "little" security
problem: everybody can access it, and you don't want that :)&lt;/p&gt;
&lt;p&gt;It's time to take action !&lt;/p&gt;
&lt;p&gt;Secure the access to logstash-web service:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ iptables -A INPUT -i eth0 -p tcp --destination-port 9292 -j DROP&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;Secure the access to elasticsearch:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ iptables -A INPUT -i eth0 -p tcp --destination-port 9200 -j DROP&lt;br&gt;
\$ iptables -A INPUT -i eth0 -p tcp --destination-port 9300 -j DROP&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;Secure the access to logstash elasticsearch node:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ iptables -A INPUT -i eth0 -p tcp --destination-port 9301 -j DROP&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;Change the way kibana requests the data from elasticsearch:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ sed -i 's/":9200",/"\/elasticsearch",/'
/opt/logstash/vendor/kibana/config.js&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;And finally we're going to install a Reverse Proxy using Authentication
for the logstash-web access:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ apt-get install apache2&lt;br&gt;
\$ apt-get install libapache2-mod-proxy-html&lt;br&gt;
\$ a2enmod proxy_http&lt;br&gt;
\$ echo "ServerName "`hostname -s` &gt; /etc/apache2/conf.d/fqdn&lt;/p&gt;
&lt;p&gt;\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; /etc/apache2/conf.d/dashboard&lt;br&gt;
&lt;virtualhost *:80&gt;&lt;br&gt;
ServerName dashboard.jokeru.ro&lt;br&gt;
ErrorLog \${APACHE_LOG_DIR}/dashboard.error.log&lt;br&gt;
CustomLog \${APACHE_LOG_DIR}/dashboard.access.log common&lt;br&gt;
&lt;location&gt;&lt;/location&gt;&lt;br&gt;
AuthType Basic&lt;br&gt;
AuthName "Private"&lt;br&gt;
AuthUserFile /var/www/.htpasswd&lt;br&gt;
Require valid-user&lt;br&gt;
&lt;/location&gt;&lt;/p&gt;
&lt;p&gt;ProxyPass /elasticsearch/ http://127.0.0.1:9200/&lt;br&gt;
ProxyPassReverse /elasticsearch/ http://127.0.0.1:9200/&lt;/p&gt;
&lt;p&gt;ProxyPass / http://127.0.0.1:9292/&lt;br&gt;
ProxyPassReverse / http://127.0.0.1:9292/&lt;br&gt;
&lt;/virtualhost&gt;&lt;br&gt;
EOF&lt;br&gt;
\$ htpasswd -c /var/www/.htpasswd admin&lt;br&gt;
\$ /etc/init.d/apache2 restart&lt;br&gt;
\$ apachectl -S&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="apache"></category><category term="elasticsearch"></category><category term="elk"></category><category term="iptables"></category><category term="kibana"></category><category term="logstash"></category><category term="reverse proxy"></category><category term="security"></category></entry><entry><title>ELK - the Elasticsearch Logstash Kibana stack</title><link href="http://wiki.jokeru.ro/how-to-elk-the-elasticsearch-logstash-kibana-stack.html" rel="alternate"></link><published>2014-09-26T14:14:00+01:00</published><updated>2014-09-26T14:14:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-09-26:/how-to-elk-the-elasticsearch-logstash-kibana-stack.html</id><summary type="html">&lt;p&gt;This is just an update of the &lt;a href="http://wiki.jokeru.ro/centralizing-logs" title="Centralizing Logs"&gt;Centralizing
Logs&lt;/a&gt;
post.&lt;br&gt;
The solution is more mature and it's getting easier and easier to
install all the components.&lt;br&gt;
Elasticsearch Logstash and Kibana are now part of the ELK stack.&lt;/p&gt;
&lt;p&gt;So here we go:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# java 7 required&lt;br&gt;
## on debian 7 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is just an update of the &lt;a href="http://wiki.jokeru.ro/centralizing-logs" title="Centralizing Logs"&gt;Centralizing
Logs&lt;/a&gt;
post.&lt;br&gt;
The solution is more mature and it's getting easier and easier to
install all the components.&lt;br&gt;
Elasticsearch Logstash and Kibana are now part of the ELK stack.&lt;/p&gt;
&lt;p&gt;So here we go:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# java 7 required&lt;br&gt;
## on debian 7&lt;br&gt;
\$ apt-get install openjdk-7-jre-headless&lt;br&gt;
## on debian 6 only java 6 is available, so we need to do a trick&lt;br&gt;
\$ echo 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise
main' &gt;&gt; /etc/apt/sources.list&lt;br&gt;
\$ apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys
EEA14886&lt;br&gt;
\$ apt-get update &amp;amp;&amp;amp; apt-get install oracle-java7-installer -y&lt;/p&gt;
&lt;p&gt;\$ wget -qO - http://packages.elasticsearch.org/GPG-KEY-elasticsearch |
apt-key add -&lt;br&gt;
\$ echo 'deb http://packages.elasticsearch.org/elasticsearch/1.3/debian
stable main' &gt;&gt; /etc/apt/sources.list&lt;br&gt;
\$ apt-get update &amp;amp;&amp;amp; apt-get install elasticsearch&lt;br&gt;
\$ update-rc.d elasticsearch defaults&lt;br&gt;
\$ vi /etc/default/elasticsearch&lt;br&gt;
\$ vi /etc/elasticsearch/elasticsearch.yml&lt;br&gt;
\$ /etc/init.d/elasticsearch start&lt;/p&gt;
&lt;p&gt;\$ echo 'deb http://packages.elasticsearch.org/logstash/1.4/debian
stable main' &gt;&gt; /etc/apt/sources.list&lt;br&gt;
\$ apt-get update &amp;amp;&amp;amp; apt-get install logstash&lt;br&gt;
\$ update-rc.d logstash defaults&lt;br&gt;
\$ vi /etc/default/logstash&lt;br&gt;
\$ vi /etc/logstash/conf.d/logstash.conf&lt;br&gt;
\$ /etc/init.d/logstash start&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Debian"></category><category term="elasticsearch"></category><category term="elk"></category><category term="kibana"></category><category term="logs"></category><category term="logstash"></category></entry><entry><title>Configure local storage as Raw Device Mapping</title><link href="http://wiki.jokeru.ro/howto-configure-local-storage-as-raw-device-mapping.html" rel="alternate"></link><published>2014-08-18T22:44:00+01:00</published><updated>2014-08-18T22:44:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-08-18:/howto-configure-local-storage-as-raw-device-mapping.html</id><summary type="html">&lt;p&gt;By default, local storage devices are disabled as potential RDM
candidates on an ESXi/ESX host. To enable it, you need to perform the
following set of actions (having a vm named "w7" stored on the "ds"
datastore).&lt;/p&gt;
&lt;p&gt;SSH Host&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# get the disk you want to be …&lt;/p&gt;</summary><content type="html">&lt;p&gt;By default, local storage devices are disabled as potential RDM
candidates on an ESXi/ESX host. To enable it, you need to perform the
following set of actions (having a vm named "w7" stored on the "ds"
datastore).&lt;/p&gt;
&lt;p&gt;SSH Host&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# get the disk you want to be presented as a Raw Device (the one with
no partitions configured - S1DA7CKC)&lt;br&gt;
\$ ls /vmfs/devices/disks/  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST1000VX0002D1CU162__________________________________S1DA4TCN  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST1000VX0002D1CU162__________________________________S1DA4TCN:1  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST1000VX0002D1CU162__________________________________S1DA7CKC  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST3500411SV_________________________________________Z2ASKZZQ  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST3500411SV_________________________________________Z2ASKZZQ:1  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST3500411SV_________________________________________Z2ASL00N  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST3500411SV_________________________________________Z2ASL00N:1  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST3500411SV_________________________________________Z2ASL00N:2  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST3500411SV_________________________________________Z2ASL00N:3  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST3500411SV_________________________________________Z2ASL00N:5  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST3500411SV_________________________________________Z2ASL00N:6  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST3500411SV_________________________________________Z2ASL00N:7  &lt;/p&gt;
&lt;p&gt;t10.ATA_____ST3500411SV_________________________________________Z2ASL00N:8&lt;br&gt;
vml.0100000000202020202020202020202020533144413454434e535431303030&lt;br&gt;
vml.0100000000202020202020202020202020533144413454434e535431303030:1&lt;br&gt;
vml.01000000002020202020202020202020205331444137434b43535431303030&lt;br&gt;
vml.01000000002020202020202020202020205a3241534b5a5a51535433353030&lt;br&gt;
vml.01000000002020202020202020202020205a3241534b5a5a51535433353030:1&lt;br&gt;
vml.01000000002020202020202020202020205a3241534c30304e535433353030&lt;br&gt;
vml.01000000002020202020202020202020205a3241534c30304e535433353030:1&lt;br&gt;
vml.01000000002020202020202020202020205a3241534c30304e535433353030:2&lt;br&gt;
vml.01000000002020202020202020202020205a3241534c30304e535433353030:3&lt;br&gt;
vml.01000000002020202020202020202020205a3241534c30304e535433353030:5&lt;br&gt;
vml.01000000002020202020202020202020205a3241534c30304e535433353030:6&lt;br&gt;
vml.01000000002020202020202020202020205a3241534c30304e535433353030:7&lt;br&gt;
vml.01000000002020202020202020202020205a3241534c30304e535433353030:8&lt;/p&gt;
&lt;p&gt;# create a RDM passthru for that disk&lt;br&gt;
\$ vmkfstools -z
/vmfs/devices/disks/t10.ATA_____ST1000VX0002D1CU162__________________________________S1DA7CKC
/vmfs/volumes/ds/w7/local-rdm.vmdk&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;vSphere&lt;br&gt;
[cc]&lt;br&gt;
right-click the "w7" vm&lt;br&gt;
click "Edit Settings"&lt;br&gt;
click "Add"&lt;br&gt;
select "Hard Disk"&lt;br&gt;
select "Use an existing virtual disk"&lt;br&gt;
browse to "ds/w7/local-rdm.vmdk" and click "Next"&lt;br&gt;
click "Next"&lt;br&gt;
click "Finish"&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;You should now see your new hard disk in the virtual machine inventory
as Mapped Raw LUN.&lt;/p&gt;</content><category term="raw"></category><category term="rdm"></category><category term="VMware"></category></entry><entry><title>Master MongoDB in 5 minutes</title><link href="http://wiki.jokeru.ro/howto-master-mongodb-in-5-minutes.html" rel="alternate"></link><published>2014-08-03T20:30:00+01:00</published><updated>2014-08-03T20:30:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-08-03:/howto-master-mongodb-in-5-minutes.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.mongodb.org/about/" title="http://www.mongodb.org/about/"&gt;MongoDB&lt;/a&gt;
is a document database that provides high performance, high availability
and easy scalability. This post is a simple crash course about how to
install MongoDB, start it using the default configuration and some basic
DBA commands. If you need a complex setup with clusters, ha, sharding,
replicas ... this is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.mongodb.org/about/" title="http://www.mongodb.org/about/"&gt;MongoDB&lt;/a&gt;
is a document database that provides high performance, high availability
and easy scalability. This post is a simple crash course about how to
install MongoDB, start it using the default configuration and some basic
DBA commands. If you need a complex setup with clusters, ha, sharding,
replicas ... this is not the place to be.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/&lt;br&gt;
\$ apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv
7F0CEB10&lt;br&gt;
\$ echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart
dist 10gen' | tee /etc/apt/sources.list.d/mongodb.list&lt;br&gt;
\$ apt-get update&lt;br&gt;
\$ apt-get install mongodb-org -y&lt;br&gt;
\$ vi /etc/mongod.conf # update configuration if needed&lt;br&gt;
\$ service mongod restart&lt;br&gt;
# data - /var/lib/mongodb/&lt;br&gt;
# logs - /var/log/mongodb/mongod.log&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DBA&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ mongo --host 127.0.0.1 --port 27017 # connects automatically to the
"test" db if no db is provided&lt;br&gt;
MongoDB shell version: 2.6.3&lt;br&gt;
connecting to: 127.0.0.1:27017/test&lt;br&gt;
Welcome to the MongoDB shell.&lt;br&gt;
For interactive help, type "help".&lt;br&gt;
For more comprehensive documentation, see&lt;br&gt;
http://docs.mongodb.org/&lt;br&gt;
Questions? Try the support group&lt;br&gt;
http://groups.google.com/group/mongodb-user&lt;/p&gt;
&lt;p&gt;&gt; db # get current db&lt;br&gt;
test&lt;/p&gt;
&lt;p&gt;&gt; show dbs # get dbs&lt;br&gt;
admin (empty)&lt;br&gt;
local 0.078GB&lt;/p&gt;
&lt;p&gt;&gt; use my-db # create and select "my-db" db&lt;br&gt;
switched to db my-db&lt;/p&gt;
&lt;p : _name_="&amp;quot;name&amp;quot;" _test="&amp;quot;test" string_="string&amp;quot;"&gt;&gt; a = { name: "test string" } # create the "a" document (row)&lt;br&gt;&lt;/p&gt;
&lt;p 10 : _x_="&amp;quot;x&amp;quot;"&gt;&gt; b = { x : 10 } # create the "b" document (row)&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&gt; db.data.insert(a) # insert the "a" document into "data" collection
(table)&lt;br&gt;
WriteResult({ "nInserted" : 1 })&lt;/p&gt;
&lt;p&gt;&gt; db.data.insert(b) # insert the "b" document into "data" collection
(table)&lt;br&gt;
WriteResult({ "nInserted" : 1 })&lt;/p&gt;
&lt;p&gt;&gt; show collections # list all collections (tables) from "my-db" db&lt;br&gt;
data&lt;br&gt;
system.indexes&lt;/p&gt;
&lt;p 10 : ObjectId_53de0debc1332623cc5635d6_="ObjectId(&amp;quot;53de0debc1332623cc5635d6&amp;quot;)," _95_id_="&amp;quot;_id&amp;quot;" _x_="&amp;quot;x&amp;quot;"&gt;&gt; db.data.find() # list all documents from "data" collection&lt;br&gt;
{ "_id" : ObjectId("53de0de6c1332623cc5635d5"), "name" : "test string"
}&lt;br&gt;&lt;/p&gt;
&lt;p : ObjectId_53de0de6c1332623cc5635d5_="ObjectId(&amp;quot;53de0de6c1332623cc5635d5&amp;quot;)," _95_id_="&amp;quot;_id&amp;quot;" _name_="&amp;quot;name&amp;quot;" _test="&amp;quot;test" string_="string&amp;quot;
"&gt;&gt; db.data.find().limit(1) # list only the first document from "data"
collection&lt;br&gt;&lt;/p&gt;
&lt;p 10 : ObjectId_53de0debc1332623cc5635d6_="ObjectId(&amp;quot;53de0debc1332623cc5635d6&amp;quot;)," _95_id_="&amp;quot;_id&amp;quot;" _x_="&amp;quot;x&amp;quot;"&gt;&gt; db.data.find( { x : 10 } ) # find a specific document in the "data"
collection&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&gt; db.data.remove({}) # remove all documents from "data" collection
(indexes will not be removed)&lt;br&gt;
WriteResult({ "nRemoved" : 2 })&lt;/p&gt;
&lt;p&gt;&gt; db.data.drop() # remove indexes also&lt;br&gt;
TRUE&lt;/p&gt;
&lt;p 1 : _dropped_="&amp;quot;dropped&amp;quot;" _my-db_="&amp;quot;my-db&amp;quot;," _ok_="&amp;quot;ok&amp;quot;"&gt;&gt; db.dropDatabase() # drop current database&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&gt; db # we're still using "my-db" db, but now it's empty&lt;br&gt;
my-db&lt;/p&gt;
&lt;p&gt;&gt; show collections # no collections&lt;/p&gt;
&lt;p&gt;&gt; show dbs # "my-db" shows empty&lt;br&gt;
admin (empty)&lt;br&gt;
local 0.078GB&lt;br&gt;
my-db (empty)&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="mongodb"></category><category term="nosql"></category><category term="Ubuntu"></category></entry><entry><title>Enhance storage performance with LVM Striping</title><link href="http://wiki.jokeru.ro/howto-enhance-storage-performance-with-lvm-striping.html" rel="alternate"></link><published>2014-07-14T16:15:00+01:00</published><updated>2014-07-14T16:15:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-07-14:/howto-enhance-storage-performance-with-lvm-striping.html</id><summary type="html">&lt;p&gt;When you write data to an LVM logical volume, the file system lays the
data out across the underlying physical volumes. You can control the way
the data is written to the physical volumes by creating a striped
logical volume. For large sequential reads and writes, this can improve
the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When you write data to an LVM logical volume, the file system lays the
data out across the underlying physical volumes. You can control the way
the data is written to the physical volumes by creating a striped
logical volume. For large sequential reads and writes, this can improve
the efficiency of the data I/O.&lt;/p&gt;
&lt;p&gt;Striping enhances performance by writing data to a predetermined number
of physical volumes in round-round fashion. With striping, I/O can be
done in parallel. In some situations, this can result in near-linear
performance gain for each additional physical volume in the stripe.&lt;/p&gt;
&lt;p&gt;Let's make a simple test using a VM and 2 disks (each disk located on a
different Datastore): /dev/sdb &amp;amp; /dev/sdc&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ fdisk /dev/sdb # new, primary, 1, type lvm&lt;br&gt;
\$ fdisk /dev/sdc # new, primary, 1, type lvm&lt;br&gt;
\$ pvcreate /dev/sdb1&lt;br&gt;
Physical volume "/dev/sdb1" successfully created&lt;br&gt;
\$ pvcreate /dev/sdc1&lt;br&gt;
Physical volume "/dev/sdc1" successfully created&lt;br&gt;
\$ vgcreate vg /dev/sdb1 /dev/sdc1&lt;br&gt;
Volume group "vg" successfully created&lt;br&gt;
\$ lvcreate -n lv_strips -l 50%FREE -i 2 -I 16 vg&lt;br&gt;
Logical volume "lv_strips" created&lt;br&gt;
\$ lvcreate -n lv_default -l 100%FREE vg&lt;br&gt;
Logical volume "lv_default" created&lt;br&gt;
\$ lvs --segments&lt;br&gt;
LV VG Attr #Str Type SSize&lt;br&gt;
lv_default vg -wi-a- 1 linear 8.00g&lt;br&gt;
lv_default vg -wi-a- 1 linear 8.00g&lt;br&gt;
lv_strips vg -wi-a- 2 striped 15.99g&lt;/p&gt;
&lt;p&gt;# testing with one thread&lt;br&gt;
\$ iozone -I -t1 -i0 -s800m -r16k -F /dev/mapper/vg-lv_default | grep
'Avg throughput per process'&lt;br&gt;
Avg throughput per process = 101980.33 KB/sec&lt;br&gt;
Avg throughput per process = 98248.98 KB/sec&lt;br&gt;
\$ iozone -I -t1 -i0 -s800m -r16k -F /dev/mapper/vg-lv_strips | grep
'Avg throughput per process'&lt;br&gt;
Avg throughput per process = 99363.76 KB/sec&lt;br&gt;
Avg throughput per process = 93670.05 KB/sec&lt;/p&gt;
&lt;p&gt;# testing using two threads&lt;br&gt;
\$ iozone -I -t2 -i0 -s400m -r16k -F /dev/mapper/vg-lv_default
/dev/mapper/vg-lv_default | grep 'Avg throughput per process'&lt;br&gt;
Avg throughput per process = 16651.11 KB/sec&lt;br&gt;
Avg throughput per process = 16810.86 KB/sec&lt;br&gt;
\$ iozone -I -t2 -i0 -s400m -r16k -F /dev/mapper/vg-lv_strips
/dev/mapper/vg-lv_strips | grep 'Avg throughput per process'&lt;br&gt;
Avg throughput per process = 34267.38 KB/sec&lt;br&gt;
Avg throughput per process = 33828.65 KB/sec&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conclusion:&lt;/strong&gt;&lt;br&gt;
- Striped LVM is faster than Linear LVM when using more processes than
the strips number&lt;br&gt;
- if you have only one process writing on the disk, there is no need
for striping&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;info:
&lt;a href="http://www.moredevs.ro/profitbricks-storage-boost/" title="http://www.moredevs.ro/profitbricks-storage-boost/"&gt;http://www.moredevs.ro/profitbricks-storage-boost/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="IOPS"></category><category term="iozone"></category><category term="lvm"></category><category term="Performance"></category><category term="storage"></category><category term="striping"></category></entry><entry><title>Server to server realtime communication using Redis publish/subscribe</title><link href="http://wiki.jokeru.ro/howto-server-to-server-realtime-communication-using-redis-publish-subscribe.html" rel="alternate"></link><published>2014-07-10T00:15:00+01:00</published><updated>2014-07-10T00:15:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-07-10:/howto-server-to-server-realtime-communication-using-redis-publish-subscribe.html</id><summary type="html">&lt;p&gt;If you have a master / slave(s) architecture and you need the master to
continuously update the slave(s), the publish/subscribe paradigm can be
used. With pub/sub, one application publishes some data to a digital
channel. Applications that are interested in receiving the data can
subscribe to the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you have a master / slave(s) architecture and you need the master to
continuously update the slave(s), the publish/subscribe paradigm can be
used. With pub/sub, one application publishes some data to a digital
channel. Applications that are interested in receiving the data can
subscribe to the appropriate channel and receive all the data that is
published to it.&lt;/p&gt;
&lt;p&gt;The recipe for this master to slave(s) communication is:&lt;br&gt;
- a redis server (or cluster if you need availability)&lt;br&gt;
- one publisher (a python script using redis-py library)&lt;br&gt;
- one (or many) subscriber(s) (a python script using redis-py library)&lt;/p&gt;
&lt;p&gt;The suggested way of installing Redis is compiling it from sources as
Redis has no dependencies other than a working GCC compiler and libc.
Installing it using the package manager of your Linux distribution is
somewhat discouraged as usually the available version is not the
latest.&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ cd /usr/src/&lt;br&gt;
\$ wget http://download.redis.io/redis-stable.tar.gz&lt;br&gt;
\$ tar -xvzf redis-stable.tar.gz&lt;br&gt;
\$ cd redis-stable&lt;br&gt;
\$ make distclean&lt;br&gt;
\$ make&lt;br&gt;
\$ cp src/redis-server /usr/local/bin/&lt;br&gt;
\$ cp src/redis-cli /usr/local/bin/&lt;br&gt;
# start redis&lt;br&gt;
\$ redis-server &amp;amp;&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;On a slave:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ apt-get install python python-pip -y&lt;br&gt;
\$ pip install redis&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; sub.py&lt;br&gt;
#!/usr/bin/python&lt;br&gt;
import redis&lt;br&gt;
import sys&lt;br&gt;
r = redis.Redis("10.20.30.40")&lt;br&gt;
ps_obj=r.pubsub()&lt;br&gt;
ps_obj.subscribe(sys.argv[1])&lt;br&gt;
for item in ps_obj.listen():&lt;br&gt;
if item['data'] != 1:&lt;br&gt;
print ("Master said: " + str(item['data']))&lt;br&gt;
EOF&lt;br&gt;
\$ chmod +x sub.py&lt;br&gt;
\$ ./sub.py orders&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;On Master:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ apt-get install python python-pip -y&lt;br&gt;
\$ pip install redis&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; pub.py&lt;br&gt;
#!/usr/bin/python&lt;br&gt;
import redis&lt;br&gt;
import sys&lt;br&gt;
r = redis.Redis("10.20.30.40")&lt;br&gt;
r.publish(sys.argv[1],sys.argv[2])&lt;br&gt;
EOF&lt;br&gt;
\$ chmod +x pub.py&lt;br&gt;
\$ ./pub.py orders "hello slaves"&lt;br&gt;
\$ ./pub.py orders "how are we feeling today ?"&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;And this will produce the following output on the slave:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ ./sub.py orders&lt;br&gt;
Master said: hello slaves&lt;br&gt;
Master said: how are we feeling today ?&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="channel"></category><category term="master/slave"></category><category term="pub/sub"></category><category term="python"></category><category term="redis"></category></entry><entry><title>Fail2Ban brute force protection - custom filter</title><link href="http://wiki.jokeru.ro/howto-fail2ban-brute-force-protection-custom-filter.html" rel="alternate"></link><published>2014-06-14T22:32:00+01:00</published><updated>2014-06-14T22:32:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-06-14:/howto-fail2ban-brute-force-protection-custom-filter.html</id><summary type="html">&lt;p&gt;Fail2Ban is a very small and relatively simple IDS. This tool will scan
your logs against predefined patterns and will block abusers.&lt;/p&gt;
&lt;p&gt;Fail2Ban uses 3 concepts:&lt;br&gt;
- filters are the regular expressions you want to look for&lt;br&gt;
- actions are the steps you want to take when you find something&lt;br&gt;
- jails are …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Fail2Ban is a very small and relatively simple IDS. This tool will scan
your logs against predefined patterns and will block abusers.&lt;/p&gt;
&lt;p&gt;Fail2Ban uses 3 concepts:&lt;br&gt;
- filters are the regular expressions you want to look for&lt;br&gt;
- actions are the steps you want to take when you find something&lt;br&gt;
- jails are what you create to tie together a log file, a filter and an
action&lt;/p&gt;
&lt;p&gt;The tool already provides many jail configs, but we need a custom one
because we'll be using a custom log format (we'll be securing a PHP
Login API against brute force attacks).&lt;/p&gt;
&lt;p&gt;Here are the steps needed to get this working:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ apt-get install fail2ban&lt;/p&gt;
&lt;p&gt;# create the custom jail&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; /etc/fail2ban/jail.local&lt;br&gt;
[api-login]&lt;br&gt;
enabled = true&lt;br&gt;
port = http,https&lt;br&gt;
filter = api-login&lt;br&gt;
backend = polling&lt;br&gt;
logpath = /var/log/api/user-login&lt;br&gt;
maxretry = 3&lt;br&gt;
bantime = 600&lt;br&gt;
EOF&lt;br&gt;
# create the custom filter&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; /etc/fail2ban/filter.d/api-login.conf&lt;br&gt;
[Definition]&lt;br&gt;
# log pattern&lt;br&gt;
#2014-06-13T11:19:27+00:00,n/a,41.71.144.64,,&lt;br&gt;
#2014-06-13T11:24:04+00:00,failed,41.71.144.64,admin,admin&lt;br&gt;
failregex = .*,(failed|n/a),&lt;host&gt;,.*&lt;br&gt;
ignoreregex =&lt;br&gt;
EOF&lt;br&gt;
# test the filter&lt;br&gt;
\$ fail2ban-regex /var/log/api/user-login
/etc/fail2ban/filter.d/api-login.conf&lt;/p&gt;
&lt;p&gt;\$ service fail2ban start&lt;br&gt;
\$ fail2ban-client status&lt;br&gt;
Status&lt;br&gt;
|- Number of jail: 1&lt;br&gt;
`- Jail list: api-login&lt;br&gt;
\$ fail2ban-client status api-login&lt;br&gt;
Status for the jail: api-login&lt;br&gt;
|- filter&lt;br&gt;
| |- File list: /var/log/api/user-login&lt;br&gt;
| |- Currently failed: 0&lt;br&gt;
| `- Total failed: 0&lt;br&gt;
`- action&lt;br&gt;
|- Currently banned: 0&lt;br&gt;
| `- IP list:&lt;br&gt;
`- Total banned: 0&lt;br&gt;
\$ iptables -L&lt;br&gt;
Chain INPUT (policy ACCEPT)&lt;br&gt;
target prot opt source destination&lt;br&gt;
fail2ban-api-login tcp -- anywhere anywhere multiport dports www,https&lt;/p&gt;
&lt;p&gt;Chain FORWARD (policy ACCEPT)&lt;br&gt;
target prot opt source destination&lt;/p&gt;
&lt;p&gt;Chain OUTPUT (policy ACCEPT)&lt;br&gt;
target prot opt source destination&lt;/p&gt;
&lt;p&gt;Chain fail2ban-api-login (1 references)&lt;br&gt;
target prot opt source destination&lt;br&gt;
RETURN all -- anywhere anywhere&lt;/p&gt;
&lt;p&gt;# logs&lt;br&gt;
\$ tail -f /var/log/fail2ban.log&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="brute force"></category><category term="Debian"></category><category term="fail2ban"></category><category term="FireWall"></category><category term="ids"></category></entry><entry><title>Disk I/O / Filesystem Performance Testing</title><link href="http://wiki.jokeru.ro/disk-io-filesystem-performance-testing.html" rel="alternate"></link><published>2014-06-08T22:00:00+01:00</published><updated>2014-06-08T22:00:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-06-08:/disk-io-filesystem-performance-testing.html</id><summary type="html">&lt;p&gt;* Disk sector size is 4KB (Advanced Format)&lt;/p&gt;
&lt;p&gt;* If you want to test the disk/raid, the output should be a block
device (/dev/sda2), not a file&lt;/p&gt;
&lt;p&gt;* Understanding Record Size (reclen): IOzone benchmarks a filesystem by
breaking up a file of a given size into records, for example if you …&lt;/p&gt;</summary><content type="html">&lt;p&gt;* Disk sector size is 4KB (Advanced Format)&lt;/p&gt;
&lt;p&gt;* If you want to test the disk/raid, the output should be a block
device (/dev/sda2), not a file&lt;/p&gt;
&lt;p&gt;* Understanding Record Size (reclen): IOzone benchmarks a filesystem by
breaking up a file of a given size into records, for example if you test
a 100MB file with a 1MB record size, it means that 100 operations will
be done to achieve the read/write tests.&lt;/p&gt;
&lt;p&gt;* Be careful about kernel / filesystem caching, use IOzone "-I" if you
want to test the disk and not the filesystem (or "-U" to unmount and
remount the mount point before beginning each test)&lt;/p&gt;
&lt;p&gt;dd&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# flush kernel cache&lt;br&gt;
\$ sync; echo 3 &gt; /proc/sys/vm/drop_caches&lt;/p&gt;
&lt;p&gt;# one big block, Direct IO&lt;br&gt;
\$ dd if=/dev/zero of=/tmp/test.dat oflag=direct bs=1G count=1&lt;br&gt;
1+0 records in&lt;br&gt;
1+0 records out&lt;br&gt;
1073741824 bytes (1.1 GB) copied, 17.719 s, 60.6 MB/s&lt;/p&gt;
&lt;p&gt;# many small blocks, Direct IO&lt;br&gt;
\$ dd if=/dev/zero of=/tmp/test.dat oflag=direct bs=8k count=131072&lt;br&gt;
131072+0 records in&lt;br&gt;
131072+0 records out&lt;br&gt;
1073741824 bytes (1.1 GB) copied, 44.0714 s, 24.4 MB/s&lt;/p&gt;
&lt;p&gt;# many small blocks, Direct IO and Sync after each block&lt;br&gt;
\$ dd if=/dev/zero of=/tmp/test.dat oflag=direct,sync bs=8k
count=131072&lt;br&gt;
131072+0 records in&lt;br&gt;
131072+0 records out&lt;br&gt;
1073741824 bytes (1.1 GB) copied, 205.451 s, 5.2 MB/s&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;iozone&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# add the "non-free" component to /etc/apt/sources.list&lt;br&gt;
\$ apt-get update&lt;br&gt;
\$ apt-get install iozone3 -y&lt;/p&gt;
&lt;p&gt;# auto mode - all tests, file size from 64k to 512MB with a 4k to 16M
record size&lt;br&gt;
\$ iozone -I -a&lt;br&gt;
# output in IOzone OPS&lt;br&gt;
\$ iozone -I -a -O&lt;/p&gt;
&lt;p&gt;# run only sequential and random read/write tests&lt;br&gt;
\$ iozone -I -a -O -i0 -i1 -i2&lt;/p&gt;
&lt;p&gt;# set file size&lt;br&gt;
\$ iozone -I -a -O -i0 -i1 -i2 -s10m&lt;br&gt;
# set record size&lt;br&gt;
\$ iozone -I -a -O -i0 -i1 -i2 -s10m -r16k&lt;/p&gt;
&lt;p&gt;# set file path (to test different mount points)&lt;br&gt;
\$ iozone -I -a -O -i0 -i1 -i2 -s10m -r16k -f /nfs/test&lt;/p&gt;
&lt;p&gt;# include additional timers&lt;br&gt;
\$ iozone -I -a -O -i0 -i1 -i2 -s10m -r16k -f /nfs/test -c -e&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;Some examples:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# local fs&lt;br&gt;
\$ iozone -I -a -O -i0 -i1 -i2 -s10m -r16k -f /root/test.iozone -c -e&lt;br&gt;
random random&lt;br&gt;
KB reclen write rewrite read reread read write&lt;br&gt;
10240 16 6150 4710 5904 6473 1427 842&lt;/p&gt;
&lt;p&gt;# drdb Protocol C over Internet&lt;br&gt;
# (local write operations on the primary node are considered
completed&lt;br&gt;
# only after both the local and the remote disk write have been
confirmed)&lt;br&gt;
\$ iozone -I -a -O -i0 -i1 -i2 -s10m -r16k -f /root/drbd/test.iozone -c
-e&lt;br&gt;
random random&lt;br&gt;
KB reclen write rewrite read reread read write&lt;br&gt;
10240 16 26 26 3419 6140 1675 26&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="benchmark"></category><category term="dd"></category><category term="Debian"></category><category term="disk"></category><category term="filesystem"></category><category term="iozone"></category><category term="Performance"></category></entry><entry><title>tcp_tw_recycle negative effect on NAT</title><link href="http://wiki.jokeru.ro/howto-tcp_tw_recycle-negative-effect-on-nat.html" rel="alternate"></link><published>2014-05-31T14:45:00+01:00</published><updated>2014-05-31T14:45:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-05-31:/howto-tcp_tw_recycle-negative-effect-on-nat.html</id><summary type="html">&lt;p&gt;Due to
&lt;a href="http://wiki.jokeru.ro/howto-eaddrinuse-address-already-in-use" title="EADDRINUSE (Address already in use)"&gt;EADDRINUSE&lt;/a&gt;
errors, &lt;em&gt;net.ipv4.tcp_tw_recycle&lt;/em&gt; was enabled.&lt;/p&gt;
&lt;p&gt;Couple days after the change, a strange behavior was observed:&lt;br&gt;
- a SSH connection could not be established from the jump station
(server1) to the proxy nodes&lt;br&gt;
- the performance graphs were still running ok (monitored from
server2)&lt;br&gt;
- both server1 and server2 were …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Due to
&lt;a href="http://wiki.jokeru.ro/howto-eaddrinuse-address-already-in-use" title="EADDRINUSE (Address already in use)"&gt;EADDRINUSE&lt;/a&gt;
errors, &lt;em&gt;net.ipv4.tcp_tw_recycle&lt;/em&gt; was enabled.&lt;/p&gt;
&lt;p&gt;Couple days after the change, a strange behavior was observed:&lt;br&gt;
- a SSH connection could not be established from the jump station
(server1) to the proxy nodes&lt;br&gt;
- the performance graphs were still running ok (monitored from
server2)&lt;br&gt;
- both server1 and server2 were behind a pfSense FireWall that was
SNAT-ing all outgoing traffic using the same NAT IP&lt;/p&gt;
&lt;p&gt;Debugging the SSH connection:&lt;br&gt;
- traffic was reaching the proxy node at the interface level (syn
packets were received)&lt;br&gt;
- but the SSH daemon was not getting this traffic (ssh
&lt;a href="http://wiki.jokeru.ro/howto-using-strace-to-monitor-system-calls" title="Using strace to monitor System Calls"&gt;strace&lt;/a&gt;)&lt;br&gt;
So the traffic was silently dropped by some kernel mechanism.&lt;/p&gt;
&lt;p&gt;Digging more on the &lt;em&gt;net.ipv4.tcp_tw_recycle&lt;/em&gt; parameter, the TCP
manual (man tcp) says:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;tcp_tw_recycle (Boolean; default: disabled; since Linux 2.4)               Enable  fast  recycling  of  TIME_WAIT  sockets.   Enabling this               option is not recommended since this causes problems when  work‐               ing with NAT (Network Address Translation).&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This is our case also, here is the short story (for the complete
picture, check out this
&lt;a href="http://vincent.bernat.im/en/blog/2014-tcp-time-wait-state-linux.html" title="http://vincent.bernat.im/en/blog/2014-tcp-time-wait-state-linux.html"&gt;post&lt;/a&gt;):&lt;br&gt;
- tcp_tw_recycle uses the latest tcp_timestamp values for known
connections (tcp_timestamp option is enabled by default on recent
kernels) and saves them in a dedicated table&lt;br&gt;
- every new connection's tcp_timestamp will be checked against that
table and will get dropped unless the tcp_timestamp value respects some
conditions&lt;br&gt;
- when you're sending NAT'ed traffic, the very first connection will be
used as a tcp_timestamp baseline&lt;br&gt;
- so if you're sending traffic (with tcp_timestamp enabled) from any
other server except the one that connected for the first time, you'll
get dropped - as a Protection Against Wrapped Sequence numbers (PAWS)&lt;/p&gt;
&lt;p&gt;Quick fix:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# on server1&lt;br&gt;
\$ echo '0' &gt; /proc/sys/net/ipv4/tcp_timestamps&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Linux"></category><category term="paws"></category><category term="Performance"></category><category term="socket"></category><category term="tcp_timestamp"></category><category term="tcp_tw_recycle"></category><category term="Tuning"></category></entry><entry><title>Server Backup with DRBD (and LVM + Snapshots)</title><link href="http://wiki.jokeru.ro/howto-server-backup-with-drbd-and-lvm-snapshots.html" rel="alternate"></link><published>2014-05-26T23:23:00+01:00</published><updated>2014-05-26T23:23:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-05-26:/howto-server-backup-with-drbd-and-lvm-snapshots.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.drbd.org/" title="http://www.drbd.org/"&gt;Distributed Replicated Block Device
(DRBD)&lt;/a&gt; mirrors block
devices between multiple hosts via an assigned network to form high
availability clusters. The replication is transparent to other
applications on the host systems. Any block device hard disks,
partitions, RAID devices, logical volumes, etc can be mirrored. DRBD can
be understood as …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.drbd.org/" title="http://www.drbd.org/"&gt;Distributed Replicated Block Device
(DRBD)&lt;/a&gt; mirrors block
devices between multiple hosts via an assigned network to form high
availability clusters. The replication is transparent to other
applications on the host systems. Any block device hard disks,
partitions, RAID devices, logical volumes, etc can be mirrored. DRBD can
be understood as network based raid-1.&lt;/p&gt;
&lt;p&gt;DRBD can also be used as a backup solution over network or data disaster
recovery solution. In our setup we'll be using the following layers:&lt;br&gt;
[cc lang='bash']  &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;| physical disk |&lt;/h2&gt;
&lt;h2&gt;| lvm |&lt;/h2&gt;
&lt;h2&gt;| drbd |&lt;/h2&gt;
&lt;h2&gt;| ext4 |&lt;/h2&gt;
&lt;p&gt;[/cc]&lt;br&gt;
The second layer is LVM because on the backup server you cannot access
the data directly (DRBD will not allow to mount the /dev/drbd0 volume,
it’s locked to the drbd0 process). But snapshots allow us to subvert the
lock a bit. Or at least give us read access to the existing data.&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# node01 is the main server&lt;br&gt;
# /dev/sdb is the disk containing important data, 16g size&lt;br&gt;
\$ apt-get install drbd8-utils lvm2&lt;br&gt;
\$ fdisk /dev/sdb # create 1 primary lvm partition (type 8e), 16g
size&lt;br&gt;
\$ pvcreate /dev/sdb1&lt;br&gt;
\$ vgcreate vg0 /dev/sdb1&lt;br&gt;
\$ lvcreate -l 100%FREE -n lv0 vg0&lt;br&gt;
\$ lvdisplay | grep "Current LE" # this value will be used on node02
setup&lt;br&gt;
Current LE 4095&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# node02 is the backup server&lt;br&gt;
# /dev/sdb is the disk storing the backup data, 32g size&lt;br&gt;
\$ apt-get install drbd8-utils lvm2&lt;br&gt;
\$ fdisk /dev/sdb # create 1 primary lvm partition (type 8e), 32g
size&lt;br&gt;
\$ pvcreate /dev/sdb1&lt;br&gt;
\$ vgcreate vg0 /dev/sdb1&lt;br&gt;
\$ lvcreate -l 4095 -n lv0 vg0 # this is the "Current LE" value from
node01&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;Configure and start DRBD on both servers:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# node01 &amp;amp; node02&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; /etc/drbd.conf&lt;br&gt;
global { usage-count no; }&lt;br&gt;
common { syncer { rate 1000M; } }&lt;br&gt;
resource r0 {&lt;br&gt;
protocol C; # Synchronous replication protocol&lt;br&gt;
startup {&lt;br&gt;
wfc-timeout 15;&lt;br&gt;
degr-wfc-timeout 60;&lt;br&gt;
}&lt;br&gt;
net {&lt;br&gt;
cram-hmac-alg sha1;&lt;br&gt;
shared-secret "secret";&lt;br&gt;
}&lt;br&gt;
on node01 {&lt;br&gt;
device /dev/drbd0;&lt;br&gt;
disk /dev/vg0/lv0;&lt;br&gt;
address 10.20.30.40:7788;&lt;br&gt;
meta-disk internal;&lt;br&gt;
}&lt;br&gt;
on node02 {&lt;br&gt;
device /dev/drbd0;&lt;br&gt;
disk /dev/vg0/lv0;&lt;br&gt;
address 50.60.70.80:7788;&lt;br&gt;
meta-disk internal;&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
EOF&lt;br&gt;
\$ drbdadm create-md r0&lt;br&gt;
\$ service drbd start&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;Run this only on the main server to promote node01 as primary and start
syncing the data to node02:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# node01&lt;br&gt;
\$ drbdadm -- --overwrite-data-of-peer primary all&lt;br&gt;
\$ watch -n1 "cat /proc/drbd"&lt;br&gt;
# wait until the data is fully synced&lt;br&gt;
\$ mkfs.ext4 /dev/drbd0&lt;br&gt;
\$ mkdir /important&lt;br&gt;
\$ echo '/dev/drbd0 /important ext4 errors=remount-ro 0 1' &gt;&gt;
/etc/fstab&lt;br&gt;
\$ mount -a&lt;br&gt;
# let's add some content&lt;br&gt;
\$ cd /important/&lt;br&gt;
\$ dd if=/dev/zero of=zero.100 bs=1M count=100&lt;br&gt;
\$ md5sum zero.100&lt;br&gt;
2f282b84e7e608d5852449ed940bfc51 zero.100&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;Now let's test if the data is actually syncing between the main and the
backup:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# node01&lt;br&gt;
\$ umount /important&lt;br&gt;
\$ drbdadm secondary r0 # demote the main server to the secondary role&lt;/p&gt;
&lt;p&gt;# node02&lt;br&gt;
\$ drbdadm primary r0 # promote the backup server to the primary role&lt;br&gt;
\$ mkdir /important&lt;br&gt;
\$ mount /dev/drbd0 /important&lt;br&gt;
\$ cd /important&lt;br&gt;
\$ ls&lt;br&gt;
lost+found zero.100&lt;br&gt;
\$ md5sum zero.100&lt;br&gt;
2f282b84e7e608d5852449ed940bfc51 zero.100 # same md5sum as main
server&lt;br&gt;
\$ service drbd status&lt;br&gt;
drbd driver loaded OK; device status:&lt;br&gt;
version: 8.3.7 (api:88/proto:86-91)&lt;br&gt;
srcversion: EE47D8BF18AC166BE219757&lt;br&gt;
m:res cs ro ds p mounted fstype&lt;br&gt;
0:r0 Connected Primary/Secondary UpToDate/UpToDate C /important ext4&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;Let's switch back to the original scenario:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# node02&lt;br&gt;
\$ umount /important&lt;br&gt;
\$ drbdadm secondary r0&lt;/p&gt;
&lt;p&gt;# node01&lt;br&gt;
\$ drbdadm primary r0 # promote the backup server to the primary role&lt;br&gt;
\$ mount -a&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;Now that everything is working as expected, let's take advantage of our
remote real-time backup system using LVM Snapshots:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# node02&lt;br&gt;
\$ lvcreate -L1G -s -n lv0-bkp01 /dev/vg0/lv0&lt;br&gt;
\$ mkdir /important-bkp01&lt;br&gt;
\$ mount -t ext4 /dev/vg0/lv0-bkp01 /important-bkp01/&lt;br&gt;
\$ cd /important-bkp01/&lt;br&gt;
\$ ls&lt;br&gt;
lost+found zero.100&lt;br&gt;
\$ md5sum zero.100&lt;br&gt;
2f282b84e7e608d5852449ed940bfc51 zero.100 # same md5sum as main
server&lt;br&gt;
[/cc]&lt;br&gt;
You can cron the creation / removal of snapshots according to your
needs (and your disk size) to provide either a back-in-time file
solution or a complete mirror access to the data on primary server.&lt;/p&gt;</content><category term="backup"></category><category term="drbd"></category><category term="High Availability"></category><category term="lvm"></category><category term="RAID"></category><category term="snapshot"></category></entry><entry><title>EADDRINUSE (Address already in use)</title><link href="http://wiki.jokeru.ro/howto-eaddrinuse-address-already-in-use.html" rel="alternate"></link><published>2014-05-23T23:22:00+01:00</published><updated>2014-05-23T23:22:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-05-23:/howto-eaddrinuse-address-already-in-use.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;The problem:&lt;/strong&gt; while running a proxy service (squid), customers start
getting this error message:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Socket Failure The system returned: (98) Address already in use Squid is unable to create a TCP socket, presumably due to excessive load. Please retry your request.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;By checking the logs and running a
&lt;a href="http://wiki.jokeru.ro/howto-using-strace-to-monitor-system-calls" title="Using strace to monitor System Calls"&gt;strace&lt;/a&gt;
on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;The problem:&lt;/strong&gt; while running a proxy service (squid), customers start
getting this error message:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Socket Failure The system returned: (98) Address already in use Squid is unable to create a TCP socket, presumably due to excessive load. Please retry your request.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;By checking the logs and running a
&lt;a href="http://wiki.jokeru.ro/howto-using-strace-to-monitor-system-calls" title="Using strace to monitor System Calls"&gt;strace&lt;/a&gt;
on the process, we get this:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ tail /var/log/squid/cache.log&lt;br&gt;
2014/05/22 20:12:40| commBind: Cannot bind socket FD 482 to
10.20.30.40:0: (98) Address already in use&lt;/p&gt;
&lt;p&gt;\$ strace -p `cat /var/run/squid.pid` -e bind&lt;br&gt;
bind(482, {sa_family=AF_INET, sin_port=htons(0),
sin_addr=inet_addr("10.20.30.40")}, 16) = -1 EADDRINUSE (Address
already in use)&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;Google-ing the error, everybody agrees that "&lt;em&gt;you have run out of free
ports, all available ports are occupied by TIME_WAIT sockets&lt;/em&gt;"&lt;/p&gt;
&lt;p&gt;How can this be possible when you have:&lt;br&gt;
- tcp_fin_timeout = 5&lt;br&gt;
- default local port range (ephemeral ports)&lt;br&gt;
- 50 IPs configured on the outbound interface (tcp_outgoing_address
squid directive)&lt;/p&gt;
&lt;p&gt;The range of ephemeral ports a client program can use (unless otherwise
specified by the program) on modern Linux OS distributions by default is
from 32768 till 61000 (for systems with more than 128 MB RAM) and from
1024 till 4999 (or even less) for systems with less than 128MB of RAM.
This range is defined in the kernel parameter
/proc/sys/net/ipv4/ip_local_port_range and it affects both TCP as
well as UDP client connections.&lt;/p&gt;
&lt;p&gt;Doing a simple math, there should be 50 IPs x (61000 - 32768) Ports =
1.411.600 Sockets available, but the system had only \~30k active !&lt;/p&gt;
&lt;p&gt;&lt;a href="http://aleccolocco.blogspot.ro/2008/11/ephemeral-ports-problem-and-solution.html" title="http://aleccolocco.blogspot.ro/2008/11/ephemeral-ports-problem-and-solution.html"&gt;&lt;strong&gt;The
answer&lt;/strong&gt;&lt;/a&gt;
lies in the following sentence: &lt;em&gt;Linux shares the assigned list of
ephemeral ports across &lt;strong&gt;all local IPs&lt;/strong&gt; for unconnected sockets.&lt;/em&gt;&lt;br&gt;
So no matter how many IPs you have on the server, you'll only be able
to use 28.232 sockets.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The fix:&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# net.ipv4.tcp_tw_reuse didn't help&lt;br&gt;
\$ echo 'net.ipv4.tcp_tw_recycle = 1' &gt;&gt; /etc/sysctl.conf&lt;br&gt;
\$ sysctl -p&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The result:&lt;/strong&gt; the traffic more than doubled while no other metric (cpu
usage, load, response time) was degraded&lt;br&gt;
[caption id="attachment_1128" align="aligncenter"
width="626"]&lt;img alt="tcp_tw_recycle" src="http://wiki.jokeru.ro/wp-content/uploads/2014/05/tcp_tw_recycle.png"&gt;
'tcp_tw_recycle = 1' effect on a busy server[/caption]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; when you fix something, be careful not to &lt;a href="http://wiki.jokeru.ro/howto-tcp_tw_recycle-negative-effect-on-nat" title="tcp_tw_recycle negative effect on NAT"&gt;break something
else&lt;/a&gt;
:)&lt;/p&gt;</content><category term="ephemeral ports"></category><category term="Performance"></category><category term="socket"></category><category term="TCP"></category><category term="tcp_tw_recycle"></category><category term="Tuning"></category></entry><entry><title>Benchmark your Cloud Server - CPU</title><link href="http://wiki.jokeru.ro/howto-benchmark-your-cloud-server-cpu.html" rel="alternate"></link><published>2014-05-12T11:32:00+01:00</published><updated>2014-05-12T11:32:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-05-12:/howto-benchmark-your-cloud-server-cpu.html</id><summary type="html">&lt;p&gt;The internet is full of IaaS Providers, everybody has now their own
Cloud Solution and they're willing to give you a piece (not for free
though).&lt;/p&gt;
&lt;p&gt;Making the right choice is not an easy task. They all seem to offer
similar products for the same price. If you don't need …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The internet is full of IaaS Providers, everybody has now their own
Cloud Solution and they're willing to give you a piece (not for free
though).&lt;/p&gt;
&lt;p&gt;Making the right choice is not an easy task. They all seem to offer
similar products for the same price. If you don't need something fancy,
then it's all about your personal choice.&lt;/p&gt;
&lt;p&gt;But if you need some heavy horse power, you'd better benchmark the
products before going into full production.&lt;/p&gt;
&lt;p&gt;In this post we'll test one of the main resources of a system - &lt;strong&gt;the
CPU&lt;/strong&gt;.&lt;br&gt;
For the test to be relevant, you need to:&lt;br&gt;
- "buy" the same hardware resources, the CPU in our case&lt;br&gt;
- have the same operating system, kernel and updates&lt;br&gt;
- use the same version and options of the testing tools&lt;/p&gt;
&lt;p&gt;For my benchmark, i'll be using two VMs (unfortunately the CPUs differ,
but the tests are still very relevant):&lt;br&gt;
- one Debian vmWare hosted on a dedicated server, 1vCPU @ 3.20GHz
(Intel(R) Core(TM) i7-3930K CPU @ 3.20GHz)&lt;br&gt;
- one M3.medium Amazon Debian instance, 1vCPU @ 2.50GHz (Intel Xeon
E5-2670 Sandy Bridge)&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# vm1&lt;br&gt;
\$ lscpu&lt;br&gt;
Architecture: x86_64&lt;br&gt;
CPU op-mode(s): 32-bit, 64-bit&lt;br&gt;
Byte Order: Little Endian&lt;br&gt;
CPU(s): 1&lt;br&gt;
On-line CPU(s) list: 0&lt;br&gt;
Thread(s) per core: 1&lt;br&gt;
Core(s) per socket: 1&lt;br&gt;
Socket(s): 1&lt;br&gt;
NUMA node(s): 1&lt;br&gt;
Vendor ID: GenuineIntel&lt;br&gt;
CPU family: 6&lt;br&gt;
Model: 45&lt;br&gt;
Stepping: 7&lt;br&gt;
CPU MHz: 3200.025&lt;br&gt;
BogoMIPS: 6400.05&lt;br&gt;
Hypervisor vendor: VMware&lt;br&gt;
Virtualization type: full&lt;br&gt;
L1d cache: 32K&lt;br&gt;
L1i cache: 32K&lt;br&gt;
L2 cache: 256K&lt;br&gt;
L3 cache: 12288K&lt;br&gt;
NUMA node0 CPU(s): 0&lt;/p&gt;
&lt;p&gt;# vm2&lt;br&gt;
\$ lscpu&lt;br&gt;
Architecture: x86_64&lt;br&gt;
CPU op-mode(s): 32-bit, 64-bit&lt;br&gt;
Byte Order: Little Endian&lt;br&gt;
CPU(s): 1&lt;br&gt;
On-line CPU(s) list: 0&lt;br&gt;
Thread(s) per core: 1&lt;br&gt;
Core(s) per socket: 1&lt;br&gt;
Socket(s): 1&lt;br&gt;
NUMA node(s): 1&lt;br&gt;
Vendor ID: GenuineIntel&lt;br&gt;
CPU family: 6&lt;br&gt;
Model: 62&lt;br&gt;
Stepping: 4&lt;br&gt;
CPU MHz: 2500.050&lt;br&gt;
BogoMIPS: 5000.10&lt;br&gt;
Hypervisor vendor: Xen&lt;br&gt;
Virtualization type: full&lt;br&gt;
L1d cache: 32K&lt;br&gt;
L1i cache: 32K&lt;br&gt;
L2 cache: 256K&lt;br&gt;
L3 cache: 25600K&lt;br&gt;
NUMA node0 CPU(s): 0&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7z&lt;/strong&gt; (single threaded use)&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# vm1&lt;br&gt;
\$ apt-get install p7zip-full -y&lt;br&gt;
\$ 7z b&lt;/p&gt;
&lt;p&gt;7-Zip [64] 9.20 Copyright (c) 1999-2010 Igor Pavlov 2010-11-18&lt;br&gt;
p7zip Version 9.20 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,1 CPU)&lt;/p&gt;
&lt;p&gt;RAM size: 1002 MB, # CPU hardware threads: 1&lt;br&gt;
RAM usage: 419 MB, # Benchmark threads: 1&lt;/p&gt;
&lt;p&gt;Dict Compressing | Decompressing&lt;br&gt;
Speed Usage R/U Rating | Speed Usage R/U Rating&lt;br&gt;
KB/s % MIPS MIPS | KB/s % MIPS MIPS&lt;/p&gt;
&lt;p&gt;22: 3804 100 3712 3700 | 40065 100 3628 3617&lt;br&gt;
23: 3553 99 3641 3621 | 39572 100 3638 3623&lt;br&gt;
24: 3363 100 3631 3616 | 39105 99 3651 3628&lt;br&gt;
25: 3222 100 3689 3679 | 38397 99 3633 3611  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Avr: 100 3668 3654 100 3637 3620&lt;br&gt;
Tot: 100 3653 3637&lt;/p&gt;
&lt;p&gt;# vm2&lt;br&gt;
\$ apt-get install p7zip-full -y&lt;br&gt;
\$ 7z b&lt;/p&gt;
&lt;p&gt;7-Zip [64] 9.20 Copyright (c) 1999-2010 Igor Pavlov 2010-11-18&lt;br&gt;
p7zip Version 9.20 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,1 CPU)&lt;/p&gt;
&lt;p&gt;RAM size: 3750 MB, # CPU hardware threads: 1&lt;br&gt;
RAM usage: 419 MB, # Benchmark threads: 1&lt;/p&gt;
&lt;p&gt;Dict Compressing | Decompressing&lt;br&gt;
Speed Usage R/U Rating | Speed Usage R/U Rating&lt;br&gt;
KB/s % MIPS MIPS | KB/s % MIPS MIPS&lt;/p&gt;
&lt;p&gt;22: 1557 88 1729 1515 | 16666 87 1721 1504&lt;br&gt;
23: 1517 87 1770 1546 | 16468 87 1735 1507&lt;br&gt;
24: 1404 87 1735 1509 | 16298 88 1718 1512&lt;br&gt;
25: 1397 88 1814 1595 | 15945 88 1712 1499  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Avr: 87 1762 1541 87 1722 1506&lt;br&gt;
Tot: 87 1742 1524&lt;br&gt;
[/cc]&lt;br&gt;
-&gt; vm1 is 2x faster than vm2&lt;br&gt;
-&gt; on vm2 we couldn't use 100% of the cpu due to high Steal Time (you
can check it with top command while running the benchmark)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sysbench&lt;/strong&gt; (single threaded use)&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# vm1&lt;br&gt;
\$ apt-get install sysbench -y&lt;br&gt;
\$ sysbench --test=cpu --cpu-max-prime=20000 run&lt;br&gt;
sysbench 0.4.12: multi-threaded system evaluation benchmark&lt;/p&gt;
&lt;p&gt;Running the test with following options:&lt;br&gt;
Number of threads: 1&lt;/p&gt;
&lt;p&gt;Doing CPU performance benchmark&lt;/p&gt;
&lt;p&gt;Threads started!&lt;br&gt;
Done.&lt;/p&gt;
&lt;p&gt;Maximum prime number checked in CPU test: 20000&lt;/p&gt;
&lt;p&gt;Test execution summary:&lt;br&gt;
total time: 24.5747s&lt;br&gt;
total number of events: 10000&lt;br&gt;
total time taken by event execution: 24.5737&lt;br&gt;
per-request statistics:&lt;br&gt;
min: 2.40ms&lt;br&gt;
avg: 2.46ms&lt;br&gt;
max: 7.43ms&lt;br&gt;
approx. 95 percentile: 2.46ms&lt;/p&gt;
&lt;p&gt;Threads fairness:&lt;br&gt;
events (avg/stddev): 10000.0000/0.00&lt;br&gt;
execution time (avg/stddev): 24.5737/0.00&lt;/p&gt;
&lt;p&gt;# vm2&lt;br&gt;
\$ apt-get install sysbench -y&lt;br&gt;
\$ sysbench --test=cpu --cpu-max-prime=20000 run&lt;br&gt;
sysbench 0.4.12: multi-threaded system evaluation benchmark&lt;/p&gt;
&lt;p&gt;Running the test with following options:&lt;br&gt;
Number of threads: 1&lt;/p&gt;
&lt;p&gt;Doing CPU performance benchmark&lt;/p&gt;
&lt;p&gt;Threads started!&lt;br&gt;
Done.&lt;/p&gt;
&lt;p&gt;Maximum prime number checked in CPU test: 20000&lt;/p&gt;
&lt;p&gt;Test execution summary:&lt;br&gt;
total time: 59.0544s&lt;br&gt;
total number of events: 10000&lt;br&gt;
total time taken by event execution: 59.0467&lt;br&gt;
per-request statistics:&lt;br&gt;
min: 2.89ms&lt;br&gt;
avg: 5.90ms&lt;br&gt;
max: 19.13ms&lt;br&gt;
approx. 95 percentile: 11.11ms&lt;/p&gt;
&lt;p&gt;Threads fairness:&lt;br&gt;
events (avg/stddev): 10000.0000/0.00&lt;br&gt;
execution time (avg/stddev): 59.0467/0.00&lt;br&gt;
[/cc]&lt;br&gt;
-&gt; sysbench confirms that vm1 is 2x faster than vm2&lt;/p&gt;</content><category term="7z"></category><category term="benchmark"></category><category term="cloud"></category><category term="cpu"></category><category term="sysbench"></category><category term="VM"></category></entry><entry><title>HTTP Proxy: Forward vs Transparent</title><link href="http://wiki.jokeru.ro/howto-http-proxy-forward-vs-transparent.html" rel="alternate"></link><published>2014-05-07T20:45:00+01:00</published><updated>2014-05-07T20:45:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-05-07:/howto-http-proxy-forward-vs-transparent.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# transparent&lt;br&gt;
\$ curl www.google.com&lt;/p&gt;
&lt;p&gt;GET / HTTP/1.1&lt;br&gt;
User-Agent: curl/7.21.0 (x86_64-pc-linux-gnu) libcurl/7.21.0
OpenSSL/0.9.8o zlib/1.2.3.4 libidn/1.15 libssh2/1.2.6&lt;br&gt;
Host: www.google.com&lt;br&gt;
Accept: */*&lt;br&gt;
# the proxy will compute the absolute uri …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# transparent&lt;br&gt;
\$ curl www.google.com&lt;/p&gt;
&lt;p&gt;GET / HTTP/1.1&lt;br&gt;
User-Agent: curl/7.21.0 (x86_64-pc-linux-gnu) libcurl/7.21.0
OpenSSL/0.9.8o zlib/1.2.3.4 libidn/1.15 libssh2/1.2.6&lt;br&gt;
Host: www.google.com&lt;br&gt;
Accept: */*&lt;br&gt;
# the proxy will compute the absolute uri by concatenating the host
header with the relative uri from the get request&lt;/p&gt;
&lt;p&gt;# forward&lt;br&gt;
\$ curl --proxy proxy_ip:proxy_port www.google.com&lt;/p&gt;
&lt;p&gt;GET HTTP://www.google.com HTTP/1.1&lt;br&gt;
User-Agent: curl/7.21.0 (x86_64-pc-linux-gnu) libcurl/7.21.0
OpenSSL/0.9.8o zlib/1.2.3.4 libidn/1.15 libssh2/1.2.6&lt;br&gt;
Host: www.google.com&lt;br&gt;
Accept: */*&lt;br&gt;
Proxy-Connection: Keep-Alive&lt;br&gt;
# the user agent already sent the absolute uri to be retrieved by the
proxy&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="forward"></category><category term="Linux"></category><category term="Proxy"></category><category term="Squid"></category><category term="transparent"></category></entry><entry><title>Scale PHP Sessions</title><link href="http://wiki.jokeru.ro/howto-scale-php-sessions.html" rel="alternate"></link><published>2014-05-01T11:16:00+01:00</published><updated>2014-05-01T11:16:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-05-01:/howto-scale-php-sessions.html</id><summary type="html">&lt;p&gt;If you have a large web application running on two or more servers and
you're using sessions to track users, you need to ensure that the web
server serving the request has access to the user's session data.&lt;/p&gt;
&lt;p&gt;There are two ways in doing this: sticky-sessions or shared session
store …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you have a large web application running on two or more servers and
you're using sessions to track users, you need to ensure that the web
server serving the request has access to the user's session data.&lt;/p&gt;
&lt;p&gt;There are two ways in doing this: sticky-sessions or shared session
store.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sticky-sessions cons:&lt;/strong&gt;&lt;br&gt;
- added load balance complexity (not so complex though)&lt;br&gt;
- lower performance (traffic and visitors cannot be "balanced" between
the servers)&lt;br&gt;
- more stress on the load balancer (packet inspection to determine on
what server to forward the request)&lt;br&gt;
- when web server goes down, the sessions are lost (you can rsync the
sessions to another web server if doing a planned maintenance)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sticky-sessions pros:&lt;/strong&gt;&lt;br&gt;
- decentralized (no single point of failure)&lt;br&gt;
- fast using tmpfs (tmpfs /var/lib/php5 tmpfs size=500M,atime 0 0)
which can be monitored easily (it's just an mountpoint)&lt;br&gt;
- simple web server implementation, no need to install anything, no
configuration change&lt;br&gt;
- no TCP overhead&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shared session store cons:&lt;/strong&gt;&lt;br&gt;
- single point of failure (solved with a redundancy cluster)&lt;br&gt;
- added complexity (external modules, configuration, maintenance, bugs
...)&lt;br&gt;
- network dependent&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shared session store pros:&lt;/strong&gt;&lt;br&gt;
- optimal web server balance&lt;br&gt;
- web servers can be put offline with no session impact&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PHP Session Handling with Redis&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# web server - Ubuntu 12.04.4 LTS&lt;br&gt;
\$ apt-get install make&lt;br&gt;
\$ apt-get install php-pear&lt;br&gt;
\$ pecl install redis&lt;/p&gt;
&lt;p&gt;\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; /etc/php5/apache2/conf.d/redis.ini&lt;br&gt;
extension=redis.so&lt;br&gt;
session.save_handler = redis&lt;br&gt;
session.save_path = "tcp://10.20.30.40:6379"&lt;br&gt;
EOF&lt;/p&gt;
&lt;p&gt;\$ service apache2 restart&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;It's up to you to chose the most appropriate solution :)&lt;/p&gt;</content><category term="cluster"></category><category term="PHP"></category><category term="redis"></category><category term="scale"></category><category term="session"></category><category term="tmpfs"></category></entry><entry><title>Serve PHP via FastCGI in Apache on Ubuntu</title><link href="http://wiki.jokeru.ro/how-to-serve-php-via-fastcgi-in-apache-on-ubuntu.html" rel="alternate"></link><published>2014-04-30T12:30:00+01:00</published><updated>2014-04-30T12:30:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-04-30:/how-to-serve-php-via-fastcgi-in-apache-on-ubuntu.html</id><summary type="html">&lt;p&gt;The default Apache/PHP setup uses mpm_prefork which starts an Apache
process for each HTTP request. Every process has an embedded mod_php
interpreter to deliver fast a php page. But not all requests are php
pages, there are also a lot of static requests like js, css, images,
html and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The default Apache/PHP setup uses mpm_prefork which starts an Apache
process for each HTTP request. Every process has an embedded mod_php
interpreter to deliver fast a php page. But not all requests are php
pages, there are also a lot of static requests like js, css, images,
html and on. This embedded module makes each process very RAM intensive.
If you have tons of RAM or if you have a low traffic site, this is no
problem.&lt;/p&gt;
&lt;p&gt;But if you run a high traffic site or if your resources are limited, you
need to change this behavior. You'll need to install &lt;strong&gt;Apache (version
2.4+)&lt;/strong&gt; Worker MPM (Multi-Procesing Modules, replaces the prefork), PHP
and PHP FastCGI Process Manager. The &lt;strong&gt;mod_proxy_fcgi&lt;/strong&gt; module is a
new one and it allows Apache to connect to/forward requests to an
external FastCGI process manager like &lt;strong&gt;php-fpm&lt;/strong&gt;, allowing a complete
separation between the running of PHP scripts and Apache. Earlier we had
to use modules like mod_fcgid and mod_fastcgi which all had some
limitations.&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# Ubuntu 14.04 LTS&lt;br&gt;
\$ apt-get install apache2-mpm-worker&lt;br&gt;
\$ a2enmod proxy_fcgi&lt;br&gt;
\$ apt-get install php5-fpm php5&lt;/p&gt;
&lt;p&gt;# php-fpm listens by default on a unix socket - /var/run/php5-fpm.sock&lt;br&gt;
# but mod_proxy_fcgi from apache 2.4.7 does not work with unix
sockets (from 2.4.9 it supports unix sockets)&lt;br&gt;
# so we'll need to use tcp sockets for the communication between
apache and php-fpm&lt;br&gt;
\$ echo 'listen = 127.0.0.1:9000' &gt;&gt; /etc/php5/fpm/pool.d/www.conf&lt;br&gt;
\$ service php5-fpm restart&lt;/p&gt;
&lt;p&gt;# add the following line to your Apache Virtual Host configuration&lt;br&gt;
ProxyPassMatch \^/(.*\.php(/.*)?)\$
fcgi://127.0.0.1:9000/var/www/html/\$1&lt;/p&gt;
&lt;p&gt;\$ service apache2 restart&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;UPDATE&lt;/em&gt; - having some problems with phpMyAdmin, so here is
&lt;strong&gt;mod_fastcgi&lt;/strong&gt; implementation:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# Ubuntu 14.04 LTS&lt;br&gt;
\$ apt-get install apache2-mpm-worker&lt;br&gt;
\$ apt-get install php5-fpm php5&lt;/p&gt;
&lt;p&gt;\$ cat \&amp;lt;\&amp;lt;'EOF' &gt;&gt; /etc/apt/sources.list&lt;br&gt;
deb http://archive.ubuntu.com/ubuntu trusty multiverse&lt;br&gt;
deb http://archive.ubuntu.com/ubuntu trusty-updates multiverse&lt;br&gt;
deb http://security.ubuntu.com/ubuntu trusty-security multiverse&lt;br&gt;
EOF&lt;br&gt;
\$ apt-get update&lt;br&gt;
\$ apt-get install libapache2-mod-fastcgi&lt;br&gt;
\$ a2enmod actions alias fastcgi&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; /etc/apache2/conf-available/php5-fpm.conf&lt;br&gt;
&lt;ifmodule mod_fastcgi.c&gt;&lt;br&gt;
AddHandler php5-fcgi .php&lt;br&gt;
Action php5-fcgi /php5-fcgi&lt;br&gt;
Alias /php5-fcgi /usr/lib/cgi-bin/php5-fcgi&lt;br&gt;
FastCgiExternalServer /usr/lib/cgi-bin/php5-fcgi -socket
/var/run/php5-fpm.sock -pass-header Authorization&lt;br&gt;
&lt;/ifmodule&gt;&lt;br&gt;
EOF&lt;br&gt;
\$ a2enconf php5-fpm&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt;&gt; /etc/apache2/sites-enabled/000-default.conf&lt;br&gt;
&lt;directory&gt;&lt;/directory&gt;&lt;br&gt;
Require all granted&lt;br&gt;
&lt;/directory&gt;&lt;br&gt;
EOF&lt;br&gt;
\$ service apache2 restart&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;more details:
&lt;a href="http://wiki.apache.org/httpd/PHP-FPM" title="http://wiki.apache.org/httpd/PHP-FPM"&gt;http://wiki.apache.org/httpd/PHP-FPM&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="apache"></category><category term="mod_proxy_fcgi"></category><category term="mod-fastcgi"></category><category term="Performance"></category><category term="PHP"></category><category term="php-fpm"></category><category term="Ubuntu"></category></entry><entry><title>Use SSHFS to mount remote file systems over SSH</title><link href="http://wiki.jokeru.ro/use-sshfs-to-mount-remote-file-systems-over-ssh.html" rel="alternate"></link><published>2014-04-16T23:45:00+01:00</published><updated>2014-04-16T23:45:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-04-16:/use-sshfs-to-mount-remote-file-systems-over-ssh.html</id><summary type="html">&lt;p&gt;If you need a quick solution to "attach" a remote directory to your
local server, SSHFS (Secure SHell FileSystem) is the answer. On the
local computer, the remote share is mounted using FUSE (Filesystem in
Userspace) kernel module.&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# install&lt;br&gt;
\$ apt-get install sshfs -y&lt;br&gt;
# check&lt;br&gt;
\$ lsmod | grep fuse …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you need a quick solution to "attach" a remote directory to your
local server, SSHFS (Secure SHell FileSystem) is the answer. On the
local computer, the remote share is mounted using FUSE (Filesystem in
Userspace) kernel module.&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# install&lt;br&gt;
\$ apt-get install sshfs -y&lt;br&gt;
# check&lt;br&gt;
\$ lsmod | grep fuse&lt;br&gt;
fuse 50844 1&lt;/p&gt;
&lt;p&gt;# mount&lt;br&gt;
\$ mkdir /mnt/remote&lt;br&gt;
\$ sshfs root@10.20.30.40:/ /mnt/remote&lt;br&gt;
# check&lt;br&gt;
\$ mount | tail -1&lt;br&gt;
root@10.20.30.40:/ on /mnt/remote type fuse.sshfs
(rw,nosuid,nodev,max_read=65536)&lt;br&gt;
# unmount&lt;br&gt;
\$ umount /mnt/remote&lt;br&gt;
# or&lt;br&gt;
\$ fusermount -u /mnt/remote&lt;br&gt;
[/cc]&lt;br&gt;
If you need this available at boot time, you have to use ssh key
authorization.&lt;/p&gt;
&lt;p&gt;If you want to have this setup for a non-root account (local user -
wiki, remote user - miki), there are additional steps to follow:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# add user to the 'fuse' group&lt;br&gt;
\$ adduser wiki fuse&lt;br&gt;
\$ su - wiki&lt;br&gt;
# mount&lt;br&gt;
\$ mkdir miki-logs&lt;br&gt;
\$ sshfs -o idmap=user miki@10.20.30.40:/home/miki/logs
/home/wiki/miki-logs&lt;br&gt;
# -o idmap=user makes that it does not matter if the local and the
remote system use different user IDs&lt;br&gt;
# files owned by the remote user are also owned by the local user&lt;br&gt;
# if you don't use this, you might get permission problems&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;more details:
&lt;a href="http://www.debianadmin.com/mount-a-remote-file-system-through-ssh-using-sshfs.html" title="http://www.debianadmin.com/mount-a-remote-file-system-through-ssh-using-sshfs.html"&gt;http://www.debianadmin.com/mount-a-remote-file-system-through-ssh-using-sshfs.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Debian"></category><category term="filesystem"></category><category term="SSH"></category><category term="sshfs"></category></entry><entry><title>HeartBleed aka CVE-2014-0160</title><link href="http://wiki.jokeru.ro/heartbleed-aka-cve-2014-0160.html" rel="alternate"></link><published>2014-04-15T22:22:00+01:00</published><updated>2014-04-15T22:22:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-04-15:/heartbleed-aka-cve-2014-0160.html</id><summary type="html">&lt;p&gt;This is not a post about what is HeartBleed and how "evil" it is, I'm
assuming you already heard about it ...&lt;/p&gt;
&lt;p&gt;Anyway, you should find all the details at
&lt;a href="http://heartbleed.com/" title="http://heartbleed.com/"&gt;http://heartbleed.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is a collection of nice tools to play with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;website to test online a server against heartbleed …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;This is not a post about what is HeartBleed and how "evil" it is, I'm
assuming you already heard about it ...&lt;/p&gt;
&lt;p&gt;Anyway, you should find all the details at
&lt;a href="http://heartbleed.com/" title="http://heartbleed.com/"&gt;http://heartbleed.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is a collection of nice tools to play with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;website to test online a server against heartbleed exploit:
    &lt;a href="https://filippo.io/Heartbleed/" title="https://filippo.io/Heartbleed/"&gt;https://filippo.io/Heartbleed/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;script to simulate a heartbleed
    attack: &lt;a href="https://gist.github.com/takeshixx/10107280" title="https://gist.github.com/takeshixx/10107280"&gt;https://gist.github.com/takeshixx/10107280&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;server to test the script against (if you don't have one already):
    &lt;a href="http://heartbleed.insign.ch" title="http://heartbleed.insign.ch"&gt;heartbleed.insign.ch:443&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;iptables rule to drop all heartbeat requests:
    &lt;a href="http://www.securityfocus.com/archive/1/531779" title="http://www.securityfocus.com/archive/1/531779"&gt;http://www.securityfocus.com/archive/1/531779&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="bug"></category><category term="exploit"></category><category term="Linux"></category><category term="security"></category><category term="SSL"></category></entry><entry><title>Put your logs on Google Cloud Storage</title><link href="http://wiki.jokeru.ro/put-your-logs-on-google-cloud-storage.html" rel="alternate"></link><published>2014-04-09T11:40:00+01:00</published><updated>2014-04-09T11:40:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-04-09:/put-your-logs-on-google-cloud-storage.html</id><summary type="html">&lt;p&gt;You're running a service and you need to keep all the logs for a
certain period of time (legal constraints or just internal retention
policy). The logs are pretty big to be stored locally, so you need a big
disk somewhere in the cloud - &lt;a href="https://cloud.google.com/products/cloud-storage/" title="https://cloud.google.com/products/cloud-storage/"&gt;Google Cloud
Storage&lt;/a&gt;
comes to the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You're running a service and you need to keep all the logs for a
certain period of time (legal constraints or just internal retention
policy). The logs are pretty big to be stored locally, so you need a big
disk somewhere in the cloud - &lt;a href="https://cloud.google.com/products/cloud-storage/" title="https://cloud.google.com/products/cloud-storage/"&gt;Google Cloud
Storage&lt;/a&gt;
comes to the rescue (this is just one of the options available, Amazon
also has similar products: S3 or Glacier).&lt;/p&gt;
&lt;p&gt;These are the steps to follow:&lt;br&gt;
0 - you must have a Google Account&lt;br&gt;
1 - create a new project within the Google Developer Console and
activate the Google Cloud Storage API&lt;br&gt;
2 - install and configure
&lt;a href="https://developers.google.com/storage/docs/gsutil_install" title="https://developers.google.com/storage/docs/gsutil_install"&gt;gsutil&lt;/a&gt;
on you server&lt;br&gt;
3 - create the job to copy/move your logs to cloud&lt;/p&gt;
&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt; move-to-cloud.sh&lt;br&gt;
#!/bin/bash&lt;/p&gt;
&lt;p&gt;# this script will move to cloud the logs older than 20 days&lt;br&gt;
# we keep 20 days locally because 95% of queries are run against last
2 weeks logs&lt;br&gt;
# we store each server's logs in a separate bucket&lt;br&gt;
# we also configure a TTL for every log file (170 days)&lt;/p&gt;
&lt;p&gt;KeepLocal=20&lt;/p&gt;
&lt;p&gt;BucketList=`/root/gsutil/gsutil ls`&lt;br&gt;
for log in `/usr/bin/find /logs/ -type f -name access.log-*.gz -mtime
+\$KeepLocal -exec /bin/ls {} \;`&lt;br&gt;
do&lt;br&gt;
#&lt;br&gt;
bucket="logs_"`/bin/echo "\$log" | /usr/bin/cut -d '/' -f 4`&lt;br&gt;
bucket_exists=`/bin/echo "\$BucketList" | /bin/grep -c
"gs://\$bucket/"`&lt;br&gt;
if [ "\$bucket_exists" == "0" ]&lt;br&gt;
then&lt;br&gt;
/root/gsutil/gsutil mb gs://\$bucket&lt;br&gt;
/root/gsutil/gsutil lifecycle set lifecycle.xml gs://\$bucket&lt;br&gt;
fi&lt;br&gt;
#&lt;br&gt;
/root/gsutil/gsutil -q cp \$log gs://\$bucket/&lt;br&gt;
if [ \$? -eq 0 ]&lt;br&gt;
then&lt;br&gt;
/bin/rm \$log&lt;br&gt;
fi&lt;br&gt;
done&lt;br&gt;
EOF&lt;/p&gt;
&lt;p&gt;\$ cat \&amp;lt;&lt;eof&gt; lifecycle.xml&lt;br&gt;
&amp;lt;?xml version="1.0" ?&amp;gt;&lt;br&gt;
&lt;lifecycleconfiguration&gt;&lt;br&gt;
&lt;rule&gt;&lt;br&gt;
&lt;action&gt;&lt;br&gt;
&lt;delete&gt;&lt;/delete&gt;&lt;br&gt;
&lt;/action&gt;&lt;br&gt;
&lt;condition&gt;&lt;br&gt;
&lt;age&gt;170&lt;/age&gt;&lt;br&gt;
&lt;/condition&gt;&lt;br&gt;
&lt;/rule&gt;&lt;br&gt;
&lt;/lifecycleconfiguration&gt;&lt;br&gt;
EOF&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Amazon"></category><category term="backup"></category><category term="bucket"></category><category term="cloud"></category><category term="Google Cloud Storage"></category><category term="retention"></category><category term="storage"></category></entry><entry><title>TCP: time wait bucket table overflow</title><link href="http://wiki.jokeru.ro/how-to-tcp-time-wait-bucket-table-overflow.html" rel="alternate"></link><published>2014-04-06T22:22:00+01:00</published><updated>2014-04-06T22:22:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-04-06:/how-to-tcp-time-wait-bucket-table-overflow.html</id><summary type="html">&lt;p&gt;This is not really an error, it's just an info message saying that the
system cannot put the socket connection into time-wait state (buffer is
full) and the socket will be closed. The reason for setting this limit
is to resist simple DoS attacks.&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ dmesg | tail&lt;br&gt;
[660665 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is not really an error, it's just an info message saying that the
system cannot put the socket connection into time-wait state (buffer is
full) and the socket will be closed. The reason for setting this limit
is to resist simple DoS attacks.&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ dmesg | tail&lt;br&gt;
[660665.919463] TCP: time wait bucket table overflow&lt;br&gt;
[660665.919694] TCP: time wait bucket table overflow&lt;br&gt;
[660665.919791] TCP: time wait bucket table overflow&lt;br&gt;
[660665.919815] TCP: time wait bucket table overflow&lt;br&gt;
[660665.920378] TCP: time wait bucket table overflow&lt;br&gt;
[660665.921349] TCP: time wait bucket table overflow&lt;br&gt;
[660665.921503] TCP: time wait bucket table overflow&lt;br&gt;
[660665.922086] TCP: time wait bucket table overflow&lt;br&gt;
[660665.928561] TCP: time wait bucket table overflow&lt;br&gt;
[660665.928601] TCP: time wait bucket table overflow&lt;/p&gt;
&lt;p&gt;\$ sysctl net.ipv4.tcp_fin_timeout&lt;br&gt;
net.ipv4.tcp_fin_timeout = 5 # this is already lowered from the
default 60&lt;br&gt;
\$ sysctl net.ipv4.tcp_max_tw_buckets&lt;br&gt;
net.ipv4.tcp_max_tw_buckets = 262144 # this needs to be increased&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="DoS"></category><category term="sysctl"></category><category term="TCP"></category><category term="Tuning"></category></entry><entry><title>Minimum PostFix configuration for sending emails only</title><link href="http://wiki.jokeru.ro/minimum-postfix-configuration-for-sending-emails-only.html" rel="alternate"></link><published>2014-04-03T20:56:00+01:00</published><updated>2014-04-03T20:56:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-04-03:/minimum-postfix-configuration-for-sending-emails-only.html</id><summary type="html">&lt;p&gt;A null client is a machine that can only send mail. It receives no mail
from the network, and it does not deliver any mail locally.&lt;/p&gt;
&lt;p&gt;This setup is useful when you need to receive the output of your cron
scripts.&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install postfix heirloom-mailx&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt; /etc …&lt;/eof&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;A null client is a machine that can only send mail. It receives no mail
from the network, and it does not deliver any mail locally.&lt;/p&gt;
&lt;p&gt;This setup is useful when you need to receive the output of your cron
scripts.&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install postfix heirloom-mailx&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt; /etc/postfix/main.cf&lt;br&gt;
myhostname = srv01.your-domain.com&lt;br&gt;
inet_interfaces = loopback-only&lt;br&gt;
mydestination =&lt;br&gt;
EOF&lt;br&gt;
\$ /etc/init.d/postfix restart&lt;br&gt;
\$ netstat -tlnp | grep 25&lt;br&gt;
tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN 31320/master&lt;/p&gt;
&lt;p&gt;\$ echo "test" | mail -s "test" user@your-domain.com&lt;br&gt;
\$ tail /var/log/mail.log&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="cron"></category><category term="Mail"></category><category term="Postfix"></category></entry><entry><title>Routing traffic from one CentOS to another CentOS</title><link href="http://wiki.jokeru.ro/routing-traffic-from-one-centos-to-another-centos.html" rel="alternate"></link><published>2014-03-30T01:01:00+00:00</published><updated>2014-03-30T01:01:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-03-30:/routing-traffic-from-one-centos-to-another-centos.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
Client: ping from 50.50.50.50 to 30.30.30.30, gateway is 10.10.10.10&lt;/p&gt;
&lt;p&gt;Server1: eth0 - 10.10.10.10 - public&lt;br&gt;
ipip1 - 192.168.1.1 - ipip tunnel to Server2&lt;/p&gt;
&lt;p&gt;Server2: eth0 - 20.20.20.20 - public&lt;br&gt;
ipip1 - 192.168.1.2 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
Client: ping from 50.50.50.50 to 30.30.30.30, gateway is 10.10.10.10&lt;/p&gt;
&lt;p&gt;Server1: eth0 - 10.10.10.10 - public&lt;br&gt;
ipip1 - 192.168.1.1 - ipip tunnel to Server2&lt;/p&gt;
&lt;p&gt;Server2: eth0 - 20.20.20.20 - public&lt;br&gt;
ipip1 - 192.168.1.2 - ipip tunnel to Server1&lt;br&gt;
eth0:3 - 30.30.30.30 - public alias&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Server1:&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ ip route add 30.30.30.30/32 via 192.168.1.2&lt;br&gt;
\$ sysctl -w "net.ipv4.ip_forward=1"&lt;/p&gt;
&lt;p&gt;\$ tcpdump -ni ipip1 host 30.30.30.30&lt;br&gt;
tcpdump: verbose output suppressed, use -v or -vv for full protocol
decode&lt;br&gt;
listening on ipip1, link-type RAW (Raw IP), capture size 65535 bytes&lt;br&gt;
22:49:52.451930 IP 50.50.50.50 &gt; 30.30.30.30: ICMP echo request, id
8983, seq 8, length 64&lt;br&gt;
22:49:53.458018 IP 50.50.50.50 &gt; 30.30.30.30: ICMP echo request, id
8983, seq 9, length 64&lt;br&gt;
22:49:54.466308 IP 50.50.50.50 &gt; 30.30.30.30: ICMP echo request, id
8983, seq 10, length 64&lt;br&gt;
# traffic is routed correctly to Server2 using the "ipip1" interface&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Server2:&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
\$ tcpdump -ni ipip1 host 30.30.30.30&lt;br&gt;
tcpdump: verbose output suppressed, use -v or -vv for full protocol
decode&lt;br&gt;
listening on ipip1, link-type RAW (Raw IP), capture size 65535 bytes&lt;br&gt;
00:53:55.243203 IP 50.50.50.50 &gt; 30.30.30.30: ICMP echo request, id
8983, seq 251, length 64&lt;br&gt;
00:53:56.242873 IP 50.50.50.50 &gt; 30.30.30.30: ICMP echo request, id
8983, seq 252, length 64&lt;br&gt;
00:53:57.241698 IP 50.50.50.50 &gt; 30.30.30.30: ICMP echo request, id
8983, seq 253, length 64&lt;br&gt;
# traffic is entering ok, but ping fails&lt;/p&gt;
&lt;p&gt;\$ sysctl -w "net.ipv4.conf.all.log_martians=1"&lt;br&gt;
\$ tail -f /var/log/messages&lt;br&gt;
Mar 30 00:59:23 TNT kernel: martian source 30.30.30.30 from
50.50.50.50, on dev ipip1&lt;br&gt;
Mar 30 00:59:23 TNT kernel: ll header:
45:00:00:68:00:00:40:00:33:04:3c:a5:5d:ae:a7:d6:5d:ae:a7:ba:45:00:00:54:34:cf:40:00:34:01:9b:b0:bc:19&lt;br&gt;
Mar 30 00:59:24 TNT kernel: martian source 30.30.30.30 from
50.50.50.50, on dev ipip1&lt;br&gt;
Mar 30 00:59:24 TNT kernel: ll header:
45:00:00:68:00:00:40:00:33:04:3c:a5:5d:ae:a7:d6:5d:ae:a7:ba:45:00:00:54:34:d0:40:00:34:01:9b:af:bc:19&lt;br&gt;
Mar 30 00:59:25 TNT kernel: martian source 30.30.30.30 from
50.50.50.50, on dev ipip1&lt;br&gt;
Mar 30 00:59:25 TNT kernel: ll header:
45:00:00:68:00:00:40:00:33:04:3c:a5:5d:ae:a7:d6:5d:ae:a7:ba:45:00:00:54:34:d1:40:00:34:01:9b:ae:bc:19&lt;/p&gt;
&lt;p&gt;\$ sysctl -w "net.ipv4.conf.ipip1.rp_filter=2"&lt;br&gt;
# ping ok&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;more details:
&lt;a href="https://access.redhat.com/site/solutions/53031" title="https://access.redhat.com/site/solutions/53031"&gt;https://access.redhat.com/site/solutions/53031&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="asymmetric"></category><category term="CentOS"></category><category term="Reverse Path Forwarding"></category><category term="Routing"></category></entry><entry><title>Using strace to monitor System Calls</title><link href="http://wiki.jokeru.ro/howto-using-strace-to-monitor-system-calls.html" rel="alternate"></link><published>2014-03-28T23:55:00+00:00</published><updated>2014-03-28T23:55:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-03-28:/howto-using-strace-to-monitor-system-calls.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# execute a process via "strace"&lt;br&gt;
\$ strace sleep 1&lt;br&gt;
execve("/bin/sleep", ["sleep", "1"], [/* 17 vars */]) = 0&lt;br&gt;
brk(0) = 0x753000&lt;br&gt;
access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or
directory)&lt;br&gt;
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS,
-1, 0) = 0x7f74b3eea000&lt;br&gt;
access("/etc/ld.so.preload …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# execute a process via "strace"&lt;br&gt;
\$ strace sleep 1&lt;br&gt;
execve("/bin/sleep", ["sleep", "1"], [/* 17 vars */]) = 0&lt;br&gt;
brk(0) = 0x753000&lt;br&gt;
access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or
directory)&lt;br&gt;
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS,
-1, 0) = 0x7f74b3eea000&lt;br&gt;
access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or
directory)&lt;br&gt;
open("/etc/ld.so.cache", O_RDONLY) = 3&lt;br&gt;
fstat(3, {st_mode=S_IFREG|0644, st_size=15637, ...}) = 0&lt;br&gt;
mmap(NULL, 15637, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f74b3ee6000&lt;br&gt;
close(3) = 0&lt;br&gt;
access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or
directory)&lt;br&gt;
open("/lib/libc.so.6", O_RDONLY) = 3&lt;br&gt;
read(3,
"\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&gt;\0\1\0\0\0\240\355\1\0\0\0\0\0"...,
832) = 832&lt;br&gt;
fstat(3, {st_mode=S_IFREG|0755, st_size=1437064, ...}) = 0&lt;br&gt;
mmap(NULL, 3545160, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE,
3, 0) = 0x7f74b396d000&lt;br&gt;
mprotect(0x7f74b3ac6000, 2093056, PROT_NONE) = 0&lt;br&gt;
mmap(0x7f74b3cc5000, 20480, PROT_READ|PROT_WRITE,
MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x158000) = 0x7f74b3cc5000&lt;br&gt;
mmap(0x7f74b3cca000, 18504, PROT_READ|PROT_WRITE,
MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f74b3cca000&lt;br&gt;
close(3) = 0&lt;br&gt;
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS,
-1, 0) = 0x7f74b3ee5000&lt;br&gt;
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS,
-1, 0) = 0x7f74b3ee4000&lt;br&gt;
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS,
-1, 0) = 0x7f74b3ee3000&lt;br&gt;
arch_prctl(ARCH_SET_FS, 0x7f74b3ee4700) = 0&lt;br&gt;
mprotect(0x7f74b3cc5000, 16384, PROT_READ) = 0&lt;br&gt;
mprotect(0x7f74b3eec000, 4096, PROT_READ) = 0&lt;br&gt;
munmap(0x7f74b3ee6000, 15637) = 0&lt;br&gt;
brk(0) = 0x753000&lt;br&gt;
brk(0x774000) = 0x774000&lt;br&gt;
open("/usr/lib/locale/locale-archive", O_RDONLY) = 3&lt;br&gt;
fstat(3, {st_mode=S_IFREG|0644, st_size=1527584, ...}) = 0&lt;br&gt;
mmap(NULL, 1527584, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f74b3d6e000&lt;br&gt;
close(3) = 0&lt;br&gt;
nanosleep({1, 0}, NULL) = 0&lt;br&gt;
close(1) = 0&lt;br&gt;
close(2) = 0&lt;br&gt;
exit_group(0) = ?&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;[cc lang="bash"]&lt;br&gt;
# attach "strace" to an already running process (squid) and count
time, calls, and errors for each system call&lt;br&gt;
\$ strace -p 14331 -c&lt;br&gt;
Process 14331 attached - interrupt to quit&lt;br&gt;
\^CProcess 14331 detached&lt;br&gt;
% time seconds usecs/call calls errors syscall  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;27.94 0.000266 0 20842 write&lt;br&gt;
21.22 0.000202 0 17188 4188 read&lt;br&gt;
17.86 0.000170 0 7690 close&lt;br&gt;
10.92 0.000104 0 34009 epoll_ctl&lt;br&gt;
5.57 0.000053 0 3288 3288 connect&lt;br&gt;
4.41 0.000042 0 31240 fcntl&lt;br&gt;
4.31 0.000041 0 6217 1695 accept&lt;br&gt;
2.42 0.000023 0 3288 socket&lt;br&gt;
2.10 0.000020 0 3979 stat&lt;br&gt;
1.37 0.000013 0 4522 getsockname&lt;br&gt;
1.05 0.000010 0 3288 bind&lt;br&gt;
0.84 0.000008 0 3288 setsockopt&lt;br&gt;
0.00 0.000000 0 138 sendto&lt;br&gt;
0.00 0.000000 0 236 100 recvfrom&lt;br&gt;
0.00 0.000000 0 3273 getsockopt&lt;br&gt;
0.00 0.000000 0 766 epoll_wait  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;100.00 0.000952 143252 9271 total&lt;br&gt;
# we have some errors !&lt;/p&gt;
&lt;p&gt;# get all "connect" system calls&lt;br&gt;
\$ strace -p 14331 -e connect&lt;br&gt;
Process 14331 attached - interrupt to quit&lt;br&gt;
connect(341, {sa_family=AF_INET, sin_port=htons(80),
sin_addr=inet_addr("74.125.226.73")}, 16) = -1 EINPROGRESS (Operation
now in progress)&lt;br&gt;
connect(113, {sa_family=AF_INET, sin_port=htons(80),
sin_addr=inet_addr("74.125.226.91")}, 16) = -1 EINPROGRESS (Operation
now in progress)&lt;br&gt;
connect(510, {sa_family=AF_INET, sin_port=htons(80),
sin_addr=inet_addr("23.67.61.123")}, 16) = -1 EINPROGRESS (Operation
now in progress)&lt;br&gt;
connect(511, {sa_family=AF_INET, sin_port=htons(80),
sin_addr=inet_addr("23.67.61.88")}, 16) = -1 EINPROGRESS (Operation
now in progress)&lt;br&gt;
connect(294, {sa_family=AF_INET, sin_port=htons(80),
sin_addr=inet_addr("107.23.19.53")}, 16) = -1 EINPROGRESS (Operation
now in progress)&lt;br&gt;
connect(296, {sa_family=AF_INET, sin_port=htons(80),
sin_addr=inet_addr("98.139.225.42")}, 16) = -1 EINPROGRESS (Operation
now in progress)&lt;br&gt;
connect(302, {sa_family=AF_INET, sin_port=htons(80),
sin_addr=inet_addr("50.116.194.24")}, 16) = -1 EINPROGRESS (Operation
now in progress)&lt;br&gt;
connect(340, {sa_family=AF_INET, sin_port=htons(80),
sin_addr=inet_addr("23.195.83.167")}, 16) = -1 EINPROGRESS (Operation
now in progress)&lt;br&gt;
connect(371, {sa_family=AF_INET, sin_port=htons(80),
sin_addr=inet_addr("69.25.24.23")}, 16) = -1 EINPROGRESS (Operation
now in progress)&lt;br&gt;
connect(565, {sa_family=AF_INET, sin_port=htons(80),
sin_addr=inet_addr("107.20.232.185")}, 16) = -1 EINPROGRESS (Operation
now in progress)&lt;br&gt;
# EINPROGRESS is not really an error, the socket is non-blocking and
the connection could not be established immediately (takes time because
of the TCP 3-way handshake)&lt;/p&gt;
&lt;p&gt;# get all "recvfrom" system calls&lt;br&gt;
\$ strace -p 14331 -e recvfrom&lt;br&gt;
Process 14331 attached - interrupt to quit&lt;br&gt;
recvfrom(7,
"a\276\201\200\0\1\0\4\0\0\0\0\3cdn\6blinkx\3com\0\0\1\0\1"...,
16384, 0, {sa_family=AF_INET, sin_port=htons(53),
sin_addr=inet_addr("8.8.8.8")}, [16]) = 134&lt;br&gt;
recvfrom(7,
"1\331\201\200\0\1\0\v\0\0\0\0\10profiles\6google\3com"...,
16384, 0, {sa_family=AF_INET, sin_port=htons(53),
sin_addr=inet_addr("8.8.8.8")}, [16]) = 213&lt;br&gt;
recvfrom(7, 0x7f5a545115c0, 16384, 0, 0x7fffca3fde00, 0x7fffca3fddfc) =
-1 EAGAIN (Resource temporarily unavailable)&lt;br&gt;
recvfrom(7,
"\330\240\201\200\0\1\0\1\0\0\0\0\fachicreceipt\3com\0\0\1"...,
16384, 0, {sa_family=AF_INET, sin_port=htons(53),
sin_addr=inet_addr("8.8.8.8")}, [16]) = 50&lt;br&gt;
recvfrom(7, 0x7f5a545115c0, 16384, 0, 0x7fffca3fde00, 0x7fffca3fddfc) =
-1 EAGAIN (Resource temporarily unavailable)&lt;br&gt;
recvfrom(7,
"5\320\201\200\0\1\0\1\0\0\0\0\10tps10201\fdoubleveri"...,
16384, 0, {sa_family=AF_INET, sin_port=htons(53),
sin_addr=inet_addr("8.8.8.8")}, [16]) = 59&lt;br&gt;
recvfrom(7, 0x7f5a545115c0, 16384, 0, 0x7fffca3fde00, 0x7fffca3fddfc) =
-1 EAGAIN (Resource temporarily unavailable)&lt;br&gt;
recvfrom(7,
"6\3\201\200\0\1\0\1\0\0\0\0\6ewr-37\10ewr-rtb1\6rfi"...,
16384, 0, {sa_family=AF_INET, sin_port=htons(53),
sin_addr=inet_addr("8.8.8.8")}, [16]) = 60&lt;br&gt;
# EAGAIN is not really an error, the socket is non-blocking and
there's no data to consume at that particular moment&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;more details:
&lt;a href="https://blogs.oracle.com/ksplice/entry/strace_the_sysadmin_s_microscope" title="https://blogs.oracle.com/ksplice/entry/strace_the_sysadmin_s_microscope"&gt;https://blogs.oracle.com/ksplice/entry/strace_the_sysadmin_s_microscope&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="monitoring"></category><category term="Squid"></category><category term="strace"></category><category term="syscall"></category></entry><entry><title>Managing Disk IOs</title><link href="http://wiki.jokeru.ro/managing-disk-ios.html" rel="alternate"></link><published>2014-03-28T14:14:00+00:00</published><updated>2014-03-28T14:14:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-03-28:/managing-disk-ios.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ iotop --only --accumulated&lt;br&gt;
Total DISK READ: 0.00 B/s | Total DISK WRITE: 0.00 B/s&lt;br&gt;
TID PRIO USER DISK READ DISK WRITE SWAPIN IO&gt; COMMAND&lt;br&gt;
2264 be/4 root 0.00 B 0.00 B 0.00 % 0.34 % [flush-254:0]&lt;br&gt;
162 be/3 root …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ iotop --only --accumulated&lt;br&gt;
Total DISK READ: 0.00 B/s | Total DISK WRITE: 0.00 B/s&lt;br&gt;
TID PRIO USER DISK READ DISK WRITE SWAPIN IO&gt; COMMAND&lt;br&gt;
2264 be/4 root 0.00 B 0.00 B 0.00 % 0.34 % [flush-254:0]&lt;br&gt;
162 be/3 root 0.00 B 352.00 K 0.00 % 0.04 % [jbd2/vda-8]&lt;br&gt;
2202 be/4 bind 0.00 B 4.00 K 0.00 % 0.00 % named -u bind&lt;br&gt;
2333 be/4 root 0.00 B 5.72 M 0.00 % 0.00 % collectd -C
/etc/collectd/collectd.conf -f&lt;br&gt;
2007 be/4 root 0.00 B 32.00 K 0.00 % 0.00 % rsyslogd -c5&lt;br&gt;
17938 be/4 postfix 0.00 B 0.00 B 0.00 % 0.00 % smtp -t unix -u -c&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;The information is gathered from "/proc/\$pid/io" file:&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ cat /proc/2333/io&lt;br&gt;
rchar: 1485857154&lt;br&gt;
wchar: 20371441&lt;br&gt;
syscr: 10544889&lt;br&gt;
syscw: 44078&lt;br&gt;
read_bytes: 55783424&lt;br&gt;
write_bytes: 88860282880&lt;br&gt;
cancelled_write_bytes: 0&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;block_dump&lt;/strong&gt; — Configures block I/O debugging when enabled. All
read/write and block dirtying operations done to files are logged
accordingly. All output when block_dump is enabled can be retrieved via
dmesg. The default value is 0.&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ echo 1 &gt; /proc/sys/vm/block_dump&lt;br&gt;
\$ sleep 20&lt;br&gt;
\$ echo 0 &gt; /proc/sys/vm/block_dump&lt;br&gt;
\$ dmesg&lt;br&gt;
...&lt;br&gt;
[839473.076358] bash(19353): READ block 12865224 on vda (32 sectors)&lt;br&gt;
[839473.077429] bash(19353): dirtied inode 393313 (dmesg) on vda&lt;br&gt;
[839473.077572] dmesg(19353): READ block 12865256 on vda (16 sectors)&lt;br&gt;
[839473.080139] rsyslogd(2010): READ block 17345072 on vda (56
sectors)&lt;br&gt;
[839473.085270] rs:main Q:Reg(2007): dirtied inode 263125 (syslog) on
vda&lt;br&gt;
[839473.085279] rs:main Q:Reg(2007): dirtied inode 263125 (syslog) on
vda&lt;br&gt;
[839473.085282] rs:main Q:Reg(2007): dirtied inode 263125 (syslog) on
vda&lt;br&gt;
[839473.085347] rs:main Q:Reg(2007): dirtied inode 264868 (kern.log) on
vda&lt;br&gt;
[839473.085358] rs:main Q:Reg(2007): dirtied inode 264868 (kern.log) on
vda&lt;br&gt;
[839473.085361] rs:main Q:Reg(2007): dirtied inode 264868 (kern.log) on
vda&lt;br&gt;
[839473.085394] rs:main Q:Reg(2007): dirtied inode 268702 (debug) on
vda&lt;br&gt;
[839473.085401] rs:main Q:Reg(2007): dirtied inode 268702 (debug) on
vda&lt;br&gt;
[839473.085404] rs:main Q:Reg(2007): dirtied inode 268702 (debug) on
vda&lt;br&gt;
[839478.832091] jbd2/vda-8(162): WRITE block 29935184 on vda (8
sectors)&lt;br&gt;
[839478.832153] jbd2/vda-8(162): WRITE block 21340104 on vda (8
sectors)&lt;br&gt;
[839478.832159] jbd2/vda-8(162): WRITE block 21340112 on vda (8
sectors)&lt;br&gt;
[839478.832162] jbd2/vda-8(162): WRITE block 21340120 on vda (8
sectors)&lt;br&gt;
[839478.832164] jbd2/vda-8(162): WRITE block 21340128 on vda (8
sectors)&lt;br&gt;
[839478.832167] jbd2/vda-8(162): WRITE block 21340136 on vda (8
sectors)&lt;br&gt;
[839478.832707] jbd2/vda-8(162): WRITE block 21340144 on vda (8
sectors)&lt;br&gt;
[839483.176069] flush-254:0(2264): WRITE block 8389952 on vda (8
sectors)&lt;br&gt;
[839483.176081] flush-254:0(2264): WRITE block 8389968 on vda (8
sectors)&lt;br&gt;
[839483.176085] flush-254:0(2264): WRITE block 8389976 on vda (8
sectors)&lt;br&gt;
[839483.176101] flush-254:0(2264): WRITE block 8390000 on vda (8
sectors)&lt;br&gt;
[839483.176106] flush-254:0(2264): WRITE block 8390048 on vda (8
sectors)&lt;br&gt;
[839483.176112] flush-254:0(2264): WRITE block 8390088 on vda (8
sectors)&lt;br&gt;
[839483.176116] flush-254:0(2264): WRITE block 8390096 on vda (8
sectors)&lt;br&gt;
[839483.176120] flush-254:0(2264): WRITE block 8390152 on vda (8
sectors)&lt;br&gt;
[839483.176124] flush-254:0(2264): WRITE block 8390168 on vda (8
sectors)&lt;br&gt;
[839483.176128] flush-254:0(2264): WRITE block 8390184 on vda (8
sectors)&lt;br&gt;
[839483.176134] flush-254:0(2264): WRITE block 8390264 on vda (8
sectors)&lt;br&gt;
[839483.176138] flush-254:0(2264): WRITE block 8390272 on vda (8
sectors)&lt;br&gt;
[839483.176141] flush-254:0(2264): WRITE block 8390288 on vda (8
sectors)&lt;br&gt;
[839483.176150] flush-254:0(2264): WRITE block 8390304 on vda (8
sectors)&lt;br&gt;
[839483.176154] flush-254:0(2264): WRITE block 8390312 on vda (8
sectors)&lt;br&gt;
[839483.176157] flush-254:0(2264): WRITE block 8390320 on vda (8
sectors)&lt;br&gt;
[839483.176160] flush-254:0(2264): WRITE block 8390328 on vda (8
sectors)&lt;br&gt;
[839483.176163] flush-254:0(2264): WRITE block 8390336 on vda (8
sectors)&lt;br&gt;
[839483.176166] flush-254:0(2264): WRITE block 8390344 on vda (8
sectors)&lt;br&gt;
[839483.176169] flush-254:0(2264): WRITE block 8390352 on vda (8
sectors)&lt;br&gt;
[839483.176172] flush-254:0(2264): WRITE block 8390360 on vda (8
sectors)&lt;br&gt;
[839483.176175] flush-254:0(2264): WRITE block 8390368 on vda (8
sectors)&lt;br&gt;
[839483.176177] flush-254:0(2264): WRITE block 8390376 on vda (8
sectors)&lt;br&gt;
[839483.176181] flush-254:0(2264): WRITE block 8390384 on vda (8
sectors)&lt;br&gt;
[839483.176183] flush-254:0(2264): WRITE block 8390392 on vda (8
sectors)&lt;br&gt;
[839483.176187] flush-254:0(2264): WRITE block 8390400 on vda (8
sectors)&lt;br&gt;
[839483.176190] flush-254:0(2264): WRITE block 8390536 on vda (8
sectors)&lt;br&gt;
[839483.176196] flush-254:0(2264): WRITE block 8390544 on vda (8
sectors)&lt;br&gt;
[839483.176199] flush-254:0(2264): WRITE block 8390552 on vda (8
sectors)&lt;br&gt;
[839483.176202] flush-254:0(2264): WRITE block 8392032 on vda (8
sectors)&lt;br&gt;
[839483.176206] flush-254:0(2264): WRITE block 8392040 on vda (8
sectors)&lt;br&gt;
[839483.176209] flush-254:0(2264): WRITE block 8392056 on vda (8
sectors)&lt;br&gt;
[839483.176213] flush-254:0(2264): WRITE block 8392064 on vda (8
sectors)&lt;br&gt;
[839483.176216] flush-254:0(2264): WRITE block 8392072 on vda (8
sectors)&lt;br&gt;
[839483.176220] flush-254:0(2264): WRITE block 8392080 on vda (8
sectors)&lt;br&gt;
[839483.176222] flush-254:0(2264): WRITE block 8392088 on vda (8
sectors)&lt;br&gt;
[839483.176225] flush-254:0(2264): WRITE block 8392104 on vda (8
sectors)&lt;br&gt;
[839483.176229] flush-254:0(2264): WRITE block 8392120 on vda (8
sectors)&lt;br&gt;
[839483.176234] flush-254:0(2264): WRITE block 8392184 on vda (8
sectors)&lt;br&gt;
[839483.176274] flush-254:0(2264): WRITE block 8392200 on vda (8
sectors)&lt;br&gt;
[839483.176291] flush-254:0(2264): WRITE block 8392216 on vda (8
sectors)&lt;br&gt;
[839483.176295] flush-254:0(2264): WRITE block 8392224 on vda (8
sectors)&lt;br&gt;
[839483.176298] flush-254:0(2264): WRITE block 8392232 on vda (8
sectors)&lt;br&gt;
[839483.176301] flush-254:0(2264): WRITE block 8392240 on vda (8
sectors)&lt;br&gt;
[839483.176305] flush-254:0(2264): WRITE block 8456000 on vda (8
sectors)&lt;br&gt;
[839483.176309] flush-254:0(2264): WRITE block 8456008 on vda (8
sectors)&lt;br&gt;
[839483.176312] flush-254:0(2264): WRITE block 8652400 on vda (8
sectors)&lt;br&gt;
[839483.176316] flush-254:0(2264): WRITE block 8676304 on vda (8
sectors)&lt;br&gt;
[839483.176321] flush-254:0(2264): WRITE block 12583216 on vda (8
sectors)&lt;br&gt;
[839483.176325] flush-254:0(2264): WRITE block 25165952 on vda (8
sectors)&lt;br&gt;
[839483.176329] flush-254:0(2264): WRITE block 25166080 on vda (8
sectors)&lt;br&gt;
[839483.176333] flush-254:0(2264): WRITE block 25167112 on vda (8
sectors)&lt;br&gt;
[839483.176337] flush-254:0(2264): WRITE block 25231664 on vda (8
sectors)&lt;br&gt;
[839483.176375] flush-254:0(2264): WRITE block 25233760 on vda (8
sectors)&lt;br&gt;
[839483.176382] flush-254:0(2264): WRITE block 29360144 on vda (8
sectors)&lt;br&gt;
[839483.176387] flush-254:0(2264): WRITE block 29360160 on vda (8
sectors)&lt;br&gt;
[839483.176391] flush-254:0(2264): WRITE block 29361032 on vda (8
sectors)&lt;br&gt;
[839483.176400] flush-254:0(2264): WRITE block 0 on vda (8 sectors)&lt;br&gt;
[839483.176404] flush-254:0(2264): WRITE block 8 on vda (8 sectors)&lt;br&gt;
[839483.176407] flush-254:0(2264): WRITE block 8388672 on vda (8
sectors)&lt;br&gt;
[839483.176435] flush-254:0(2264): WRITE block 8388736 on vda (8
sectors)&lt;br&gt;
[839483.176439] flush-254:0(2264): WRITE block 8388872 on vda (8
sectors)&lt;br&gt;
[839483.176443] flush-254:0(2264): WRITE block 8389224 on vda (8
sectors)&lt;br&gt;
[839483.176447] flush-254:0(2264): WRITE block 8389304 on vda (8
sectors)&lt;br&gt;
[839483.176450] flush-254:0(2264): WRITE block 8389320 on vda (8
sectors)&lt;br&gt;
[839483.176456] flush-254:0(2264): WRITE block 8389376 on vda (8
sectors)&lt;br&gt;
[839483.176460] flush-254:0(2264): WRITE block 8389408 on vda (8
sectors)&lt;br&gt;
[839483.176464] flush-254:0(2264): WRITE block 8389424 on vda (8
sectors)&lt;br&gt;
[839483.176467] flush-254:0(2264): WRITE block 8389536 on vda (8
sectors)&lt;br&gt;
[839483.176471] flush-254:0(2264): WRITE block 8389600 on vda (8
sectors)&lt;br&gt;
[839483.176478] flush-254:0(2264): WRITE block 8389696 on vda (8
sectors)&lt;br&gt;
[839483.176482] flush-254:0(2264): WRITE block 8389720 on vda (8
sectors)&lt;br&gt;
[839483.176485] flush-254:0(2264): WRITE block 8389784 on vda (8
sectors)&lt;br&gt;
[839483.176489] flush-254:0(2264): WRITE block 8389792 on vda (8
sectors)&lt;br&gt;
[839483.176493] flush-254:0(2264): WRITE block 8389800 on vda (8
sectors)&lt;br&gt;
[839483.176496] flush-254:0(2264): WRITE block 8389824 on vda (8
sectors)&lt;br&gt;
[839483.176500] flush-254:0(2264): WRITE block 8389840 on vda (8
sectors)&lt;br&gt;
[839483.176504] flush-254:0(2264): WRITE block 8389848 on vda (8
sectors)&lt;br&gt;
[839483.176507] flush-254:0(2264): WRITE block 8389856 on vda (8
sectors)&lt;br&gt;
[839483.176510] flush-254:0(2264): WRITE block 8389864 on vda (8
sectors)&lt;br&gt;
[839483.176513] flush-254:0(2264): WRITE block 8389880 on vda (8
sectors)&lt;br&gt;
[839483.176539] flush-254:0(2264): WRITE block 8389912 on vda (8
sectors)&lt;br&gt;
[839483.733003] master(3149): dirtied inode 264613 (pickup) on vda&lt;br&gt;
[839484.832218] jbd2/vda-8(162): WRITE block 21340152 on vda (8
sectors)&lt;br&gt;
[839484.832235] jbd2/vda-8(162): WRITE block 21340160 on vda (8
sectors)&lt;br&gt;
[839484.832240] jbd2/vda-8(162): WRITE block 21340168 on vda (8
sectors)&lt;br&gt;
[839484.832243] jbd2/vda-8(162): WRITE block 21340176 on vda (8
sectors)&lt;br&gt;
[839484.832245] jbd2/vda-8(162): WRITE block 21340184 on vda (8
sectors)&lt;br&gt;
[839484.832773] jbd2/vda-8(162): WRITE block 21340192 on vda (8
sectors)&lt;br&gt;
[839490.832197] jbd2/vda-8(162): WRITE block 21340200 on vda (8
sectors)&lt;br&gt;
[839490.832220] jbd2/vda-8(162): WRITE block 21340208 on vda (8
sectors)&lt;br&gt;
[839490.832228] jbd2/vda-8(162): WRITE block 21340216 on vda (8
sectors)&lt;br&gt;
[839490.832233] jbd2/vda-8(162): WRITE block 21340224 on vda (8
sectors)&lt;br&gt;
[839490.832869] jbd2/vda-8(162): WRITE block 21340232 on vda (8
sectors)&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="filesystem"></category><category term="IOPS"></category><category term="Performance"></category><category term="storage"></category></entry><entry><title>The "high load vm / esxi nfs backup error" story</title><link href="http://wiki.jokeru.ro/the-high-load-vm-esxi-nfs-backup-error-story.html" rel="alternate"></link><published>2014-03-19T20:31:00+00:00</published><updated>2014-03-19T20:31:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-03-19:/the-high-load-vm-esxi-nfs-backup-error-story.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;The beginning:&lt;/strong&gt;&lt;br&gt;
You have a WhiteBox ESXi host (6 Cores @ 3.2 GHz, 16G RAM, 2x500GB +
2x1TB DAS, &lt;a href="http://wiki.jokeru.ro/reset-evaluation-license-vmware-esxi-5-1-0"&gt;free
ESXi&lt;/a&gt;
version - of course) and some VMs running on it.&lt;br&gt;
One of the VMs is a Centreon Server (monitoring).&lt;br&gt;
Everything is going well and you also decide to do some &lt;a href="http://wiki.jokeru.ro/backup-esxi-5-1-vms-with-ghettovcb"&gt;off-site …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;The beginning:&lt;/strong&gt;&lt;br&gt;
You have a WhiteBox ESXi host (6 Cores @ 3.2 GHz, 16G RAM, 2x500GB +
2x1TB DAS, &lt;a href="http://wiki.jokeru.ro/reset-evaluation-license-vmware-esxi-5-1-0"&gt;free
ESXi&lt;/a&gt;
version - of course) and some VMs running on it.&lt;br&gt;
One of the VMs is a Centreon Server (monitoring).&lt;br&gt;
Everything is going well and you also decide to do some &lt;a href="http://wiki.jokeru.ro/backup-esxi-5-1-vms-with-ghettovcb"&gt;off-site
backup&lt;/a&gt; for
the critical VMs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The problem:&lt;/strong&gt;&lt;br&gt;
1. You're starting to receive "high load" alarms for (and from) the
Centreon. For a time you ignore them hoping they'll go away. They
don't.&lt;br&gt;
2. Also the off-site backup starts to fail, the nfs becomes unstable
(all paths down / up).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The foreplay:&lt;/strong&gt;&lt;br&gt;
1. You check the load on the vm, indeed it's higher than normal, you
observe big io wait.&lt;br&gt;
2. You blame the remote nfs server, you configure another one that is
more reliable, but the script fails again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The work:&lt;/strong&gt;&lt;br&gt;
1. You reboot the Centreon vm, nothing changes, load is still high.&lt;br&gt;
2. During a manual run of the backup script (performed on a pfsense vm
because of a smaller disk), you terminate it and wonder what was the
current state of the vm that was backing up - a snapshot was applied
(and not deleted because script didn't finish all steps) !&lt;/p&gt;
&lt;p&gt;By checking all the vms that were setup to be backed up, you notice that
Centreon also had a snapshot since 1 month ago (most probably the daily
backup crashed at this vm) - the same time when all issues appeared.&lt;br&gt;
You delete the snapshot, the vSphere Client starts to become
unresponsive, deletion is stuck at 25%, but luckily it completes until
you do something bad like a host reboot.&lt;br&gt;
After the snapshot delete, the load drops to normal values:&lt;br&gt;
[caption id="attachment_1013" align="aligncenter"
width="624"]&lt;img alt="Load" src="http://wiki.jokeru.ro/wp-content/uploads/2014/03/load.png"&gt;
Load[/caption]&lt;/p&gt;
&lt;p&gt;Testing again the backup script, it run smoothly with no nfs errors - it
looks like the nfs connection was affected by the snapshot and by the
fact that a very disk-busy vm was writing heavily.&lt;/p&gt;
&lt;p&gt;But "&lt;a href="http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;amp;cmd=displayKC&amp;amp;externalId=2007236"&gt;storage device performance
deteriorated&lt;/a&gt;"
errors started popping out in the logs, most probably due to overload -
this is another story :)&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# bbbbbbbbbbbbbbb aka Centreon is pushing a lot of writes even after
snapshot deletion&lt;br&gt;
GID VMNAME VDEVNAME NVDISK CMDS/s READS/s WRITES/s MBREAD/s MBWRTN/s
LAT/rd LAT/wr&lt;br&gt;
3181 aaaaaaaaaaaaaaa - 1 0.00 0.00 0.00 0.00 0.00 0.00 0.00&lt;br&gt;
3207 bbbbbbbbbbbbbbb - 1 154.94 0.00 154.94 0.00 4.08 0.00 4.51&lt;br&gt;
3215 ccccccccccccccc - 1 0.00 0.00 0.00 0.00 0.00 0.00 0.00&lt;br&gt;
3223 ddddddddddddddd - 1 0.00 0.00 0.00 0.00 0.00 0.00 0.00&lt;br&gt;
3231 eeeeeeeeeeeeeee - 1 1.41 0.00 1.41 0.00 0.01 0.00 0.27&lt;br&gt;
3239 fffffffffffffff - 1 0.00 0.00 0.00 0.00 0.00 0.00 0.00&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conclusions:&lt;/strong&gt;&lt;br&gt;
- email your ghettoVCB logs (this feature is built in, but needs some
tweaks to make it work)&lt;br&gt;
- don't snapshot on disk-busy vms&lt;br&gt;
-
&lt;a href="http://kb.vmware.com/selfservice/microsites/search.do?cmd=displayKC&amp;amp;docType=kc&amp;amp;docTypeID=DT_KB_1_1&amp;amp;externalId=1008205"&gt;monitor&lt;/a&gt;
your vms &amp;amp; datastores for iops&lt;br&gt;
- monitor your monitoring server&lt;/p&gt;</content><category term="backup"></category><category term="Centreon"></category><category term="ESXi"></category><category term="monitoring"></category><category term="NFS"></category><category term="Performance"></category><category term="storage"></category><category term="Tuning"></category><category term="VMware"></category></entry><entry><title>Packets larger than the MTU in tcpdump ?</title><link href="http://wiki.jokeru.ro/packets-larger-than-the-mtu-in-tcpdump.html" rel="alternate"></link><published>2014-03-16T20:01:00+00:00</published><updated>2014-03-16T20:01:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-03-16:/packets-larger-than-the-mtu-in-tcpdump.html</id><summary type="html">&lt;p&gt;The network adapter will not send frames larger than the configured MTU
!&lt;/p&gt;
&lt;p&gt;TCPdump hooks above the driver, and does not see what is sent on the
wire. Rather it sees what is sent from the stack to the driver. The
stack will send TCP LSO frames up to about 64K …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The network adapter will not send frames larger than the configured MTU
!&lt;/p&gt;
&lt;p&gt;TCPdump hooks above the driver, and does not see what is sent on the
wire. Rather it sees what is sent from the stack to the driver. The
stack will send TCP LSO frames up to about 64K, and the adapter will
segment them down to the IP stack supplied MSS.&lt;/p&gt;
&lt;p&gt;What you are seeing is due to TCP Segmentation Offload (TSO) and TCP
Large Receive Offload (LRO). TSO allows the network stack to give the
driver packets larger than the MTU when transmitting, and lets the
adapter segment the packets down to a connection's maximum segment size
(MSS). Similarly, LRO allows the adapter (or driver) to reassemble
multiple MSS sized frames into one larger frame, which is passed up to
the stack. TSO and LRO provide a large CPU reduction because they
decrease the effective packet rate as seen by the TCP/IP stack.&lt;/p&gt;
&lt;p&gt;Unfortunately, TSO and LRO make it difficult to obtain an accurate
network trace, since they plug into the network stack above the driver.
This means that tcpdump will see packets which are larger than those
which are actually transmitted and/or received on the wire. If you need
an accurate trace, it is sometimes best to use a "mirror port" and
another machine to do the tracing. Alternatively, &lt;strong&gt;ethtool -k&lt;/strong&gt; can be
used to enable or disable TSO and LRO. Note that LRO can only be
controlled by ethtool using very recent versions of ethtool on fairly
new Linux kernels.&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# display&lt;br&gt;
\$ ethtool -k eth0 | grep offload&lt;br&gt;
tcp-segmentation-offload: on&lt;br&gt;
udp-fragmentation-offload: off&lt;br&gt;
generic-segmentation-offload: on&lt;br&gt;
generic-receive-offload: off&lt;br&gt;
large-receive-offload: off&lt;/p&gt;
&lt;p&gt;# set&lt;br&gt;
\$ ethtool -K eth0 tso off&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="MTU"></category><category term="tcpdump"></category></entry><entry><title>Raspberry Pi Backup &amp; Restore</title><link href="http://wiki.jokeru.ro/raspberry-pi-backup-restore.html" rel="alternate"></link><published>2014-03-04T21:10:00+00:00</published><updated>2014-03-04T21:10:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-03-04:/raspberry-pi-backup-restore.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# backup&lt;br&gt;
\$ dd if=/dev/mmcblk0 | gzip &gt; raspi.img.gz&lt;/p&gt;
&lt;p&gt;# restore backup&lt;br&gt;
\$ gunzip -c raspi.img.gz | dd of=/dev/mmcblk0&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;INFO: /boot is formatted vfat, / is formatted
&lt;a href="http://en.wikipedia.org/wiki/F2FS" title="http://en.wikipedia.org/wiki/F2FS"&gt;f2fs&lt;/a&gt;
(in case you need to change something before restoring to card)&lt;br&gt;
[cc lang='bash']&lt;br&gt;
pi@raspbmc:\~\$ cat /etc …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# backup&lt;br&gt;
\$ dd if=/dev/mmcblk0 | gzip &gt; raspi.img.gz&lt;/p&gt;
&lt;p&gt;# restore backup&lt;br&gt;
\$ gunzip -c raspi.img.gz | dd of=/dev/mmcblk0&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;INFO: /boot is formatted vfat, / is formatted
&lt;a href="http://en.wikipedia.org/wiki/F2FS" title="http://en.wikipedia.org/wiki/F2FS"&gt;f2fs&lt;/a&gt;
(in case you need to change something before restoring to card)&lt;br&gt;
[cc lang='bash']&lt;br&gt;
pi@raspbmc:\~\$ cat /etc/fstab&lt;br&gt;
proc /proc proc defaults 0 0&lt;br&gt;
devpts /dev/pts devpts rw,nosuid,noexec,relatime,gid=5,mode=620 0 0&lt;br&gt;
/dev/mmcblk0p1 /boot vfat defaults,noatime 0 0&lt;br&gt;
/dev/mmcblk0p2 / f2fs defaults,noatime 0 0&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="backup"></category><category term="Raspberry Pi"></category><category term="Restore"></category></entry><entry><title>DF &amp; MTU</title><link href="http://wiki.jokeru.ro/df-mtu.html" rel="alternate"></link><published>2014-02-27T01:01:00+00:00</published><updated>2014-02-27T01:01:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-02-27:/df-mtu.html</id><summary type="html">&lt;p&gt;By default ping in any Linux-based system is sent with Don’t Fragment
(DF) bit set.&lt;br&gt;
Here is what you get by default ping in Linux:&lt;br&gt;
* Don’t fragment bit (in echo request) – set&lt;br&gt;
* IP packet size – 84 bytes (20 bytes IP Header + 8 bytes ICMP Header
+ 56 data bytes …&lt;/p&gt;</summary><content type="html">&lt;p&gt;By default ping in any Linux-based system is sent with Don’t Fragment
(DF) bit set.&lt;br&gt;
Here is what you get by default ping in Linux:&lt;br&gt;
* Don’t fragment bit (in echo request) – set&lt;br&gt;
* IP packet size – 84 bytes (20 bytes IP Header + 8 bytes ICMP Header
+ 56 data bytes)&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# default&lt;br&gt;
\$ ping 2.2.2.2 -c 1&lt;br&gt;
PING 2.2.2.2 (2.2.2.2) 56(84) bytes of data.&lt;br&gt;
64 bytes from 2.2.2.2: icmp_req=1 ttl=55 time=24.9 ms&lt;br&gt;
\$ tcpdump -v -ni eth0 host 1.1.1.1 and icmp&lt;br&gt;
22:11:33.106964 IP (tos 0x0, ttl 56, id 59410, offset 0, flags [DF],
proto ICMP (1), length 84)&lt;br&gt;
1.1.1.1 &gt; 2.2.2.2: ICMP echo request, id 32123, seq 1, length 64&lt;br&gt;
22:11:33.106973 IP (tos 0x0, ttl 64, id 2757, offset 0, flags [none],
proto ICMP (1), length 84)&lt;br&gt;
2.2.2.2 &gt; 1.1.1.1: ICMP echo reply, id 32123, seq 1, length 64&lt;/p&gt;
&lt;p&gt;# DF off, increased size&lt;br&gt;
\$ ping 2.2.2.2 -c 1 -M dont -s 1000&lt;br&gt;
PING 2.2.2.2 (2.2.2.2) 1000(1028) bytes of data.&lt;br&gt;
1008 bytes from 2.2.2.2: icmp_req=1 ttl=55 time=7.48 ms&lt;br&gt;
\$ tcpdump -v -ni eth0 host 1.1.1.1 and icmp&lt;br&gt;
22:31:55.324892 IP (tos 0x0, ttl 56, id 59414, offset 0, flags [none],
proto ICMP (1), length 1028)&lt;br&gt;
1.1.1.1 &gt; 2.2.2.2: ICMP echo request, id 32170, seq 1, length 1008&lt;br&gt;
22:31:55.324903 IP (tos 0x0, ttl 64, id 2761, offset 0, flags [none],
proto ICMP (1), length 1028)&lt;br&gt;
2.2.2.2 &gt; 1.1.1.1: ICMP echo reply, id 32170, seq 1, length 1008&lt;/p&gt;
&lt;p&gt;# DF on, size exceeding MTU&lt;br&gt;
\$ ping 2.2.2.2 -c 1 -M do -s 1500&lt;br&gt;
PING 2.2.2.2 (2.2.2.2) 1500(1528) bytes of data.&lt;br&gt;
From 1.1.1.1 icmp_seq=1 Frag needed and DF set (mtu = 1500)&lt;/p&gt;
&lt;p&gt;# MTU issue along the path, only 1482 bytes allowed&lt;br&gt;
\$ tracepath -n 213.147.119.190 -l 1483&lt;br&gt;
1: 188.241.72.1 0.245ms&lt;br&gt;
2: 176.223.63.165 1.792ms&lt;br&gt;
3: no reply&lt;br&gt;
4: no reply&lt;br&gt;
5: no reply&lt;br&gt;
\$ tracepath -n 213.147.119.190 -l 1482&lt;br&gt;
1: 188.241.72.1 0.228ms&lt;br&gt;
2: 176.223.63.165 1.307ms&lt;br&gt;
3: 195.219.148.37 56.431ms&lt;br&gt;
4: 195.219.156.129 27.112ms asymm 6&lt;br&gt;
5: 195.219.50.41 27.205ms&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="df"></category><category term="MTU"></category><category term="ping"></category><category term="tracepath"></category></entry><entry><title>Optimizing Servers and Processes for Speed</title><link href="http://wiki.jokeru.ro/optimizing-servers-and-processes-for-speed.html" rel="alternate"></link><published>2014-01-09T17:30:00+00:00</published><updated>2014-01-09T17:30:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-01-09:/optimizing-servers-and-processes-for-speed.html</id><summary type="html">&lt;p&gt;The basic idea of these tools is to control how much CPU is devoted to
each process, and also how much Disk IO/Disk traffic is given to each
process.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;nice&lt;/strong&gt;- run a program with modified scheduling priority&lt;br&gt;
&lt;strong&gt;renice&lt;/strong&gt;- alter priority of running processes&lt;br&gt;
&lt;strong&gt;ionice&lt;/strong&gt;- set or retrieve the I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The basic idea of these tools is to control how much CPU is devoted to
each process, and also how much Disk IO/Disk traffic is given to each
process.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;nice&lt;/strong&gt;- run a program with modified scheduling priority&lt;br&gt;
&lt;strong&gt;renice&lt;/strong&gt;- alter priority of running processes&lt;br&gt;
&lt;strong&gt;ionice&lt;/strong&gt;- set or retrieve the I/O priority for a given pid or execute
a new task with a given I/O priority&lt;br&gt;
&lt;strong&gt;iostat&lt;/strong&gt;- report Central Processing Unit (CPU) statistics and
input/output statistics for devices and partitions&lt;br&gt;
&lt;strong&gt;ulimit&lt;/strong&gt;- provides control over the resources available to processes
started by the shell, on systems that allow such control&lt;br&gt;
&lt;strong&gt;chrt&lt;/strong&gt;- set or retrieve real-time scheduling parameters for a given
pid or execute a new task under given scheduling parameters&lt;br&gt;
&lt;strong&gt;taskset&lt;/strong&gt;- set or retrieve task CPU affinity for a given pid or
execute a new task under a given affinity mask&lt;/p&gt;</content><category term="filesystem"></category><category term="Performance"></category><category term="storage"></category><category term="Tuning"></category></entry><entry><title>HP Smart Array (cciss)</title><link href="http://wiki.jokeru.ro/how-to-hp-smart-array-cciss.html" rel="alternate"></link><published>2014-01-07T22:30:00+00:00</published><updated>2014-01-07T22:30:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2014-01-07:/how-to-hp-smart-array-cciss.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ dmidecode -t system&lt;br&gt;
# dmidecode 2.9&lt;br&gt;
SMBIOS 2.7 present.&lt;/p&gt;
&lt;p&gt;Handle 0x0001, DMI type 1, 27 bytes&lt;br&gt;
System Information&lt;br&gt;
Manufacturer: HP&lt;br&gt;
Product Name: ProLiant DL160 G6&lt;br&gt;
Version:&lt;br&gt;
Serial Number: CZJ2041N5P&lt;br&gt;
UUID: C74FBB01-FE8E-11D5-84D0-E4115BE24033&lt;br&gt;
Wake-up Type: Power Switch&lt;br&gt;
SKU Number: 590161-421&lt;br&gt;
Family:&lt;/p&gt;
&lt;p&gt;\$ lspci | grep -i raid&lt;br&gt;
04:00.0 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ dmidecode -t system&lt;br&gt;
# dmidecode 2.9&lt;br&gt;
SMBIOS 2.7 present.&lt;/p&gt;
&lt;p&gt;Handle 0x0001, DMI type 1, 27 bytes&lt;br&gt;
System Information&lt;br&gt;
Manufacturer: HP&lt;br&gt;
Product Name: ProLiant DL160 G6&lt;br&gt;
Version:&lt;br&gt;
Serial Number: CZJ2041N5P&lt;br&gt;
UUID: C74FBB01-FE8E-11D5-84D0-E4115BE24033&lt;br&gt;
Wake-up Type: Power Switch&lt;br&gt;
SKU Number: 590161-421&lt;br&gt;
Family:&lt;/p&gt;
&lt;p&gt;\$ lspci | grep -i raid&lt;br&gt;
04:00.0 RAID bus controller: Hewlett-Packard Company Smart Array G6
controllers (rev 01)&lt;/p&gt;
&lt;p&gt;\$ apt-get install cciss-vol-status -y&lt;br&gt;
\$ cciss_vol_status /dev/cciss/c0d0&lt;br&gt;
/dev/cciss/c0d0: (Smart Array P410) RAID 1 Volume 0 status: OK.&lt;/p&gt;
&lt;p&gt;\$ cat /proc/driver/cciss/cciss0&lt;br&gt;
cciss0: HP Smart Array P410 Controller&lt;br&gt;
Board ID: 0x3243103c&lt;br&gt;
Firmware Version: 5.14&lt;br&gt;
IRQ: 66&lt;br&gt;
Logical drives: 1&lt;br&gt;
Current Q depth: 0&lt;br&gt;
Current # commands on controller: 0&lt;br&gt;
Max Q depth since init: 17&lt;br&gt;
Max # commands on controller since init: 28&lt;br&gt;
Max SG entries since init: 31&lt;br&gt;
Sequential access devices: 0&lt;/p&gt;
&lt;p&gt;cciss/c0d0: 299.96GB RAID 1(1+0)&lt;/p&gt;
&lt;p&gt;# add HP Repository&lt;br&gt;
\$ wget http://downloads.linux.hp.com/SDR/add_repo.sh&lt;br&gt;
\$ bash add_repo.sh mcp&lt;br&gt;
\$ wget http://downloads.linux.hp.com/SDR/repo/mcp/GPG-KEY-mcp&lt;br&gt;
\$ apt-key add GPG-KEY-mcp&lt;br&gt;
\$ apt-get install hpacucli -y&lt;/p&gt;
&lt;p&gt;\$ hpacucli controller all show&lt;br&gt;
Smart Array P410 in Slot 4 (sn: PACCRID11511P22)&lt;/p&gt;
&lt;p&gt;\$ hpacucli controller slot=4 show&lt;br&gt;
Smart Array P410 in Slot 4&lt;br&gt;
Bus Interface: PCI&lt;br&gt;
Slot: 4&lt;br&gt;
Serial Number: PACCRID11511P22&lt;br&gt;
RAID 6 (ADG) Status: Disabled&lt;br&gt;
Controller Status: OK&lt;br&gt;
Hardware Revision: C&lt;br&gt;
Firmware Version: 5.14&lt;br&gt;
Rebuild Priority: Medium&lt;br&gt;
Expand Priority: Medium&lt;br&gt;
Surface Scan Delay: 15 secs&lt;br&gt;
Surface Scan Mode: Idle&lt;br&gt;
Wait for Cache Room: Disabled&lt;br&gt;
Surface Analysis Inconsistency Notification: Disabled&lt;br&gt;
Post Prompt Timeout: 0 secs&lt;br&gt;
Cache Board Present: False&lt;br&gt;
Drive Write Cache: Disabled&lt;br&gt;
Total Cache Size: 0 MB&lt;br&gt;
SATA NCQ Supported: True&lt;/p&gt;
&lt;p&gt;\$ hpacucli controller slot=4 logicaldrive all show status&lt;br&gt;
logicaldrive 1 (279.4 GB, RAID 1): OK&lt;/p&gt;
&lt;p&gt;\$ hpacucli controller slot=4 physicaldrive all show status&lt;br&gt;
physicaldrive 1I:1:1 (port 1I:box 1:bay 1, 300 GB): OK&lt;br&gt;
physicaldrive 1I:1:2 (port 1I:box 1:bay 2, 300 GB): OK&lt;/p&gt;
&lt;p&gt;\$ hpacucli controller slot=4 logicaldrive all show detail&lt;br&gt;
Smart Array P410 in Slot 4&lt;br&gt;
array A&lt;br&gt;
Logical Drive: 1&lt;br&gt;
Size: 279.4 GB&lt;br&gt;
Fault Tolerance: RAID 1&lt;br&gt;
Heads: 255&lt;br&gt;
Sectors Per Track: 32&lt;br&gt;
Cylinders: 65535&lt;br&gt;
Strip Size: 256 KB&lt;br&gt;
Full Stripe Size: 256 KB&lt;br&gt;
Status: OK&lt;br&gt;
Caching: Disabled&lt;br&gt;
Unique Identifier: 600508B1001C1DA39D89564CAB450F10&lt;br&gt;
Disk Name: /dev/cciss/c0d0&lt;br&gt;
Mount Points: /boot 487 MB, / 271.4 GB&lt;br&gt;
OS Status: LOCKED&lt;br&gt;
Logical Drive Label: AF0C8CFBPACCRID11511P223267&lt;br&gt;
Mirror Group 0:&lt;br&gt;
physicaldrive 1I:1:1 (port 1I:box 1:bay 1, SAS, 300 GB, OK)&lt;br&gt;
Mirror Group 1:&lt;br&gt;
physicaldrive 1I:1:2 (port 1I:box 1:bay 2, SAS, 300 GB, OK)&lt;br&gt;
Drive Type: Data&lt;/p&gt;
&lt;p&gt;\$ hpacucli controller slot=4 logicaldrive 1 modify caching=enable&lt;br&gt;
Error: This operation is not supported with the current configuration.
Use the&lt;br&gt;
"show" command on devices to show additional details about the&lt;br&gt;
configuration.&lt;br&gt;
Reason: Cache board not present&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://hwraid.le-vert.net/wiki/SmartArray"&gt;http://hwraid.le-vert.net/wiki/SmartArray&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="cciss"></category><category term="Hardware"></category><category term="HP Smart Array"></category><category term="RAID"></category></entry><entry><title>RAID Utils</title><link href="http://wiki.jokeru.ro/how-to-raid-utils.html" rel="alternate"></link><published>2013-12-30T14:00:00+00:00</published><updated>2013-12-30T14:00:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-12-30:/how-to-raid-utils.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# Get controller type and model - Hardware RAID&lt;/p&gt;
&lt;p&gt;\$ lspci | grep -i raid&lt;br&gt;
1b:00.0 RAID bus controller: LSI Logic / Symbios Logic MegaRAID SAS
2208 [Thunderbolt] (rev 05)&lt;br&gt;
# MegaRAID SAS is the current high-end RAID controllers series by LSI.
It is fully hardware RAIDs controllers supporting RAID5, at …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# Get controller type and model - Hardware RAID&lt;/p&gt;
&lt;p&gt;\$ lspci | grep -i raid&lt;br&gt;
1b:00.0 RAID bus controller: LSI Logic / Symbios Logic MegaRAID SAS
2208 [Thunderbolt] (rev 05)&lt;br&gt;
# MegaRAID SAS is the current high-end RAID controllers series by LSI.
It is fully hardware RAIDs controllers supporting RAID5, at least, with
SAS or SATA interfaces.&lt;/p&gt;
&lt;p&gt;\$ lspci | grep -i lsi&lt;br&gt;
1b:00.0 Serial Attached SCSI controller: LSI Logic / Symbios Logic
SAS2004 PCI-Express Fusion-MPT SAS-2 [Spitfire] (rev 03)&lt;br&gt;
# The FusionMPT SAS is a low-end card from LSI. It only supports RAID0
and RAID1.&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# RedHat&lt;br&gt;
\$ lspci | grep -i raid&lt;br&gt;
1b:00.0 RAID bus controller: LSI Logic / Symbios Logic MegaRAID SAS
2208 [Thunderbolt] (rev 05)&lt;/p&gt;
&lt;p&gt;\$ rpm -ivh &lt;storcli-x.xx-x.noarch.rpm&gt;&lt;/p&gt;
&lt;p&gt;\$ /opt/MegaRAID/storcli/storcli64 /c0 show&lt;br&gt;
\$ /opt/MegaRAID/storcli/storcli64 /c0/bbu show&lt;br&gt;
\$ /opt/MegaRAID/storcli/storcli64 /c0/v0 show&lt;br&gt;
\$ /opt/MegaRAID/storcli/storcli64 /c0/v1 show&lt;/p&gt;
&lt;p&gt;\$ /opt/MegaRAID/storcli/storcli64 /c0/e252/s2 start initialization&lt;br&gt;
\$ /opt/MegaRAID/storcli/storcli64 /c0 add vd type=raid0 drives=252:2
strip=512&lt;/p&gt;
&lt;p&gt;\$ /opt/MegaRAID/storcli/storcli64 /c0/v0 set wrcache=awb&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://www.lsi.com/downloads/Public/MegaRAID%20Common%20Files/StorCLI_RefMan_revf.pdf" title="http://www.lsi.com/downloads/Public/MegaRAID%20Common%20Files/StorCLI_RefMan_revf.pdf"&gt;http://www.lsi.com/downloads/Public/MegaRAID Common
Files/StorCLI_RefMan_revf.pdf&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# Debian&lt;br&gt;
\$ lspci | grep -i raid&lt;br&gt;
03:00.0 RAID bus controller: LSI Logic / Symbios Logic LSI MegaSAS 9260
(rev 05)&lt;/p&gt;
&lt;p&gt;\$ echo 'deb http://hwraid.le-vert.net/debian wheezy main' &gt;&gt;
/etc/apt/sources.list&lt;br&gt;
\$ wget -O -
http://hwraid.le-vert.net/debian/hwraid.le-vert.net.gpg.key | apt-key
add -&lt;br&gt;
\$ apt-get update&lt;br&gt;
\$ apt-get install megacli&lt;/p&gt;
&lt;p&gt;\$ megacli -AdpAllInfo -aAll&lt;br&gt;
\$ megacli -LDInfo -L0 -a0&lt;br&gt;
\$ megacli -PDList -a0&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://hwraid.le-vert.net/wiki/LSIMegaRAIDSAS#a3.3.megacli" title="http://hwraid.le-vert.net/wiki/LSIMegaRAIDSAS#a3.3.megacli"&gt;http://hwraid.le-vert.net/wiki/LSIMegaRAIDSAS#a3.3.megacli&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="filesystem"></category><category term="Performance"></category><category term="RAID"></category><category term="storage"></category></entry><entry><title>RAID Performance</title><link href="http://wiki.jokeru.ro/raid-performance.html" rel="alternate"></link><published>2013-12-24T14:43:00+00:00</published><updated>2013-12-24T14:43:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-12-24:/raid-performance.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://wiki.jokeru.ro/wp-content/uploads/2013/12/Impact-of-RAID-Settings-on-Performance-Configuring-RAID-for-Optimal-Performance.pdf"&gt;Impact of RAID Settings on Performance Configuring RAID for Optimal
Performance&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://wiki.jokeru.ro/wp-content/uploads/2013/12/Impact-of-RAID-Settings-on-Performance-Configuring-RAID-for-Optimal-Performance.pdf"&gt;Impact of RAID Settings on Performance Configuring RAID for Optimal
Performance&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="filesystem"></category><category term="Performance"></category><category term="RAID"></category></entry><entry><title>BASH History with Date</title><link href="http://wiki.jokeru.ro/bash-history-with-date.html" rel="alternate"></link><published>2013-12-19T10:10:00+00:00</published><updated>2013-12-19T10:10:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-12-19:/bash-history-with-date.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt;&gt; /root/.bashrc&lt;br&gt;
export HISTTIMEFORMAT='%F %T '&lt;br&gt;
export HISTSIZE=10000&lt;br&gt;
EOF&lt;br&gt;
\$ logout&lt;br&gt;
[/cc]&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt;&gt; /root/.bashrc&lt;br&gt;
export HISTTIMEFORMAT='%F %T '&lt;br&gt;
export HISTSIZE=10000&lt;br&gt;
EOF&lt;br&gt;
\$ logout&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="BASH"></category><category term="Debian"></category></entry><entry><title>RoundCube WebMail</title><link href="http://wiki.jokeru.ro/roundcube-webmail.html" rel="alternate"></link><published>2013-11-29T21:30:00+00:00</published><updated>2013-11-29T21:30:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-11-29:/roundcube-webmail.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ cd /var/lib/&lt;br&gt;
\$ wget
http://sourceforge.net/projects/roundcubemail/files/roundcubemail/0.9.5/roundcubemail-0.9.5.tar.gz/download&lt;br&gt;
\$ tar -xzf download; rm -f download&lt;br&gt;
\$ ln -s roundcubemail-0.9.5/ roundcubemail&lt;br&gt;
\$ chown -R root:root roundcubemail/&lt;br&gt;
\$ chown -R www-data:www-data roundcubemail/temp/ roundcubemail/logs/&lt;/p&gt;
&lt;p&gt;\$ mysql -e …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ cd /var/lib/&lt;br&gt;
\$ wget
http://sourceforge.net/projects/roundcubemail/files/roundcubemail/0.9.5/roundcubemail-0.9.5.tar.gz/download&lt;br&gt;
\$ tar -xzf download; rm -f download&lt;br&gt;
\$ ln -s roundcubemail-0.9.5/ roundcubemail&lt;br&gt;
\$ chown -R root:root roundcubemail/&lt;br&gt;
\$ chown -R www-data:www-data roundcubemail/temp/ roundcubemail/logs/&lt;/p&gt;
&lt;p&gt;\$ mysql -e "CREATE DATABASE roundcubemail;"&lt;br&gt;
\$ mysql -e "GRANT ALL PRIVILEGES ON roundcubemail.* TO
roundcube@localhost IDENTIFIED BY 'XxXx';"&lt;br&gt;
\$ mysql -e "FLUSH PRIVILEGES;"&lt;/p&gt;
&lt;p&gt;\$ cat \&amp;lt;&lt;eof&gt; /etc/apache2/sites-enabled/webmail.wiki.jokeru.ro&lt;br&gt;
&lt;virtualhost *:80&gt;&lt;br&gt;
ServerName webmail.wiki.jokeru.ro&lt;br&gt;
ServerAdmin wiki@jokeru.ro&lt;br&gt;
DocumentRoot /var/lib/roundcubemail&lt;br&gt;
ErrorLog /var/log/apache2/webmail.wiki.jokeru.ro.error.log&lt;br&gt;
CustomLog /var/log/apache2/webmail.wiki.jokeru.ro.access.log combined&lt;br&gt;
&lt;/virtualhost&gt;&lt;br&gt;
&lt;directory var lib roundcubemail&gt;&lt;/directory&gt;&lt;br&gt;
Options -Indexes&lt;br&gt;
Options +FollowSymLinks&lt;br&gt;
AllowOverride All&lt;br&gt;
&lt;/directory&gt;&lt;br&gt;
&lt;directory var lib roundcubemail config&gt;&lt;br&gt;
Order Deny,Allow&lt;br&gt;
Deny from All&lt;br&gt;
&lt;/directory&gt;&lt;br&gt;
&lt;directory var lib roundcubemail temp&gt;&lt;br&gt;
Order Deny,Allow&lt;br&gt;
Deny from All&lt;br&gt;
&lt;/directory&gt;&lt;br&gt;
&lt;directory var lib roundcubemail logs&gt;&lt;br&gt;
Order Deny,Allow&lt;br&gt;
Deny from All&lt;br&gt;
&lt;/directory&gt;&lt;br&gt;
EOF&lt;br&gt;
\$ service apache2 reload&lt;/p&gt;
&lt;p&gt;# open http://webmail.wiki.jokeru.ro/installer/&lt;br&gt;
\$ rm -fr /var/lib/roundcubemail/installer&lt;/p&gt;
&lt;p&gt;# check "/var/lib/roundcubemail/config/main.inc.php" for&lt;br&gt;
# \$rcmail_config['default_host'] = '127.0.0.1';&lt;br&gt;
# \$rcmail_config['smtp_server'] = '127.0.0.1';&lt;br&gt;
# \$rcmail_config['create_default_folders'] = true;&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Debian"></category><category term="Mail"></category><category term="Roundcube"></category><category term="Ubuntu"></category><category term="Webmail"></category></entry><entry><title>System Performance Monitoring with collectd</title><link href="http://wiki.jokeru.ro/system-performance-monitoring-with-collectd.html" rel="alternate"></link><published>2013-11-27T16:30:00+00:00</published><updated>2013-11-27T16:30:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-11-27:/system-performance-monitoring-with-collectd.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ #echo 'statistics-channels { inet 127.0.0.1 port 8053; };' &gt;&gt;
/etc/bind/named.conf.options&lt;br&gt;
\$ #rnds reload&lt;/p&gt;
&lt;p&gt;\$ apt-get install collectd-core&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt; /etc/collectd/collectd.conf&lt;br&gt;
# http://collectd.org/documentation/manpages/collectd.conf.5.shtml&lt;br&gt;
Hostname "wiki.jokeru.ro"&lt;br&gt;
BaseDir "/var/lib/collectd"&lt;br&gt;
PIDFile "/var/run/collectd.pid"&lt;br&gt;
PluginDir …&lt;/eof&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ #echo 'statistics-channels { inet 127.0.0.1 port 8053; };' &gt;&gt;
/etc/bind/named.conf.options&lt;br&gt;
\$ #rnds reload&lt;/p&gt;
&lt;p&gt;\$ apt-get install collectd-core&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt; /etc/collectd/collectd.conf&lt;br&gt;
# http://collectd.org/documentation/manpages/collectd.conf.5.shtml&lt;br&gt;
Hostname "wiki.jokeru.ro"&lt;br&gt;
BaseDir "/var/lib/collectd"&lt;br&gt;
PIDFile "/var/run/collectd.pid"&lt;br&gt;
PluginDir "/usr/lib/collectd"&lt;br&gt;
TypesDB "/usr/share/collectd/types.db"&lt;br&gt;
Interval 60&lt;br&gt;
ReadThreads 5 # default&lt;br&gt;
WriteThreads 5 # default&lt;br&gt;
# basic&lt;br&gt;
LoadPlugin cpu&lt;br&gt;
LoadPlugin memory&lt;br&gt;
LoadPlugin disk&lt;br&gt;
LoadPlugin interface&lt;br&gt;
# advanced&lt;br&gt;
LoadPlugin load&lt;br&gt;
LoadPlugin processes&lt;br&gt;
LoadPlugin contextswitch&lt;br&gt;
LoadPlugin swap&lt;br&gt;
LoadPlugin tcpconns&lt;br&gt;
# write data&lt;br&gt;
LoadPlugin rrdtool&lt;br&gt;
&lt;plugin rrdtool&gt;&lt;br&gt;
DataDir "/var/lib/collectd/rrd/"&lt;br&gt;
&lt;/plugin&gt;&lt;br&gt;
EOF&lt;br&gt;
\$ service collectd restart&lt;/p&gt;
&lt;p&gt;# http://collectdweb.appspot.com/ - web front-end for collectd&lt;br&gt;
\$ apt-get install libhtml-parser-perl librrds-perl libjson-perl&lt;br&gt;
\$ wget
https://github.com/downloads/httpdss/collectd-web/collectd-web_0.4.0.tar.gz&lt;br&gt;
\$ gunzip collectd-web_0.4.0.tar.gz&lt;br&gt;
\$ tar -xf collectd-web_0.4.0.tar&lt;br&gt;
\$ cd collectd-web&lt;br&gt;
\$ ./check_deps.sh&lt;br&gt;
Carp looks ok&lt;br&gt;
CGI looks ok&lt;br&gt;
CGI::Carp looks ok&lt;br&gt;
HTML::Entities looks ok&lt;br&gt;
URI::Escape looks ok&lt;br&gt;
RRDs looks ok&lt;br&gt;
Data::Dumper looks ok&lt;br&gt;
JSON looks ok&lt;br&gt;
\$ ./runserver.py 10.20.30.40 8080&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;EDIT: ubuntu&lt;br&gt;
[cc lang='bash']&lt;br&gt;
192.168.1.10 - - [26/Oct/2014 19:25:07] "GET
/cgi-bin/collection.modified.cgi?action=hostlist_json HTTP/1.1" 200 -&lt;br&gt;
Traceback (most recent call last):&lt;br&gt;
File "/usr/lib/python2.7/CGIHTTPServer.py", line 252, in run_cgi&lt;br&gt;
os.execve(scriptfile, args, env)&lt;br&gt;
OSError: [Errno 13] Permission denied&lt;br&gt;
192.168.1.10 - - [26/Oct/2014 19:25:07] CGI script exit status 0x7f00&lt;br&gt;
192.168.1.10 - - [26/Oct/2014 19:25:07] "GET /cgi-bin/time.cgi
HTTP/1.1" 200 -&lt;br&gt;
Traceback (most recent call last):&lt;br&gt;
File "/usr/lib/python2.7/CGIHTTPServer.py", line 252, in run_cgi&lt;br&gt;
os.execve(scriptfile, args, env)&lt;br&gt;
OSError: [Errno 13] Permission denied&lt;br&gt;
192.168.1.10 - - [26/Oct/2014 19:25:07] CGI script exit status 0x7f00&lt;/p&gt;
&lt;p&gt;root@debian-7:\~# grep nobody /etc/passwd&lt;br&gt;
nobody:x:65534:65534:nobody:/nonexistent:/bin/sh&lt;/p&gt;
&lt;p&gt;root@ubuntu-14.04:\~# grep nobody /etc/passwd&lt;br&gt;
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin&lt;/p&gt;
&lt;p&gt;wget
https://gist.github.com/jokeru/1777105c9eea2227ee5d#file-collectd-web_0-4-0-ubuntu-14-04-diff&lt;br&gt;
\$ patch /usr/lib/python2.7/CGIHTTPServer.py \&amp;lt;
collectd-web_0.4.0-ubuntu-14.04.diff&lt;/p&gt;
&lt;p&gt;[/cc]&lt;/p&gt;</content><category term="collectd"></category><category term="Debian"></category><category term="monitoring"></category><category term="Performance"></category><category term="Ubuntu"></category></entry><entry><title>Shrink Amazon EBS Root Volume</title><link href="http://wiki.jokeru.ro/shrink-amazon-ebs-root-volume.html" rel="alternate"></link><published>2013-11-07T10:10:00+00:00</published><updated>2013-11-07T10:10:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-11-07:/shrink-amazon-ebs-root-volume.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;Snapshot the root volume (this step is done as a backup)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​1. Create a new ebs volume (smaller than current one)&lt;/p&gt;
&lt;p&gt;​2. Stop the instance and detach the current root volume&lt;/p&gt;
&lt;p&gt;​3. Attach both volumes to another running instance&lt;br&gt;
- new /dev/sdf - /dev/xvdf on the instance&lt;br&gt;
- old /dev/sdg …&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;Snapshot the root volume (this step is done as a backup)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​1. Create a new ebs volume (smaller than current one)&lt;/p&gt;
&lt;p&gt;​2. Stop the instance and detach the current root volume&lt;/p&gt;
&lt;p&gt;​3. Attach both volumes to another running instance&lt;br&gt;
- new /dev/sdf - /dev/xvdf on the instance&lt;br&gt;
- old /dev/sdg - /dev/xvdg on the instance&lt;/p&gt;
&lt;p&gt;​4. Run the following commands&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# needed by resize2fs&lt;br&gt;
\$ e2fsck -f /dev/xvdg&lt;br&gt;
e2fsck 1.42 (29-Nov-2011)&lt;br&gt;
Pass 1: Checking inodes, blocks, and sizes&lt;br&gt;
Pass 2: Checking directory structure&lt;br&gt;
Pass 3: Checking directory connectivity&lt;br&gt;
Pass 4: Checking reference counts&lt;br&gt;
Pass 5: Checking group summary information&lt;br&gt;
cloudimg-rootfs: 123578/33292288 files (0.1% non-contiguous),
2845320/133169152 blocks&lt;/p&gt;
&lt;p&gt;\$ resize2fs -M -p /dev/xvdg&lt;br&gt;
resize2fs 1.42 (29-Nov-2011)&lt;br&gt;
Resizing the filesystem on /dev/xvdg to 1035624 (4k) blocks.&lt;br&gt;
Begin pass 2 (max = 540150)&lt;br&gt;
Relocating blocks XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;
Begin pass 3 (max = 4064)&lt;br&gt;
Scanning inode table XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;
Begin pass 4 (max = 18619)&lt;br&gt;
Updating inode references XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;
The filesystem on /dev/xvdg is now 1035624 blocks long.&lt;/p&gt;
&lt;p&gt;\$ echo "1035624*4/(16*1024)" | bc&lt;br&gt;
252&lt;br&gt;
\$ dd bs=16M if=/dev/xvdg of=/dev/xvdf count=300&lt;br&gt;
300+0 records in&lt;br&gt;
300+0 records out&lt;br&gt;
5033164800 bytes (5.0 GB) copied, 202.99 s, 24.8 MB/s&lt;/p&gt;
&lt;p&gt;\$ resize2fs -p /dev/xvdf&lt;br&gt;
resize2fs 1.42 (29-Nov-2011)&lt;br&gt;
Resizing the filesystem on /dev/xvdf to 2097152 (4k) blocks.&lt;br&gt;
Begin pass 1 (max = 32)&lt;br&gt;
Extending the inode table XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;br&gt;
The filesystem on /dev/xvdf is now 2097152 blocks long.&lt;/p&gt;
&lt;p&gt;\$ e2fsck -f /dev/xvdf&lt;br&gt;
e2fsck 1.42 (29-Nov-2011)&lt;br&gt;
Pass 1: Checking inodes, blocks, and sizes&lt;br&gt;
Pass 2: Checking directory structure&lt;br&gt;
Pass 3: Checking directory connectivity&lt;br&gt;
Pass 4: Checking reference counts&lt;br&gt;
Pass 5: Checking group summary information&lt;br&gt;
cloudimg-rootfs: 123578/524288 files (0.3% non-contiguous),
784755/2097152 blocks&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;​5. Detach both volumes from the instance&lt;/p&gt;
&lt;p&gt;​6. Attach new volume to original instance as /dev/sda1 and start it&lt;/p&gt;</content><category term="Amazon"></category><category term="AWS"></category><category term="EBS"></category><category term="filesystem"></category></entry><entry><title>Backup ESXi 5.1 VMs with ghettoVCB</title><link href="http://wiki.jokeru.ro/how-to-backup-esxi-5-1-vms-with-ghettovcb.html" rel="alternate"></link><published>2013-10-29T13:13:00+00:00</published><updated>2013-10-29T13:13:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-10-29:/how-to-backup-esxi-5-1-vms-with-ghettovcb.html</id><summary type="html">&lt;p&gt;This tutorial will show you how to backup your ESXi VMs using a free
solution - &lt;strong&gt;ghettoVCB&lt;/strong&gt;.&lt;br&gt;
I'm using it on ESXi hosts that store the VMs locally.&lt;br&gt;
The script is not interactive and can be setup as a cron job.&lt;/p&gt;
&lt;p&gt;Here is the script philosophy:&lt;br&gt;
- it takes snapshots of live …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This tutorial will show you how to backup your ESXi VMs using a free
solution - &lt;strong&gt;ghettoVCB&lt;/strong&gt;.&lt;br&gt;
I'm using it on ESXi hosts that store the VMs locally.&lt;br&gt;
The script is not interactive and can be setup as a cron job.&lt;/p&gt;
&lt;p&gt;Here is the script philosophy:&lt;br&gt;
- it takes snapshots of live running virtual machines&lt;br&gt;
- backs up the master VMDK(s)&lt;br&gt;
- upon completion, deletes the snapshot&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# copy "https://github.com/lamw/ghettoVCB/archive/master.zip" to
"/vmfs/volumes/data/BackUp/"&lt;br&gt;
\$ unzip master.zip; rm master.zip&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; ghettoVCB-master/ghettoVCB.conf&lt;br&gt;
VM_BACKUP_VOLUME=&lt;br&gt;
DISK_BACKUP_FORMAT=thin&lt;br&gt;
VM_BACKUP_ROTATION_COUNT=3&lt;br&gt;
POWER_VM_DOWN_BEFORE_BACKUP=0&lt;br&gt;
ENABLE_HARD_POWER_OFF=0&lt;br&gt;
ITER_TO_WAIT_SHUTDOWN=3&lt;br&gt;
POWER_DOWN_TIMEOUT=5&lt;br&gt;
ENABLE_COMPRESSION=0&lt;br&gt;
VM_SNAPSHOT_MEMORY=0&lt;br&gt;
VM_SNAPSHOT_QUIESCE=0&lt;br&gt;
ALLOW_VMS_WITH_SNAPSHOTS_TO_BE_BACKEDUP=0&lt;br&gt;
ENABLE_NON_PERSISTENT_NFS=1&lt;br&gt;
UNMOUNT_NFS=1&lt;br&gt;
NFS_SERVER=10.10.10.10&lt;br&gt;
NFS_MOUNT=/var/nfs&lt;br&gt;
NFS_LOCAL_NAME=nfs_backup&lt;br&gt;
NFS_VM_BACKUP_DIR=esx.jokeru.ro&lt;br&gt;
SNAPSHOT_TIMEOUT=15&lt;br&gt;
EMAIL_LOG=0&lt;br&gt;
EMAIL_SERVER=&lt;br&gt;
EMAIL_SERVER_PORT=&lt;br&gt;
EMAIL_DELAY_INTERVAL=&lt;br&gt;
EMAIL_TO=&lt;br&gt;
EMAIL_FROM=&lt;br&gt;
WORKDIR_DEBUG=0&lt;br&gt;
VM_SHUTDOWN_ORDER=&lt;br&gt;
VM_STARTUP_ORDER=&lt;br&gt;
EOF&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; ghettoVCB-master/list&lt;br&gt;
vm1&lt;br&gt;
vm2&lt;br&gt;
EOF&lt;/p&gt;
&lt;p&gt;# setup cronjob&lt;br&gt;
\$ sed -i '\$d' /etc/rc.local.d/local.sh&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt;&gt; /etc/rc.local.d/local.sh&lt;br&gt;
/bin/kill \$(cat /var/run/crond.pid)&lt;br&gt;
/bin/echo "30 01 */3 * *
/vmfs/volumes/data/BackUp/ghettoVCB-master/ghettoVCB.sh -g
/vmfs/volumes/data/BackUp/ghettoVCB-master/ghettoVCB.conf -f
/vmfs/volumes/data/BackUp/ghettoVCB-master/list &gt;
/vmfs/volumes/data/BackUp/ghettoVCB-master/ghettoVCB-backup-\\$(date
+\\%s).log" &gt;&gt; /var/spool/cron/crontabs/root&lt;br&gt;
/bin/crond&lt;br&gt;
exit 0&lt;br&gt;
EOF&lt;br&gt;
\$ /etc/rc.local.d/local.sh&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;more details:
&lt;a href="https://communities.vmware.com/docs/DOC-8760" title="https://communities.vmware.com/docs/DOC-8760"&gt;https://communities.vmware.com/docs/DOC-8760&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="backup"></category><category term="ESXi"></category><category term="ghettoVCB"></category><category term="NFS"></category><category term="VCB"></category><category term="VMware"></category></entry><entry><title>Debian NFSv3 Server with static ports</title><link href="http://wiki.jokeru.ro/debian-nfsv3-server-with-static-ports.html" rel="alternate"></link><published>2013-10-29T10:01:00+00:00</published><updated>2013-10-29T10:01:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-10-29:/debian-nfsv3-server-with-static-ports.html</id><summary type="html">&lt;p&gt;VMware (ESXi 5.1) only supports NFS version 3 over TCP/IP&lt;/p&gt;
&lt;p&gt;Setup NFS Server behind a firewall:&lt;br&gt;
- rpcbind (portmapper) listens on port 111 (default)&lt;br&gt;
- mountd binds to port 32767 (custom)&lt;br&gt;
- nfsd listens on port 2049 (default)&lt;br&gt;
- statd binds to port 32765 for incoming requests and it must answer on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;VMware (ESXi 5.1) only supports NFS version 3 over TCP/IP&lt;/p&gt;
&lt;p&gt;Setup NFS Server behind a firewall:&lt;br&gt;
- rpcbind (portmapper) listens on port 111 (default)&lt;br&gt;
- mountd binds to port 32767 (custom)&lt;br&gt;
- nfsd listens on port 2049 (default)&lt;br&gt;
- statd binds to port 32765 for incoming requests and it must answer on
port 32766 (custom)&lt;br&gt;
- lockd's module parameters have been set to bind to 32768 (custom)&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install nfs-kernel-server&lt;/p&gt;
&lt;p&gt;\$ cat \&amp;lt;&lt;eof&gt;&gt; /etc/default/nfs-kernel-server&lt;br&gt;
RPCMOUNTDOPTS="--manage-gids --port 32767 --no-nfs-version 4"&lt;br&gt;
NEED_SVCGSSD="no"&lt;br&gt;
EOF&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt;&gt; /etc/default/nfs-common&lt;br&gt;
NEED_STATD="yes"&lt;br&gt;
STATDOPTS="--port 32765 --outgoing-port 32766"&lt;br&gt;
NEED_IDMAPD="no"&lt;br&gt;
NEED_GSSD="no"&lt;br&gt;
EOF&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt; /etc/modprobe.d/local.conf&lt;br&gt;
options lockd nlm_udpport=32768 nlm_tcpport=32768&lt;br&gt;
EOF&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt;&gt; /etc/services&lt;br&gt;
# NFS ports&lt;br&gt;
rpc.nfsd 2049/tcp # RPC nfsd&lt;br&gt;
rpc.nfsd 2049/udp # RPC nfsd&lt;br&gt;
rpc.statd-bc 32765/tcp # RPC statd broadcast&lt;br&gt;
rpc.statd-bc 32765/udp # RPC statd broadcast&lt;br&gt;
rpc.statd 32766/tcp # RPC statd listen&lt;br&gt;
rpc.statd 32766/udp # RPC statd listen&lt;br&gt;
rpc.mountd 32767/tcp # RPC mountd&lt;br&gt;
rpc.mountd 32767/udp # RPC mountd&lt;br&gt;
rpc.lockd 32768/tcp # RPC lockd/nlockmgr&lt;br&gt;
rpc.lockd 32768/udp # RPC lockd/nlockmgr&lt;br&gt;
EOF&lt;/p&gt;
&lt;p&gt;\$ mkdir /var/nfs&lt;br&gt;
\$ chown nobody:nogroup /var/nfs&lt;br&gt;
\$ echo '/var/nfs 10.0.0.0/24(rw,sync)' &gt;&gt; /etc/exports&lt;/p&gt;
&lt;p&gt;\$ reboot&lt;/p&gt;
&lt;p&gt;\$ rpcinfo -p&lt;br&gt;
program vers proto port service&lt;br&gt;
100000 4 tcp 111 portmapper&lt;br&gt;
100000 3 tcp 111 portmapper&lt;br&gt;
100000 2 tcp 111 portmapper&lt;br&gt;
100000 4 udp 111 portmapper&lt;br&gt;
100000 3 udp 111 portmapper&lt;br&gt;
100000 2 udp 111 portmapper&lt;br&gt;
100024 1 udp 32765 status&lt;br&gt;
100024 1 tcp 32765 status&lt;br&gt;
100003 2 tcp 2049 nfs&lt;br&gt;
100003 3 tcp 2049 nfs&lt;br&gt;
100003 4 tcp 2049 nfs&lt;br&gt;
100227 2 tcp 2049&lt;br&gt;
100227 3 tcp 2049&lt;br&gt;
100003 2 udp 2049 nfs&lt;br&gt;
100003 3 udp 2049 nfs&lt;br&gt;
100003 4 udp 2049 nfs&lt;br&gt;
100227 2 udp 2049&lt;br&gt;
100227 3 udp 2049&lt;br&gt;
100021 1 udp 32768 nlockmgr&lt;br&gt;
100021 3 udp 32768 nlockmgr&lt;br&gt;
100021 4 udp 32768 nlockmgr&lt;br&gt;
100021 1 tcp 32768 nlockmgr&lt;br&gt;
100021 3 tcp 32768 nlockmgr&lt;br&gt;
100021 4 tcp 32768 nlockmgr&lt;br&gt;
100005 1 udp 32767 mountd&lt;br&gt;
100005 1 tcp 32767 mountd&lt;br&gt;
100005 2 udp 32767 mountd&lt;br&gt;
100005 2 tcp 32767 mountd&lt;br&gt;
100005 3 udp 32767 mountd&lt;br&gt;
100005 3 tcp 32767 mountd&lt;/p&gt;
&lt;p&gt;# master table of exports&lt;br&gt;
\$ cat /var/lib/nfs/etab&lt;br&gt;
/var/nfs
10.0.0.0/24(rw,sync,wdelay,hide,nocrossmnt,secure,root_squash,no_all_squash,no_subtree_check,secure_locks,acl,anonuid=65534,anongid=65534)&lt;/p&gt;
&lt;p&gt;# table of clients accessing server's exports&lt;br&gt;
\$ cat /var/lib/nfs/rmtab&lt;br&gt;
10.0.0.10:/var/nfs:0x00000002&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a gref="http://www.ibm.com/developerworks/library/l-network-filesystems/"&gt;http://www.ibm.com/developerworks/library/l-network-filesystems/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Debian"></category><category term="ESXi"></category><category term="filesystem"></category><category term="FireWall"></category><category term="NFS"></category><category term="storage"></category><category term="VMware"></category></entry><entry><title>Reset evaluation license VMware ESXi 5.1.0</title><link href="http://wiki.jokeru.ro/how-to-reset-evaluation-license-vmware-esxi-5-1-0.html" rel="alternate"></link><published>2013-10-22T21:15:00+01:00</published><updated>2013-10-22T21:15:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-10-22:/how-to-reset-evaluation-license-vmware-esxi-5-1-0.html</id><summary type="html">&lt;p&gt;This little tutorial should be applied only if you're running an ESXi
5.1 host with more than 32GB RAM.&lt;br&gt;
If you're having less than 32GB RAM, you should use the Free License
provided by VMware.&lt;/p&gt;
&lt;p&gt;Starting with &lt;a href="http://www.vmware.com/products/vsphere-hypervisor/" title="http://www.vmware.com/products/vsphere-hypervisor/"&gt;VMware vSphere Hypervisor
5.5&lt;/a&gt;,
the limitation of 32GB RAM per server …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This little tutorial should be applied only if you're running an ESXi
5.1 host with more than 32GB RAM.&lt;br&gt;
If you're having less than 32GB RAM, you should use the Free License
provided by VMware.&lt;/p&gt;
&lt;p&gt;Starting with &lt;a href="http://www.vmware.com/products/vsphere-hypervisor/" title="http://www.vmware.com/products/vsphere-hypervisor/"&gt;VMware vSphere Hypervisor
5.5&lt;/a&gt;,
the limitation of 32GB RAM per server/host has been removed :) !&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# Tested on VMware ESXi 5.1.0 build 1065491&lt;br&gt;
\$ rm /etc/vmware/license.cfg&lt;br&gt;
\$ cp /etc/vmware/.#license.cfg /etc/vmware/license.cfg&lt;br&gt;
\$ /etc/init.d/vpxa restart&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="ESXi"></category><category term="license"></category><category term="VMware"></category></entry><entry><title>MySQL Cluster Setup</title><link href="http://wiki.jokeru.ro/mysql-cluster-setup.html" rel="alternate"></link><published>2013-10-13T21:21:00+01:00</published><updated>2013-10-13T21:21:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-10-13:/mysql-cluster-setup.html</id><summary type="html">&lt;p&gt;2 x Data Nodes - data01, data02&lt;br&gt;
2 x MySQL Nodes - mysql01, mysql02&lt;br&gt;
1 x Management Node - mgm&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Data Nodes&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ apt-get install libaio1 -y&lt;br&gt;
\$ wget
http://dev.mysql.com/get/Downloads/MySQL-Cluster-7.3/mysql-cluster-gpl-7.3.2-debian6.0-x86_64.deb/from/http://cdn.mysql.com/
-O mysql-cluster-gpl-7.3.2-debian6.0-x86_64 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;2 x Data Nodes - data01, data02&lt;br&gt;
2 x MySQL Nodes - mysql01, mysql02&lt;br&gt;
1 x Management Node - mgm&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Data Nodes&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ apt-get install libaio1 -y&lt;br&gt;
\$ wget
http://dev.mysql.com/get/Downloads/MySQL-Cluster-7.3/mysql-cluster-gpl-7.3.2-debian6.0-x86_64.deb/from/http://cdn.mysql.com/
-O mysql-cluster-gpl-7.3.2-debian6.0-x86_64.deb&lt;br&gt;
\$ dpkg -i mysql-cluster-gpl-7.3.2-debian6.0-x86_64.deb&lt;br&gt;
\$ ln -s /opt/mysql/server-5.6/ /usr/local/mysql&lt;br&gt;
\$ export PATH=\$PATH:/usr/local/mysql/bin&lt;br&gt;
\$ echo "export PATH=\\$PATH:/usr/local/mysql/bin" &gt;&gt;
/etc/bash.bashrc&lt;br&gt;
\$ groupadd mysql&lt;br&gt;
\$ useradd -g mysql mysql&lt;br&gt;
\$ cd /usr/local/mysql&lt;br&gt;
\$ ./scripts/mysql_install_db --user=mysql&lt;br&gt;
\$ chown -R root .&lt;br&gt;
\$ chown -R mysql data&lt;br&gt;
\$ chgrp -R mysql .&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt; /etc/my.cnf&lt;br&gt;
[mysqld]&lt;br&gt;
ndbcluster # run NDB storage engine&lt;br&gt;
[mysql_cluster]&lt;br&gt;
ndb-connectstring=mgm # location of management server&lt;br&gt;
EOF&lt;br&gt;
\$ echo "/usr/local/mysql/bin/ndbd" &gt;&gt; /etc/rc.local&lt;/p&gt;
&lt;p&gt;# copy ndb_mgm binaries to management server&lt;br&gt;
\$ scp /usr/local/mysql/bin/ndb_mgm* root@mgm:/usr/local/bin/&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL Nodes&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ apt-get install libaio1 -y&lt;br&gt;
\$ wget
http://dev.mysql.com/get/Downloads/MySQL-Cluster-7.3/mysql-cluster-gpl-7.3.2-debian6.0-x86_64.deb/from/http://cdn.mysql.com/
-O mysql-cluster-gpl-7.3.2-debian6.0-x86_64.deb&lt;br&gt;
\$ dpkg -i mysql-cluster-gpl-7.3.2-debian6.0-x86_64.deb&lt;br&gt;
\$ ln -s /opt/mysql/server-5.6/ /usr/local/mysql&lt;br&gt;
\$ export PATH=\$PATH:/usr/local/mysql/bin&lt;br&gt;
\$ echo "export PATH=\\$PATH:/usr/local/mysql/bin" &gt;&gt;
/etc/bash.bashrc&lt;br&gt;
\$ groupadd mysql&lt;br&gt;
\$ useradd -g mysql mysql&lt;br&gt;
\$ cd /usr/local/mysql&lt;br&gt;
\$ ./scripts/mysql_install_db --user=mysql&lt;br&gt;
\$ chown -R root .&lt;br&gt;
\$ chown -R mysql data&lt;br&gt;
\$ chgrp -R mysql .&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt; /etc/my.cnf&lt;br&gt;
[client]&lt;br&gt;
port = 3306&lt;br&gt;
socket = /tmp/mysql.sock&lt;br&gt;
[mysqld]&lt;br&gt;
port = 3306&lt;br&gt;
socket = /tmp/mysql.sock&lt;br&gt;
ndbcluster # run NDB storage engine&lt;br&gt;
ndb-connectstring=mgm # location of management server&lt;br&gt;
[mysql_cluster]&lt;br&gt;
ndb-connectstring=mgm # location of management server&lt;br&gt;
EOF&lt;br&gt;
\$ cp support-files/mysql.server /etc/init.d/mysql&lt;br&gt;
\$ chmod +x /etc/init.d/mysql&lt;br&gt;
\$ update-rc.d mysql defaults&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Management Node&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ ls /usr/local/bin/ndb_mgm*&lt;br&gt;
\$ mkdir /var/lib/mysql-cluster&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt; /var/lib/mysql-cluster/config.ini&lt;br&gt;
[tcp default]&lt;/p&gt;
&lt;p&gt;[ndbd default]&lt;br&gt;
NoOfReplicas=1&lt;br&gt;
DataMemory=80M # Default&lt;br&gt;
IndexMemory=18M # Default&lt;/p&gt;
&lt;p&gt;[ndb_mgmd]&lt;br&gt;
NodeId=255 # Max Id&lt;br&gt;
hostname=mgm&lt;br&gt;
datadir=/var/lib/mysql-cluster # Directory for MGM node log files&lt;/p&gt;
&lt;p&gt;[ndbd]&lt;br&gt;
NodeId=1&lt;br&gt;
hostname=data01&lt;br&gt;
datadir=/usr/local/mysql/data # Directory for this data node's data
files&lt;br&gt;
[ndbd]&lt;br&gt;
NodeId=2&lt;br&gt;
hostname=data02&lt;br&gt;
datadir=/usr/local/mysql/data # Directory for this data node's data
files&lt;/p&gt;
&lt;p&gt;[mysqld]&lt;br&gt;
NodeId=101&lt;br&gt;
hostname=mysql01&lt;br&gt;
[mysqld]&lt;br&gt;
NodeId=102&lt;br&gt;
hostname=mysql02&lt;br&gt;
EOF&lt;br&gt;
# start management node&lt;br&gt;
\$ ndb_mgmd --initial -f /var/lib/mysql-cluster/config.ini
--configdir=/var/lib/mysql-cluster/&lt;br&gt;
\$ ndb_mgm -e "show"&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Data Nodes&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# start data nodes&lt;br&gt;
\$ ndbd --initial&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL Nodes&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# start mysql nodes&lt;br&gt;
\$ /etc/init.d/mysql start&lt;br&gt;
\$ mysql_secure_installation&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://dev.mysql.com/doc/refman/5.6/en/mysql-cluster.html"&gt;http://dev.mysql.com/doc/refman/5.6/en/mysql-cluster.html&lt;/a&gt;&lt;br&gt;
&lt;a href="http://wiki.jokeru.ro/wp-content/uploads/2013/10/mysql-cluster-technical-whitepaper.pdf"&gt;mysql-cluster-technical-whitepaper&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="cluster"></category><category term="db"></category><category term="Debian"></category><category term="High Availability"></category><category term="MySQL"></category><category term="Replication"></category></entry><entry><title>elasticsearch basics and commands</title><link href="http://wiki.jokeru.ro/elasticsearch-basics-and-commands.html" rel="alternate"></link><published>2013-10-11T11:55:00+01:00</published><updated>2013-10-11T11:55:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-10-11:/elasticsearch-basics-and-commands.html</id><summary type="html">&lt;p&gt;A cluster consists of one or more nodes which share the same cluster
name. Each cluster has a single master node which is chosen
automatically by the cluster and which can be replaced if the current
master node fails.&lt;/p&gt;
&lt;p&gt;A node is a running instance of elasticsearch which belongs to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A cluster consists of one or more nodes which share the same cluster
name. Each cluster has a single master node which is chosen
automatically by the cluster and which can be replaced if the current
master node fails.&lt;/p&gt;
&lt;p&gt;A node is a running instance of elasticsearch which belongs to a
cluster. At startup, a node will use unicast (or multicast, if
specified) to discover an existing cluster with the same cluster name
and will try to join that cluster.&lt;/p&gt;
&lt;p&gt;An index is like a database in a relational database. It has a mapping
which defines multiple types.&lt;/p&gt;
&lt;p&gt;A type is like a table in a relational database. Each type has a list of
fields that can be specified for documents of that type. The mapping
defines how each field in the document is analyzed.&lt;/p&gt;
&lt;p&gt;A document is a JSON document which is stored in elasticsearch. It is
like a row in a table in a relational database. Each document is stored
in an index and has a type and an id.&lt;/p&gt;
&lt;p&gt;A document contains a list of fields, or key-value pairs. The value can
be a simple (scalar) value (eg a string, integer, date), or a nested
structure like an array or an object. A field is similar to a column in
a table in a relational database. The mapping for each field has a field
type (not to be confused with document type) which indicates the type of
data that can be stored in that field, eg integer, string, object.&lt;/p&gt;
&lt;p&gt;The ID of a document identifies a document. The index/type/id of a
document must be unique. If no ID is provided, then it will be
auto-generated.&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
# delete all data&lt;br&gt;
\$ curl -XDELETE 'http://localhost:9200/_all/'&lt;/p&gt;
&lt;p&gt;# get cluster info&lt;br&gt;
\$ curl -XGET 'http://localhost:9200/_cluster/health?pretty=true'&lt;br&gt;
\$ curl -XGET 'http://localhost:9200/_cluster/nodes/stats?pretty=true'&lt;/p&gt;
&lt;p&gt;# set index template&lt;br&gt;
\$ curl -XPUT http://localhost:9200/_template/squid-access -d '&lt;br&gt;
{&lt;br&gt;
"template": "squid-access-*",&lt;br&gt;
"settings": {&lt;br&gt;
"index.refresh_interval": "3s",&lt;br&gt;
"index.query.default_field": "uri"&lt;br&gt;
},&lt;br&gt;
"mappings": { "_default_": { "_all": { "enabled": false } } }&lt;br&gt;
}'&lt;br&gt;
# get index template&lt;br&gt;
\$ curl -XGET 'http://localhost:9200/_cluster/state?pretty=true' |
less&lt;br&gt;
# delete index template&lt;br&gt;
\$ curl -XDELETE http://localhost:9200/_template/squid-access&lt;/p&gt;
&lt;p&gt;# get mapping&lt;br&gt;
\$ curl -XGET 'http://localhost:9200/_all/_mapping?pretty=true'&lt;br&gt;
# get settings&lt;br&gt;
\$ curl -XGET 'http://localhost:9200/_all/_settings?pretty=true'&lt;/p&gt;
&lt;p&gt;# get data&lt;br&gt;
\$ curl -XGET
'http://localhost:9200/squid-access-2013.10.11/logs/_search?pretty=true'&lt;br&gt;
\$ curl -XGET
'http://localhost:9200/squid-access-2013.10.11/logs/eQWX9i04RAaf-mqpbwlzwg?pretty=true'&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="db"></category><category term="elasticsearch"></category></entry><entry><title>New Volume to Amazon EC2 Instance</title><link href="http://wiki.jokeru.ro/new-volume-to-amazon-ec2-instance.html" rel="alternate"></link><published>2013-10-03T06:06:00+01:00</published><updated>2013-10-03T06:06:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-10-03:/new-volume-to-amazon-ec2-instance.html</id><summary type="html">&lt;p&gt;Login to AWS Management Console, create new EBS Volume and attach it to
the instance as /dev/sdf (the instance will see the new volume as
/dev/xvdf).&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ fdisk /dev/xvdf&lt;br&gt;
# primary partition /dev/xvdf1&lt;br&gt;
# type Linux LVM (8e)&lt;/p&gt;
&lt;p&gt;\$ pvcreate /dev/xvdf1&lt;br&gt;
\$ vgcreate VG-IMG /dev/xvdf1&lt;br&gt;
\$ lvcreate …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Login to AWS Management Console, create new EBS Volume and attach it to
the instance as /dev/sdf (the instance will see the new volume as
/dev/xvdf).&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ fdisk /dev/xvdf&lt;br&gt;
# primary partition /dev/xvdf1&lt;br&gt;
# type Linux LVM (8e)&lt;/p&gt;
&lt;p&gt;\$ pvcreate /dev/xvdf1&lt;br&gt;
\$ vgcreate VG-IMG /dev/xvdf1&lt;br&gt;
\$ lvcreate --name LV-IMG --extents 127999 VG-IMG&lt;br&gt;
\$ mkfs.ext4 /dev/VG-IMG/LV-IMG&lt;br&gt;
\$ mkdir /IMG&lt;br&gt;
\$ mount /dev/VG-IMG/LV-IMG /IMG&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Amazon"></category><category term="AWS"></category><category term="cloud"></category><category term="filesystem"></category><category term="Ubuntu"></category></entry><entry><title>ElasticSearch Tunning for LogStash</title><link href="http://wiki.jokeru.ro/elasticsearch-tunning-for-logstash.html" rel="alternate"></link><published>2013-09-30T12:15:00+01:00</published><updated>2013-09-30T12:15:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-09-30:/elasticsearch-tunning-for-logstash.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# create ext4 fs on /dev/sdb1&lt;br&gt;
\$ mkfs.ext4 /dev/sdb1&lt;br&gt;
# enable writeback mode, this mode will typically provide the best
ext4 performance&lt;br&gt;
\$ tune2fs -o journal_data_writeback /dev/sdb1&lt;br&gt;
# delete has_journal option&lt;br&gt;
\$ tune2fs -O \^has_journal /dev/sdb1&lt;br&gt;
# required fsck&lt;br&gt;
\$ e2fsck -f /dev/sdb1&lt;br&gt;
# check fs options&lt;br&gt;
\$ dumpe2fs /dev/sdb1 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# create ext4 fs on /dev/sdb1&lt;br&gt;
\$ mkfs.ext4 /dev/sdb1&lt;br&gt;
# enable writeback mode, this mode will typically provide the best
ext4 performance&lt;br&gt;
\$ tune2fs -o journal_data_writeback /dev/sdb1&lt;br&gt;
# delete has_journal option&lt;br&gt;
\$ tune2fs -O \^has_journal /dev/sdb1&lt;br&gt;
# required fsck&lt;br&gt;
\$ e2fsck -f /dev/sdb1&lt;br&gt;
# check fs options&lt;br&gt;
\$ dumpe2fs /dev/sdb1 | less&lt;br&gt;
# add to fstab&lt;br&gt;
\$ echo "/dev/sdb1 /var/lib/elasticsearch ext4
defaults,data=writeback,noatime 0 0" &gt;&gt; /etc/fstab&lt;br&gt;
# mount&lt;br&gt;
\$ mkdir /var/lib/elasticsearch&lt;br&gt;
\$ mount /var/lib/elasticsearch&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/jordansissel/experiments/tree/master/elasticsearch/disk"&gt;https://github.com/jordansissel/experiments/tree/master/elasticsearch/disk&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/logstash/logstash/wiki/Elasticsearch-Storage-Optimization"&gt;https://github.com/logstash/logstash/wiki/Elasticsearch-Storage-Optimization&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="elasticsearch"></category><category term="filesystem"></category><category term="logstash"></category><category term="Performance"></category><category term="Tuning"></category></entry><entry><title>Centralizing Logs</title><link href="http://wiki.jokeru.ro/centralizing-logs.html" rel="alternate"></link><published>2013-09-05T12:12:00+01:00</published><updated>2013-09-05T12:12:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-09-05:/centralizing-logs.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Log Server&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# prerequisites&lt;br&gt;
\$ apt-get install default-jre-headless curl -y&lt;br&gt;
\$ echo -e "root hard nofile 1024000\nroot soft nofile 1024000" &gt;&gt;
/etc/security/limits.conf&lt;/p&gt;
&lt;p&gt;# logstash 1.2.0&lt;br&gt;
\$ mkdir /usr/share/logstash&lt;br&gt;
\$ wget -q --no-check-certificate
https://logstash.objects.dreamhost.com/release/logstash-1.2.0-flatjar.jar
-O /usr/share/logstash …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Log Server&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# prerequisites&lt;br&gt;
\$ apt-get install default-jre-headless curl -y&lt;br&gt;
\$ echo -e "root hard nofile 1024000\nroot soft nofile 1024000" &gt;&gt;
/etc/security/limits.conf&lt;/p&gt;
&lt;p&gt;# logstash 1.2.0&lt;br&gt;
\$ mkdir /usr/share/logstash&lt;br&gt;
\$ wget -q --no-check-certificate
https://logstash.objects.dreamhost.com/release/logstash-1.2.0-flatjar.jar
-O /usr/share/logstash/logstash.jar&lt;br&gt;
\$ vi /etc/init.d/logstash&lt;br&gt;
\$ chmod +x /etc/init.d/logstash&lt;br&gt;
\$ update-rc.d logstash defaults&lt;br&gt;
\$ mkdir /etc/logstash&lt;br&gt;
\$ vi /etc/logstash/logstash.conf&lt;br&gt;
\$ /etc/init.d/logstash restart&lt;/p&gt;
&lt;p&gt;# elasticsearch 0.90.3 (version required by logtash 1.2.0)&lt;br&gt;
\$ wget -q
https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-0.90.3.deb&lt;br&gt;
\$ dpkg -i elasticsearch-0.90.3.deb; rm elasticsearch-0.90.3.deb&lt;br&gt;
\$ vi /etc/elasticsearch/elasticsearch.yml&lt;br&gt;
\$ /etc/init.d/elasticsearch restart&lt;/p&gt;
&lt;p&gt;# lighttpd &amp;amp; kibana 3&lt;br&gt;
\$ apt-get install lighttpd&lt;br&gt;
\$ cd /var/www/&lt;br&gt;
\$ wget https://github.com/elasticsearch/kibana/archive/master.tar.gz&lt;br&gt;
\$ tar -xzf master.tar.gz&lt;br&gt;
\$ /etc/init.d/lighttpd restart&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/init.d/logstash&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
#! /bin/sh&lt;/p&gt;
&lt;p&gt;### BEGIN INIT INFO&lt;br&gt;
# Provides: logstash&lt;br&gt;
# Required-Start: \$remote_fs \$syslog&lt;br&gt;
# Required-Stop: \$remote_fs \$syslog&lt;br&gt;
# Default-Start: 2 3 4 5&lt;br&gt;
# Default-Stop: 0 1 6&lt;br&gt;
# Short-Description: Start daemon at boot time&lt;br&gt;
# Description: Enable service provided by daemon.&lt;br&gt;
### END INIT INFO&lt;/p&gt;
&lt;p&gt;. /lib/lsb/init-functions&lt;/p&gt;
&lt;p&gt;name="logstash"&lt;br&gt;
logstash_bin="/usr/bin/java -- -Xms1g -Xmx2g -jar
/usr/share/logstash/logstash.jar"&lt;br&gt;
logstash_conf="/etc/logstash/logstash.conf"&lt;br&gt;
logstash_log="/var/log/logstash.log"&lt;br&gt;
pid_file="/var/run/\$name.pid"&lt;/p&gt;
&lt;p&gt;start () {&lt;br&gt;
command="\${logstash_bin} agent -f \$logstash_conf --log
\${logstash_log}"&lt;/p&gt;
&lt;p&gt;log_daemon_msg "Starting \$name" "\$name"&lt;br&gt;
if start-stop-daemon --start --quiet --oknodo --pidfile "\$pid_file"
-b -m --exec \$command; then&lt;br&gt;
log_end_msg 0&lt;br&gt;
else&lt;br&gt;
log_end_msg 1&lt;br&gt;
fi&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;stop () {&lt;br&gt;
log_daemon_msg "Stopping \$name" "\$name"&lt;br&gt;
start-stop-daemon --stop --quiet --oknodo --pidfile "\$pid_file"&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;status () {&lt;br&gt;
status_of_proc -p \$pid_file "" "\$name"&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;case \$1 in&lt;br&gt;
start)&lt;br&gt;
if status; then exit 0; fi&lt;br&gt;
start&lt;br&gt;
;;&lt;br&gt;
stop)&lt;br&gt;
stop&lt;br&gt;
;;&lt;br&gt;
reload)&lt;br&gt;
stop&lt;br&gt;
start&lt;br&gt;
;;&lt;br&gt;
restart)&lt;br&gt;
stop&lt;br&gt;
start&lt;br&gt;
;;&lt;br&gt;
status)&lt;br&gt;
status &amp;amp;&amp;amp; exit 0 || exit \$?&lt;br&gt;
;;&lt;br&gt;
*)&lt;br&gt;
echo "Usage: \$0 {start|stop|restart|reload|status}"&lt;br&gt;
exit 1&lt;br&gt;
;;&lt;br&gt;
esac&lt;/p&gt;
&lt;p&gt;exit 0&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/logstash/logstash.conf&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
input {&lt;br&gt;
tcp {&lt;br&gt;
type =&gt; "squid-access"&lt;br&gt;
port =&gt; 1025&lt;br&gt;
}&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;filter {&lt;br&gt;
grok {&lt;br&gt;
type =&gt; "squid-access"&lt;br&gt;
match =&gt; [ "message", "\&amp;lt;%{POSINT}&gt;%{SYSLOGTIMESTAMP}
%{SYSLOGHOST:source} %{DATA}(?:\[%{POSINT}\])?:
%{TIMESTAMP_ISO8601:ts} %{IP:client}:%{INT} %{DATA:proxy}
%{DATA:squid_code}/%{INT:http_code} %{WORD:request} %{DATA:uri}
%{DATA:mime} %{DATA:remote} %{INT:size}B %{INT:time}ms
%{DATA:remote_time}ms" ]&lt;br&gt;
}&lt;br&gt;
date {&lt;br&gt;
type =&gt; "squid-access"&lt;br&gt;
match =&gt; [ "ts" , "ISO8601" ]&lt;br&gt;
}&lt;br&gt;
mutate {&lt;br&gt;
type =&gt; "squid-access"&lt;br&gt;
rename =&gt; [ "source","@source" ]&lt;br&gt;
remove =&gt; [ "message", "@version", "host", "source", "ts" ]&lt;br&gt;
}&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;output {&lt;br&gt;
# stdout {&lt;br&gt;
# debug =&gt; true&lt;br&gt;
# debug_format =&gt; "json"&lt;br&gt;
# }&lt;br&gt;
elasticsearch {&lt;br&gt;
type =&gt; "squid-access"&lt;br&gt;
cluster =&gt; "log-cluster"&lt;br&gt;
index =&gt; "squid-access-%{+YYYY.MM.dd}"&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/elasticsearch/elasticsearch.yml&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
cluster.name: log-cluster&lt;br&gt;
index.number_of_shards: 1&lt;br&gt;
index.number_of_replicas: 0&lt;br&gt;
compress.default.type: lzf&lt;br&gt;
index.store.compress.stored: true&lt;br&gt;
index.store.compress.tv: true&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On Every Node&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ cat \&amp;lt;&lt;eof&gt; /etc/rsyslog.d/log.jokeru.ro.conf&lt;br&gt;
\$ModLoad imfile&lt;/p&gt;
&lt;p&gt;\$InputFileName /var/log/squid/access.log&lt;br&gt;
\$InputFileStateFile state-squid&lt;br&gt;
\$InputFileTag squid:&lt;br&gt;
\$InputFileFacility local0&lt;br&gt;
\$InputFileSeverity debug # to not log in /var/log/messages&lt;br&gt;
\$InputRunFileMonitor&lt;/p&gt;
&lt;p&gt;\$InputFilePollInterval 3&lt;/p&gt;
&lt;p&gt;local0.debug @@log.jokeru.ro:1025&lt;br&gt;
EOF&lt;br&gt;
\$ /etc/init.d/rsyslog restart&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://lucene.apache.org/core/3_6_0/queryparsersyntax.html"&gt;Kibana search
syntax&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Debian"></category><category term="elasticsearch"></category><category term="kibana"></category><category term="logstash"></category><category term="monitoring"></category><category term="Performance"></category></entry><entry><title>Centreon install on CentOS</title><link href="http://wiki.jokeru.ro/centreon-install-on-centos.html" rel="alternate"></link><published>2013-09-04T12:00:00+01:00</published><updated>2013-09-04T12:00:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-09-04:/centreon-install-on-centos.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Centreon 2.4.4 on CentOS 5.9 (clean install, minimal, selinux
disabled)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ wget http://yum.centreon.com/standard/2.2/ces-standard.repo -O
/etc/yum.repos.d/ces-standard.repo&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; /etc/pki/rpm-gpg/RPM-GPG-KEY-CES&lt;br&gt;
-----BEGIN PGP PUBLIC KEY BLOCK-----&lt;br&gt;
Version: GnuPG v1.4.5 (GNU …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Centreon 2.4.4 on CentOS 5.9 (clean install, minimal, selinux
disabled)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ wget http://yum.centreon.com/standard/2.2/ces-standard.repo -O
/etc/yum.repos.d/ces-standard.repo&lt;br&gt;
\$ cat \&amp;lt;\&amp;lt;'EOF' &gt; /etc/pki/rpm-gpg/RPM-GPG-KEY-CES&lt;br&gt;
-----BEGIN PGP PUBLIC KEY BLOCK-----&lt;br&gt;
Version: GnuPG v1.4.5 (GNU/Linux)&lt;/p&gt;
&lt;p&gt;mQGiBEy28fYRBADHbNta9G3rwLDRdN+v4KjjNVkFWr1AgbjHW8 t1dH3jE/RW99HL&lt;br&gt;
VJFoW1pS29BwZG/LjQiQbHJkn9cqzOxV26LMMAdncfeAiXEBVzQMH1lRBw/LmIQz&lt;br&gt;
QgLcvsldpn04Op0qNl3ZFFZnnKYZsIn16Du1uNqfClOBiceL2l Xvk7k0vwCggd5F&lt;br&gt;
DtRJJvFQycOq/1/M/8ZuXgMD/3jYXLDfPDVRQZMeGN25jcn4o+LhvNOqpeBe7rfF&lt;br&gt;
xSwBi1fwh0lvNqPTR7GXxvtfaYeU9swMZZ/+ZMbPgBJ29mnzpo3yfJrt3fP9WgOe&lt;br&gt;
mgOTBH+96YAHXY+jWxi+Lk1oxQCbdPMbtZ59wz6WCirb0X+89q LvouXPCZzMp/eG&lt;br&gt;
2a77A/9S9sKa6fbX74a24suurN+ZhmZZSEJldh3HoofByoF92Gzv2DKK ZIpFb1GN&lt;br&gt;
qFa8jVt4JVF60N3bn9ir6uxno5ARuSWTVIF+WTvoNMiEdjvWRU 3oLJtJL1luUyLT&lt;br&gt;
Dffb8NEej3e87IEH/4ehA6mv7a6i/7zrY5nDf5zXiqZ3HsGMSbRGQ2VudHJlb24g&lt;br&gt;
RW50ZXJwcmlzZSBTZXJ2ZXIgT2ZmaWNpYWwgU2lnbmluZyBLZX kgPGNlcy1rZXlA&lt;br&gt;
Y2VudHJlb24uY29tPohgBBMRAgAgBQJMtvH2AhsDBgsJCAcDAg QVAggDBBYCAwEC&lt;br&gt;
HgECF4AACgkQ9vxK44p2UrywwQCfSC57qk19N6sBRcbAi+wwbp gmLRQAnAjONYcT&lt;br&gt;
J4DasO87MOFV2oaj7dEpuQINBEy28fwQCAC2W2g5LoyOOOaGKm AvClee2dbLqMj/&lt;br&gt;
b+rdk06FN9avQCg7q45IL1E9j2b4iZayY/DSxB+FZ1bu2vDkci9pMPOdiv/aa+i6&lt;br&gt;
VyFQOO4/LgiNI9siMczf+Uwy5SqOUJNH/6c2Dy+PvYTOqx4F650EnQCVfy1lxMUS&lt;br&gt;
EiWIz21RfnXIJgC4TzJJHr8+hfnORZp44g5PwuA1qgdgRCgbe8 WA+mcKsacC639P&lt;br&gt;
fD4iCLYnruNfMKBxIn9lJCmAlSRRdtnvG8UvUtPcdC3USXWnGm p8IZsJk8fq3Pdb&lt;br&gt;
aQqLj5gifdpfyN9kch+jSGmwOnXBQjoJVahoO/vHYlFPCFS4sFHtQ+ZXAAMFB/94&lt;br&gt;
HBPCobYYfD1sG+LUBxBTOfhAWGF26dIR5GUfuI0e6xdqj6tzUz S9rMznQEWK93pE&lt;br&gt;
QX7fKCzOYnpime85L7YHHDi2Buk69qJnYiB4RJyY1hKloHCOVM bhXxsCBStEphZM&lt;br&gt;
j5irY0igeOPRj/NW/h75l3FWXmU51TdoiBSE5NRKqCkj+8thAKLbA99B3Oo5/jlG&lt;br&gt;
7BHQDyVlYAE1vMXKXjl17B9TnTJITkzERebqoQiVwngWRvgsHB l8QG8Jh43GQty5&lt;br&gt;
NqpkHshLED37V5rbp9EOIY1nugxUpZSUcSSHNvWUk34yL9XGZE 32L0js69MGT0hq&lt;br&gt;
/6pVMNcgBjtJoqo+p1GLiEkEGBECAAkFAky28fwCGwwACgkQ9vx K44p2UryUzwCe&lt;br&gt;
KFbF6AzjpXX4QuXAL2FwkRpaZfEAnAvM8pfjca6BVWlT3bmimK bMYkGP&lt;br&gt;
=+us4&lt;br&gt;
-----END PGP PUBLIC KEY BLOCK-----&lt;br&gt;
EOF&lt;/p&gt;
&lt;p&gt;\$ yum install centreon-base-config-nagios centreon -y&lt;br&gt;
\$ yum install centreon-poller-nagios -y&lt;/p&gt;
&lt;p&gt;\$ /etc/init.d/httpd start&lt;/p&gt;
&lt;p&gt;\$ yum install mysql-server -y&lt;br&gt;
\$ sed -i.bak 's/\[mysqld\]/\[mysqld\]\nbind-address =
127.0.0.1\ninnodb_file_per_table = 1/' /etc/my.cnf&lt;br&gt;
\$ /etc/init.d/mysqld start&lt;br&gt;
\$ mysql_secure_installation&lt;/p&gt;
&lt;p&gt;\$ chkconfig httpd on&lt;br&gt;
\$ chkconfig mysqld on&lt;br&gt;
\$ chkconfig snmpd on&lt;br&gt;
\$ chkconfig iptables off&lt;br&gt;
\$ chkconfig ip6tables off&lt;/p&gt;
&lt;p&gt;\$ wget
http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el5.rf.x86_64.rpm&lt;br&gt;
\$ rpm -ivh rpmforge-release-0.5.3-1.el5.rf.x86_64.rpm&lt;br&gt;
\$ wget http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt&lt;br&gt;
\$ rpm --import RPM-GPG-KEY.dag.txt&lt;br&gt;
\$ yum install nagios-plugins-nrpe -y&lt;br&gt;
\$ ln -s /usr/lib64/nagios/plugins/check_nrpe /usr/lib/nagios/plugins/&lt;/p&gt;
&lt;p&gt;# Warning: This plugin must be either run as root or setuid root.&lt;br&gt;
\$ chown root /usr/lib/nagios/plugins/check_icmp&lt;br&gt;
\$ chmod 4775 /usr/lib/nagios/plugins/check_icmp&lt;/p&gt;
&lt;p&gt;\$ sed -i.bak 's/@CENTREON_DB_PASS@/centreon/' /etc/centreon/conf.pm&lt;/p&gt;
&lt;p&gt;\$ sed -i.bak 's/nagios,centreon/nagios,centreon,apache/' /etc/sudoers&lt;/p&gt;
&lt;p&gt;# setup from web interface, use "centreon" as centreon's mysql password&lt;/p&gt;
&lt;p&gt;\$ reboot&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://documentation.centreon.com/docs/centreon/en/latest/installation/from_packages.html"&gt;http://documentation.centreon.com/docs/centreon/en/latest/installation/from_packages.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="CentOS"></category><category term="Centreon"></category><category term="monitoring"></category></entry><entry><title>SSH Auto-Completion in BASH</title><link href="http://wiki.jokeru.ro/ssh-auto-completion-in-bash.html" rel="alternate"></link><published>2013-08-27T12:00:00+01:00</published><updated>2013-08-27T12:00:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-08-27:/ssh-auto-completion-in-bash.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# put any hosts you want to complete in your /etc/hosts&lt;br&gt;
\$ apt-get install bash-completion&lt;br&gt;
\$ vi /etc/bash.bashrc # un-comment bash completion&lt;br&gt;
[/cc]&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# put any hosts you want to complete in your /etc/hosts&lt;br&gt;
\$ apt-get install bash-completion&lt;br&gt;
\$ vi /etc/bash.bashrc # un-comment bash completion&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="BASH"></category><category term="Debian"></category><category term="SSH"></category></entry><entry><title>Linux Users</title><link href="http://wiki.jokeru.ro/linux-users.html" rel="alternate"></link><published>2013-08-13T22:25:00+01:00</published><updated>2013-08-13T22:25:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-08-13:/linux-users.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# show defaults&lt;br&gt;
\$ useradd -D&lt;br&gt;
# add temp user with pass temp&lt;br&gt;
\$ useradd --comment 'Temp User' --create-home --gid 100 --uid 10000
--password eCGwS26XXJXak --shell /bin/bash temp&lt;/p&gt;
&lt;p&gt;# lock the password&lt;br&gt;
\$ passwd --lock temp&lt;br&gt;
# unlock the password&lt;br&gt;
\$ passwd --unlock temp&lt;/p&gt;
&lt;p&gt;# remove user and home&lt;br&gt;
\$ userdel --remove temp&lt;br&gt;
[/cc]&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# show defaults&lt;br&gt;
\$ useradd -D&lt;br&gt;
# add temp user with pass temp&lt;br&gt;
\$ useradd --comment 'Temp User' --create-home --gid 100 --uid 10000
--password eCGwS26XXJXak --shell /bin/bash temp&lt;/p&gt;
&lt;p&gt;# lock the password&lt;br&gt;
\$ passwd --lock temp&lt;br&gt;
# unlock the password&lt;br&gt;
\$ passwd --unlock temp&lt;/p&gt;
&lt;p&gt;# remove user and home&lt;br&gt;
\$ userdel --remove temp&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Debian"></category><category term="users"></category></entry><entry><title>Shipping Logs with Lumberjack (to LogStash)</title><link href="http://wiki.jokeru.ro/shipping-logs-with-lumberjack-to-logstash.html" rel="alternate"></link><published>2013-07-03T16:01:00+01:00</published><updated>2013-07-03T16:01:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-07-03:/shipping-logs-with-lumberjack-to-logstash.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;On the centralized log server:&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# create ssl certificate required by lumberjack&lt;br&gt;
\$ openssl req -x509 -newkey rsa:1024 -keyout
/etc/logstash/logstash.key -out /etc/logstash/logstash.pub -nodes -days
3650&lt;/p&gt;
&lt;p&gt;# build lumberjack package&lt;br&gt;
\$ apt-get install rubygems -y&lt;br&gt;
\$ gem install fpm&lt;br&gt;
\$ export PATH=\$PATH:/var/lib/gems/1 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;On the centralized log server:&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# create ssl certificate required by lumberjack&lt;br&gt;
\$ openssl req -x509 -newkey rsa:1024 -keyout
/etc/logstash/logstash.key -out /etc/logstash/logstash.pub -nodes -days
3650&lt;/p&gt;
&lt;p&gt;# build lumberjack package&lt;br&gt;
\$ apt-get install rubygems -y&lt;br&gt;
\$ gem install fpm&lt;br&gt;
\$ export PATH=\$PATH:/var/lib/gems/1.8/bin&lt;br&gt;
\$ cd /usr/src/&lt;br&gt;
\$ git clone https://github.com/jordansissel/lumberjack.git&lt;br&gt;
\$ cd lumberjack&lt;br&gt;
\$ make&lt;br&gt;
\$ make deb&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On the sender node:&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
# copy logstash.pub to /etc/squid/logs/&lt;br&gt;
\$ dpkg -i lumberjack_0.0.30_amd64.deb&lt;br&gt;
\$ vi /etc/init.d/lumberjack&lt;br&gt;
\$ chmod +x /etc/init.d/lumberjack&lt;br&gt;
\$ update-rc.d lumberjack defaults&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/init.d/lumberjack&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
#! /bin/sh&lt;br&gt;
### BEGIN INIT INFO&lt;br&gt;
# Provides: lumberjack&lt;br&gt;
# Required-Start: \$remote_fs \$syslog&lt;br&gt;
# Required-Stop: \$remote_fs \$syslog&lt;br&gt;
# Should-Start: \$local_fs&lt;br&gt;
# Should-Stop: \$local_fs&lt;br&gt;
# Default-Start: 2 3 4 5&lt;br&gt;
# Default-Stop: 0 1 6&lt;br&gt;
# Short-Description: Start daemon at boot time&lt;br&gt;
# Description: Enable service provided by daemon&lt;br&gt;
### END INIT INFO&lt;/p&gt;
&lt;p&gt;. /lib/lsb/init-functions&lt;/p&gt;
&lt;p&gt;name="lumberjack"&lt;/p&gt;
&lt;p&gt;# Read configuration&lt;br&gt;
HOST=`/bin/hostname -s`&lt;br&gt;
LUMBERJACK_OPTIONS="--field source=\$HOST --host 10.20.30.40 --port
5001 --ssl-ca-path /etc/squid/logs/logstash.pub
/var/log/squid/access.log"&lt;/p&gt;
&lt;p&gt;lumberjack_bin="/opt/lumberjack/bin/lumberjack.sh"&lt;br&gt;
pid_file="/var/run/\$name.pid"&lt;br&gt;
cwd=`pwd`&lt;/p&gt;
&lt;p&gt;start () {&lt;br&gt;
command="\${lumberjack_bin}"&lt;/p&gt;
&lt;p&gt;if start-stop-daemon --start --quiet --oknodo --pidfile "\$pid_file" -b
-m --exec \$command -- \$LUMBERJACK_OPTIONS; then&lt;br&gt;
log_end_msg 0&lt;br&gt;
else&lt;br&gt;
log_end_msg 1&lt;br&gt;
fi&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;stop () {&lt;br&gt;
start-stop-daemon --stop --quiet --oknodo --pidfile "\$pid_file"&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;status () {&lt;br&gt;
status_of_proc -p \$pid_file "" "\$name"&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;case \$1 in&lt;br&gt;
start)&lt;br&gt;
if status; then exit 0; fi&lt;br&gt;
echo -n "Starting \$name: "&lt;br&gt;
start&lt;br&gt;
echo "\$name."&lt;br&gt;
;;&lt;br&gt;
stop)&lt;br&gt;
echo -n "Stopping \$name: "&lt;br&gt;
stop&lt;br&gt;
echo "\$name."&lt;br&gt;
;;&lt;br&gt;
restart)&lt;br&gt;
echo -n "Restarting \$name: "&lt;br&gt;
stop&lt;br&gt;
sleep 1&lt;br&gt;
start&lt;br&gt;
echo "\$name."&lt;br&gt;
;;&lt;br&gt;
status)&lt;br&gt;
status &amp;amp;&amp;amp; exit 0 || exit \$?&lt;br&gt;
;;&lt;br&gt;
*)&lt;br&gt;
echo "Usage: \$0 {start|stop|restart|status}"&lt;br&gt;
exit 1&lt;br&gt;
;;&lt;br&gt;
esac&lt;/p&gt;
&lt;p&gt;exit 0&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/jordansissel/lumberjack"&gt;https://github.com/jordansissel/lumberjack&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="big data"></category><category term="Debian"></category><category term="logs"></category><category term="logstash"></category><category term="lumberjack"></category></entry><entry><title>Network Speed with NetCat and DD</title><link href="http://wiki.jokeru.ro/network-speed-with-netcat-and-dd.html" rel="alternate"></link><published>2013-06-04T15:55:00+01:00</published><updated>2013-06-04T15:55:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-06-04:/network-speed-with-netcat-and-dd.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Server 1&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ nc -vnlp 2222 &gt; /dev/null&lt;br&gt;
listening on [any] 2222 ...&lt;br&gt;
connect to [10.20.30.40] from (UNKNOWN) [50.60.70.80] 46726&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Server 2&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ dd if=/dev/zero bs=10240K count=100 | nc -nv 10.20.30.40 2222&lt;br&gt;
(UNKNOWN) [10 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Server 1&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ nc -vnlp 2222 &gt; /dev/null&lt;br&gt;
listening on [any] 2222 ...&lt;br&gt;
connect to [10.20.30.40] from (UNKNOWN) [50.60.70.80] 46726&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Server 2&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ dd if=/dev/zero bs=10240K count=100 | nc -nv 10.20.30.40 2222&lt;br&gt;
(UNKNOWN) [10.20.30.40] 2222 (?) open&lt;br&gt;
100+0 records in&lt;br&gt;
100+0 records out&lt;br&gt;
1048576000 bytes (1.0 GB) copied, 10.0418 s, 104 MB/s&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="bandwidth"></category><category term="dd"></category><category term="nc"></category><category term="Performance"></category></entry><entry><title>Setup iSCSI Initiator</title><link href="http://wiki.jokeru.ro/setup-iscsi-initiator.html" rel="alternate"></link><published>2013-05-23T12:50:00+01:00</published><updated>2013-05-23T12:50:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-05-23:/setup-iscsi-initiator.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ yum install iscsi-initiator-utils -y&lt;br&gt;
\$ chkconfig netfs on&lt;br&gt;
\$ chkconfig iscsi on&lt;br&gt;
\$ chkconfig iscsid on&lt;br&gt;
\$ echo "InitiatorName=iqn.2013-05.ro.jokeru:"`hostname` &gt;
/etc/iscsi/initiatorname.iscsi&lt;br&gt;
\$ service iscsid start&lt;br&gt;
\$ service iscsi start&lt;/p&gt;
&lt;p&gt;\$ iscsiadm -m discovery -t sendtargets -p 192.168.1.1&lt;br&gt;
\$ iscsiadm -m node -T iqn.1992-08.com …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ yum install iscsi-initiator-utils -y&lt;br&gt;
\$ chkconfig netfs on&lt;br&gt;
\$ chkconfig iscsi on&lt;br&gt;
\$ chkconfig iscsid on&lt;br&gt;
\$ echo "InitiatorName=iqn.2013-05.ro.jokeru:"`hostname` &gt;
/etc/iscsi/initiatorname.iscsi&lt;br&gt;
\$ service iscsid start&lt;br&gt;
\$ service iscsi start&lt;/p&gt;
&lt;p&gt;\$ iscsiadm -m discovery -t sendtargets -p 192.168.1.1&lt;br&gt;
\$ iscsiadm -m node -T iqn.1992-08.com.netapp:storage1 -p 192.168.1.1&lt;br&gt;
\$ iscsiadm -m node -T iqn.1992-08.com.netapp:storage1 -p 192.168.1.1
--login&lt;br&gt;
\$ iscsiadm -m discovery -t sendtargets -p 192.168.1.2&lt;br&gt;
\$ iscsiadm -m node -T iqn.1992-08.com.netapp:storage2 -p 192.168.1.2&lt;br&gt;
\$ iscsiadm -m node -T iqn.1992-08.com.netapp:storage2 -p 192.168.1.2
--login&lt;/p&gt;
&lt;p&gt;\$ i=1&lt;br&gt;
\$ for dev in `ls -l /dev/disk/by-path/ | grep netapp | sort | awk
'{print \$11}' | cut -d'/' -f3`&lt;br&gt;
\$ do&lt;br&gt;
\$ parted /dev/\$dev mklabel msdos&lt;br&gt;
\$ parted /dev/\$dev mkpart primary 1 20480&lt;br&gt;
\$ mkfs.ext4 "/dev/\$dev"1&lt;br&gt;
\$ mkdir -p "/mnt/disk\$i"&lt;br&gt;
\$ echo "/dev/disk/by-id/scsi-"`scsi_id -g /dev/\$dev`"-part1
/mnt/disk\$i ext4 _netdev 0 0" &gt;&gt; /etc/fstab&lt;br&gt;
\$ ((i++))&lt;br&gt;
\$ done&lt;/p&gt;
&lt;p&gt;\$ reboot&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="CentOS"></category><category term="filesystem"></category><category term="iSCSI"></category><category term="SAN"></category><category term="storage"></category></entry><entry><title>Find the package that contains a file</title><link href="http://wiki.jokeru.ro/find-the-package-that-contains-a-file.html" rel="alternate"></link><published>2013-03-29T14:13:00+00:00</published><updated>2013-03-29T14:13:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-03-29:/find-the-package-that-contains-a-file.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install apt-file&lt;br&gt;
\$ apt-file update&lt;br&gt;
\$ apt-file search mysqldump&lt;br&gt;
bacula-common:
/usr/share/doc/bacula-common/examples/database/bacula-sqlite_2_mysqldump.sh&lt;br&gt;
mysql-client-5.1: /usr/bin/mysqldump&lt;br&gt;
mysql-client-5.1: /usr/bin/mysqldumpslow&lt;br&gt;
mysql-client-5.1: /usr/share/man/man1/mysqldump.1.gz&lt;br&gt;
mysql-client-5.1: /usr/share/man/man1/mysqldumpslow.1.gz&lt;br&gt;
[/cc]&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install apt-file&lt;br&gt;
\$ apt-file update&lt;br&gt;
\$ apt-file search mysqldump&lt;br&gt;
bacula-common:
/usr/share/doc/bacula-common/examples/database/bacula-sqlite_2_mysqldump.sh&lt;br&gt;
mysql-client-5.1: /usr/bin/mysqldump&lt;br&gt;
mysql-client-5.1: /usr/bin/mysqldumpslow&lt;br&gt;
mysql-client-5.1: /usr/share/man/man1/mysqldump.1.gz&lt;br&gt;
mysql-client-5.1: /usr/share/man/man1/mysqldumpslow.1.gz&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Debian"></category><category term="Ubuntu"></category></entry><entry><title>Generate CSR with OpenSSL</title><link href="http://wiki.jokeru.ro/generate-csr-with-openssl.html" rel="alternate"></link><published>2013-03-08T12:48:00+00:00</published><updated>2013-03-08T12:48:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-03-08:/generate-csr-with-openssl.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ vi ssl.cnf&lt;br&gt;
\$ openssl req -new -config ssl.cnf -out jokeru.ro.csr&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ssl.cnf&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
[ req ]&lt;br&gt;
default_keyfile = jokeru.ro.key&lt;br&gt;
default_bits = 2048&lt;br&gt;
encrypt_key = no&lt;br&gt;
default_md = rsa&lt;br&gt;
distinguished_name = req_distinguished_name&lt;br&gt;
req_extensions = req_extensions # Extension for subjectAltName&lt;br&gt;
prompt = no&lt;/p&gt;
&lt;p&gt;[ req_distinguished_name ]&lt;br&gt;
countryName = RO&lt;br&gt;
stateOrProvinceName = Bucharest&lt;br&gt;
localityName = Bucharest&lt;br&gt;
organizationName …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ vi ssl.cnf&lt;br&gt;
\$ openssl req -new -config ssl.cnf -out jokeru.ro.csr&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ssl.cnf&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
[ req ]&lt;br&gt;
default_keyfile = jokeru.ro.key&lt;br&gt;
default_bits = 2048&lt;br&gt;
encrypt_key = no&lt;br&gt;
default_md = rsa&lt;br&gt;
distinguished_name = req_distinguished_name&lt;br&gt;
req_extensions = req_extensions # Extension for subjectAltName&lt;br&gt;
prompt = no&lt;/p&gt;
&lt;p&gt;[ req_distinguished_name ]&lt;br&gt;
countryName = RO&lt;br&gt;
stateOrProvinceName = Bucharest&lt;br&gt;
localityName = Bucharest&lt;br&gt;
organizationName = JoKer Tech&lt;br&gt;
organizationalUnitName = Security&lt;br&gt;
commonName = jokeru.ro&lt;br&gt;
emailAddress = abuse@jokeru.ro&lt;/p&gt;
&lt;p&gt;[ req_extensions ]&lt;br&gt;
subjectAltName = email:webmaster@jokeru.ro, DNS:www.jokeru.ro&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="apache"></category><category term="DNS"></category><category term="Linux"></category><category term="SSL"></category><category term="TLS"></category></entry><entry><title>ext3 and ext4 recover deleted files with extundelete</title><link href="http://wiki.jokeru.ro/ext3-and-ext4-recover-deleted-files-with-extundelete.html" rel="alternate"></link><published>2013-02-18T10:50:00+00:00</published><updated>2013-02-18T10:50:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-02-18:/ext3-and-ext4-recover-deleted-files-with-extundelete.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
* selinux disabled&lt;/p&gt;
&lt;p&gt;\$ yum install e2fsprogs-devel e2fsprogs e2fsprogs-libs -y&lt;br&gt;
\$ wget http://gnutoolbox.com/download/linux/hdd/extundelete-0.2.0.tar&lt;br&gt;
\$ tar -xf extundelete-0.2.0.tar&lt;br&gt;
\$ cd extundelete-0.2.0&lt;br&gt;
\$ ./configure&lt;br&gt;
\$ make &amp;amp;&amp;amp; make install&lt;br&gt;
\$ cd /tmp&lt;br&gt;
\$ extundelete /dev/sdc1 --restore-all&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;details:
&lt;a href="http://extundelete.sourceforge.net/"&gt;http://extundelete.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
* selinux disabled&lt;/p&gt;
&lt;p&gt;\$ yum install e2fsprogs-devel e2fsprogs e2fsprogs-libs -y&lt;br&gt;
\$ wget http://gnutoolbox.com/download/linux/hdd/extundelete-0.2.0.tar&lt;br&gt;
\$ tar -xf extundelete-0.2.0.tar&lt;br&gt;
\$ cd extundelete-0.2.0&lt;br&gt;
\$ ./configure&lt;br&gt;
\$ make &amp;amp;&amp;amp; make install&lt;br&gt;
\$ cd /tmp&lt;br&gt;
\$ extundelete /dev/sdc1 --restore-all&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;details:
&lt;a href="http://extundelete.sourceforge.net/"&gt;http://extundelete.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="CentOS"></category><category term="filesystem"></category><category term="recover"></category><category term="undelete"></category></entry><entry><title>VMware tools install on Debian</title><link href="http://wiki.jokeru.ro/vmware-tools-install-on-debian.html" rel="alternate"></link><published>2013-02-14T12:00:00+00:00</published><updated>2013-02-14T12:00:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-02-14:/vmware-tools-install-on-debian.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get update&lt;br&gt;
\$ apt-get install make gcc linux-headers-\$(uname -r)&lt;/p&gt;
&lt;p&gt;\$ mount /dev/cdrom /media/cdrom0&lt;br&gt;
\$ cd /media/cdrom0/&lt;br&gt;
\$ cp VMwareTools-9.0.0-782409.tar.gz /root/&lt;br&gt;
\$ cd /root/&lt;br&gt;
\$ tar -xzf VMwareTools-9.0.0-782409.tar.gz&lt;br&gt;
\$ cd vmware-tools-distrib/&lt;br&gt;
\$ ./vmware-install.pl&lt;br&gt;
\$ cd /root/&lt;br&gt;
\$ rm -rf VMwareTools-9.0.0-782409.tar.gz vmware-tools-distrib …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get update&lt;br&gt;
\$ apt-get install make gcc linux-headers-\$(uname -r)&lt;/p&gt;
&lt;p&gt;\$ mount /dev/cdrom /media/cdrom0&lt;br&gt;
\$ cd /media/cdrom0/&lt;br&gt;
\$ cp VMwareTools-9.0.0-782409.tar.gz /root/&lt;br&gt;
\$ cd /root/&lt;br&gt;
\$ tar -xzf VMwareTools-9.0.0-782409.tar.gz&lt;br&gt;
\$ cd vmware-tools-distrib/&lt;br&gt;
\$ ./vmware-install.pl&lt;br&gt;
\$ cd /root/&lt;br&gt;
\$ rm -rf VMwareTools-9.0.0-782409.tar.gz vmware-tools-distrib/&lt;br&gt;
\$ reboot&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Debian"></category><category term="Performance"></category><category term="WMware"></category></entry><entry><title>Debug Slow Service Response</title><link href="http://wiki.jokeru.ro/debug-slow-service-response.html" rel="alternate"></link><published>2013-02-01T12:00:00+00:00</published><updated>2013-02-01T12:00:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-02-01:/debug-slow-service-response.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# check speed, duplex, driver&lt;br&gt;
\$ ethtool eth0&lt;br&gt;
\$ lspci | grep -i eth&lt;br&gt;
\$ ethtool -i eth0&lt;br&gt;
\$ modinfo e1000e&lt;/p&gt;
&lt;p&gt;# check irq balance to all cores&lt;br&gt;
\$ cat /proc/interrupts | grep 'CPU\|eth0'&lt;/p&gt;
&lt;p&gt;# check packet rate&lt;br&gt;
\$ sar -n DEV 1&lt;/p&gt;
&lt;p&gt;# check packet drop - low layers&lt;br&gt;
\$ ifconfig eth0 | grep -i drop&lt;br&gt;
\$ ethtool -S eth0 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
# check speed, duplex, driver&lt;br&gt;
\$ ethtool eth0&lt;br&gt;
\$ lspci | grep -i eth&lt;br&gt;
\$ ethtool -i eth0&lt;br&gt;
\$ modinfo e1000e&lt;/p&gt;
&lt;p&gt;# check irq balance to all cores&lt;br&gt;
\$ cat /proc/interrupts | grep 'CPU\|eth0'&lt;/p&gt;
&lt;p&gt;# check packet rate&lt;br&gt;
\$ sar -n DEV 1&lt;/p&gt;
&lt;p&gt;# check packet drop - low layers&lt;br&gt;
\$ ifconfig eth0 | grep -i drop&lt;br&gt;
\$ ethtool -S eth0&lt;/p&gt;
&lt;p&gt;# check packet drop - high layers&lt;br&gt;
\$ netstat -s | grep -i drop&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="bandwidth"></category><category term="Linux"></category><category term="Performance"></category></entry><entry><title>Stress Test with SPIZD</title><link href="http://wiki.jokeru.ro/stress-test-with-spizd.html" rel="alternate"></link><published>2013-01-24T13:13:00+00:00</published><updated>2013-01-24T13:13:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-01-24:/stress-test-with-spizd.html</id><summary type="html">&lt;p&gt;Stress Probing Invasive Zap Destructor - it's a command-line stress
test tool used to determine how many simultaneous (concurrent)
connections servers can handle. Protocols: http, pop3, pop3s, imap,
imaps, smtp, smtps, ssh, radius.&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ apt-get install unzip default-jre -y&lt;br&gt;
\$ wget http://sourceforge.net/projects/spizd/files/latest/download -O …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Stress Probing Invasive Zap Destructor - it's a command-line stress
test tool used to determine how many simultaneous (concurrent)
connections servers can handle. Protocols: http, pop3, pop3s, imap,
imaps, smtp, smtps, ssh, radius.&lt;br&gt;
[cc lang='bash']&lt;br&gt;
\$ apt-get install unzip default-jre -y&lt;br&gt;
\$ wget http://sourceforge.net/projects/spizd/files/latest/download -O
spizd.zip&lt;br&gt;
\$ unzip spizd.zip&lt;br&gt;
\$ cd spizd/&lt;br&gt;
\$ vi etc/spizd.properties&lt;br&gt;
\$ ./bin/spizd-http.sh urlz.txt&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="apache"></category><category term="Performance"></category><category term="Proxy"></category><category term="Socks"></category><category term="Squid"></category><category term="Tuning"></category></entry><entry><title>sar</title><link href="http://wiki.jokeru.ro/sar.html" rel="alternate"></link><published>2013-01-22T12:00:00+00:00</published><updated>2013-01-22T12:00:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-01-22:/sar.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install sysstat -y&lt;/p&gt;
&lt;p&gt;# all cpus&lt;br&gt;
\$ sar -u ALL 1&lt;br&gt;
# per cpu&lt;br&gt;
\$ sar -P ALL 1&lt;br&gt;
# memory&lt;br&gt;
\$ sar -r 1&lt;br&gt;
# swap&lt;br&gt;
\$ sar -S 1&lt;br&gt;
# overall i/o&lt;br&gt;
\$ sar -b -v 1&lt;br&gt;
# individual i/o&lt;br&gt;
\$ sar -d -p 1&lt;br&gt;
# process, context switch&lt;br&gt;
\$ sar -w 1&lt;br&gt;
# run queue, load …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install sysstat -y&lt;/p&gt;
&lt;p&gt;# all cpus&lt;br&gt;
\$ sar -u ALL 1&lt;br&gt;
# per cpu&lt;br&gt;
\$ sar -P ALL 1&lt;br&gt;
# memory&lt;br&gt;
\$ sar -r 1&lt;br&gt;
# swap&lt;br&gt;
\$ sar -S 1&lt;br&gt;
# overall i/o&lt;br&gt;
\$ sar -b -v 1&lt;br&gt;
# individual i/o&lt;br&gt;
\$ sar -d -p 1&lt;br&gt;
# process, context switch&lt;br&gt;
\$ sar -w 1&lt;br&gt;
# run queue, load average&lt;br&gt;
\$ sar -q 1&lt;br&gt;
# network&lt;br&gt;
\$ sar -n DEV 1&lt;br&gt;
# socks&lt;br&gt;
\$ sar -n SOCK 1&lt;br&gt;
\$ cat /proc/net/sockstat&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;source:
&lt;a href="http://www.thegeekstuff.com/2011/03/sar-examples/"&gt;http://www.thegeekstuff.com/2011/03/sar-examples/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content></entry><entry><title>nf_conntrack: table full, dropping packet.</title><link href="http://wiki.jokeru.ro/nf_conntrack-table-full-dropping-packet.html" rel="alternate"></link><published>2013-01-20T20:25:00+00:00</published><updated>2013-01-20T20:25:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-01-20:/nf_conntrack-table-full-dropping-packet.html</id><summary type="html">&lt;p&gt;[cc land='bash']&lt;br&gt;
\$ cat /proc/sys/net/ipv4/netfilter/ip_conntrack_max&lt;br&gt;
65536&lt;br&gt;
\$ sysctl net.netfilter.nf_conntrack_count&lt;br&gt;
net.netfilter.nf_conntrack_count = 65536&lt;/p&gt;
&lt;p&gt;\$ rmmod iptable_nat&lt;br&gt;
\$ rmmod ipt_MASQUERADE&lt;br&gt;
\$ rmmod nf_nat&lt;br&gt;
\$ rmmod ipt_REDIRECT&lt;br&gt;
\$ rmmod nf_nat&lt;br&gt;
\$ rmmod nf_conntrack_ipv4&lt;br&gt;
\$ rmmod nf_defrag_ipv4&lt;br&gt;
\$ rmmod nf_conntrack&lt;br&gt;
\$ rmmod xt_state&lt;br&gt;
\$ rmmod nf_conntrack&lt;br&gt;
[/cc]  &lt;/p&gt;
&lt;p&gt;Listing the nat tables with `iptables -t nat -L` will …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc land='bash']&lt;br&gt;
\$ cat /proc/sys/net/ipv4/netfilter/ip_conntrack_max&lt;br&gt;
65536&lt;br&gt;
\$ sysctl net.netfilter.nf_conntrack_count&lt;br&gt;
net.netfilter.nf_conntrack_count = 65536&lt;/p&gt;
&lt;p&gt;\$ rmmod iptable_nat&lt;br&gt;
\$ rmmod ipt_MASQUERADE&lt;br&gt;
\$ rmmod nf_nat&lt;br&gt;
\$ rmmod ipt_REDIRECT&lt;br&gt;
\$ rmmod nf_nat&lt;br&gt;
\$ rmmod nf_conntrack_ipv4&lt;br&gt;
\$ rmmod nf_defrag_ipv4&lt;br&gt;
\$ rmmod nf_conntrack&lt;br&gt;
\$ rmmod xt_state&lt;br&gt;
\$ rmmod nf_conntrack&lt;br&gt;
[/cc]  &lt;/p&gt;
&lt;p&gt;Listing the nat tables with `iptables -t nat -L` will cause the
conntrack modules to be probed into the kernel. For very busy
world-facing hosts the solution is to add the various conntrack modules
to /etc/modprobe.d/blacklist.conf to ensure that they are never loaded.&lt;/p&gt;</content><category term="conntrack"></category><category term="Debian"></category><category term="iptables"></category><category term="Performance"></category><category term="Tuning"></category></entry><entry><title>Run parallel cURL requests using PHP and BASH</title><link href="http://wiki.jokeru.ro/run-parallel-curl-requests-using-php-and-bash.html" rel="alternate"></link><published>2013-01-06T02:02:00+00:00</published><updated>2013-01-06T02:02:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2013-01-06:/run-parallel-curl-requests-using-php-and-bash.html</id><summary type="html">&lt;p&gt;[cc lang='php']&lt;br&gt;
&amp;lt;?php&amp;lt; p ?&amp;gt;&lt;/p&gt;
&lt;p&gt;// my linux curl&lt;br&gt;
function my_curl (\$i, \$url, \$post_data, \$return=0, \$auth='',
\$proxy='', \$timeout=5) {&lt;br&gt;
\$curl="/usr/bin/curl -s";&lt;br&gt;
if (\$post_data!='') \$curl.=" --data '\$post_data'";&lt;br&gt;
if (\$timeout!='') \$curl.=" --connect-timeout \$timeout";&lt;br&gt;
if (\$auth!='') {&lt;br&gt;
list(\$user,\$pass)=explode(':',\$auth);&lt;br&gt;
\$curl.=" --basic --user \$user:\$pass";&lt;br&gt;
}&lt;br&gt;
if (\$proxy!='') {  &lt;/p&gt;
&lt;p&gt;list(\$proxy_ip …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='php']&lt;br&gt;
&amp;lt;?php&amp;lt; p ?&amp;gt;&lt;/p&gt;
&lt;p&gt;// my linux curl&lt;br&gt;
function my_curl (\$i, \$url, \$post_data, \$return=0, \$auth='',
\$proxy='', \$timeout=5) {&lt;br&gt;
\$curl="/usr/bin/curl -s";&lt;br&gt;
if (\$post_data!='') \$curl.=" --data '\$post_data'";&lt;br&gt;
if (\$timeout!='') \$curl.=" --connect-timeout \$timeout";&lt;br&gt;
if (\$auth!='') {&lt;br&gt;
list(\$user,\$pass)=explode(':',\$auth);&lt;br&gt;
\$curl.=" --basic --user \$user:\$pass";&lt;br&gt;
}&lt;br&gt;
if (\$proxy!='') {  &lt;/p&gt;
&lt;p&gt;list(\$proxy_ip,\$proxy_port,\$proxy_user,\$proxy_pass)=explode(':',\$proxy);&lt;br&gt;
\$curl.=" --proxy \$proxy_ip:\$proxy_port --proxy-user
\$proxy_user:\$proxy_pass";&lt;br&gt;
}&lt;br&gt;
if (\$return==0) {&lt;br&gt;
\$curl.=" \$url &gt;/dev/null 2&gt;/dev/null &amp;amp;";&lt;br&gt;
} else {&lt;br&gt;
\$curl.=" \$url &gt;return-\$i 2&gt;/dev/null &amp;amp;";&lt;br&gt;
}&lt;br&gt;
return("\$curl\n");&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;\$main_start=microtime(true);&lt;br&gt;
echo "Starting main @ \$main_start&lt;br&gt;
";&lt;/p&gt;
&lt;p&gt;// cleanup return files if any&lt;br&gt;
foreach (glob("return-*") as \$filename) unlink(\$filename);&lt;/p&gt;
&lt;p&gt;// start the requests fire&lt;br&gt;
\$main_timeout = 2; # main script timeout in seconds&lt;br&gt;
\$max = 200; # number of requests to send&lt;br&gt;
\$return = 1; # 1 / 0 -&gt; enable / disable return transfer&lt;br&gt;
\$auth = ''; # user:pass for password protected folders&lt;br&gt;
\$proxy = ''; # proxy info
PROXY_IP:PROXY_PORT:PROXY_USER:PROXY_PASS&lt;br&gt;
\$curl_timeout = 1; # curl timeout value in seconds&lt;br&gt;
//&lt;br&gt;
\$to_run='';&lt;br&gt;
for (\$i=0; \$i\&amp;lt;\$max; \$i++) {&lt;br&gt;
\$url='http://10.20.30.40/post.php';&lt;br&gt;
\$post_data="var=web-\$i";&lt;br&gt;
\$to_run.=my_curl(\$i, \$url, \$post_data, \$return, \$auth,
\$proxy, \$timeout);&lt;br&gt;
}&lt;br&gt;
file_put_contents('runner.sh',\$to_run);&lt;br&gt;
echo "Starting requests to all \$max scripts @ ".microtime(true).'&lt;br&gt;
';&lt;br&gt;
shell_exec('/bin/bash runner.sh');&lt;br&gt;
echo "Finished requests to all \$max scripts @ ".microtime(true).'&lt;br&gt;
';&lt;/p&gt;
&lt;p&gt;// wait for requests to finish&lt;br&gt;
\$finished=false;&lt;br&gt;
while(!\$finished) {&lt;br&gt;
\$run=shell_exec('ps -ef | grep -v grep | grep -c curl');&lt;br&gt;
if (\$run&gt;0) {&lt;br&gt;
\$now=microtime(true);&lt;br&gt;
if (\$now-\$main_start&gt;\$main_timeout) {&lt;br&gt;
\$finished=true;&lt;br&gt;
echo 'Main Timeout: only '.(\$max-\$run).' scripts finished running @
'.\$now.'&lt;br&gt;
';&lt;br&gt;
} else {&lt;br&gt;
sleep(.1);&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
if (\$run==0) {&lt;br&gt;
\$finished=true;&lt;br&gt;
echo "&lt;br&gt;
Finished running \$max scripts @ ".microtime(true).'&lt;br&gt;
';&lt;br&gt;
}&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;
// process output  
if (\$return==1) {  
\$out=array();  
foreach (glob("return-\*") as \$filename)
\$out[]=file\_get\_contents(\$filename);  
echo('

    ');
      print_r($out);
     echo('

');  
} else {  
echo "No return values  
";  
}

echo '  

* * * * *

Exiting main @ '.microtime(true).'  
';  
?\&gt;  
[/cc]

&lt;/p&gt;</content><category term="apache"></category><category term="BASH"></category><category term="code"></category><category term="cURL"></category><category term="Performance"></category><category term="PHP"></category></entry><entry><title>Get Web Server response code with wget</title><link href="http://wiki.jokeru.ro/get-web-server-response-code-with-wget.html" rel="alternate"></link><published>2012-12-21T15:45:00+00:00</published><updated>2012-12-21T15:45:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-12-21:/get-web-server-response-code-with-wget.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ wget --bind-address=1.2.3.4 --spider --server-response
http://www.google.com 2&gt;&amp;amp;1 | awk '/\^ HTTP/{print \$2}'&lt;br&gt;
[/cc]&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ wget --bind-address=1.2.3.4 --spider --server-response
http://www.google.com 2&gt;&amp;amp;1 | awk '/\^ HTTP/{print \$2}'&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="apache"></category><category term="BASH"></category><category term="wget"></category></entry><entry><title>IP Accounting with pmacct</title><link href="http://wiki.jokeru.ro/ip-accounting-with-pmacct.html" rel="alternate"></link><published>2012-12-17T17:17:00+00:00</published><updated>2012-12-17T17:17:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-12-17:/ip-accounting-with-pmacct.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install pmacct&lt;br&gt;
\$ vi /etc/pmacct/pmacctd.conf&lt;br&gt;
\$ vi /etc/pmacct/hosts&lt;br&gt;
\$ /etc/init.d/pmacct restart&lt;/p&gt;
&lt;p&gt;\$ pmacct -s&lt;br&gt;
SRC_IP DST_IP PACKETS BYTES&lt;br&gt;
0.0.0.0 5.4.3.2 1681 808962&lt;br&gt;
0.0.0.0 1.2.3.4 25 2168&lt;br&gt;
1.2.3.4 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install pmacct&lt;br&gt;
\$ vi /etc/pmacct/pmacctd.conf&lt;br&gt;
\$ vi /etc/pmacct/hosts&lt;br&gt;
\$ /etc/init.d/pmacct restart&lt;/p&gt;
&lt;p&gt;\$ pmacct -s&lt;br&gt;
SRC_IP DST_IP PACKETS BYTES&lt;br&gt;
0.0.0.0 5.4.3.2 1681 808962&lt;br&gt;
0.0.0.0 1.2.3.4 25 2168&lt;br&gt;
1.2.3.4 0.0.0.0 38 2644&lt;br&gt;
5.4.3.2 0.0.0.0 1412 113360&lt;br&gt;
0.0.0.0 0.0.0.0 251663 144353074&lt;br&gt;
For a total of: 5 entries&lt;/p&gt;
&lt;p&gt;\$ pmacct -c src_host -N 5.4.3.2&lt;br&gt;
1397843&lt;br&gt;
\$ pmacct -c dst_host -N 5.4.3.2&lt;br&gt;
9464605&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/pmacct/pmacctd.conf&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
daemonize: true&lt;br&gt;
pidfile: /var/run/pmacctd.pid&lt;br&gt;
syslog: daemon&lt;/p&gt;
&lt;p&gt;interface: eth0&lt;br&gt;
aggregate: src_host,dst_host&lt;br&gt;
networks_file: /etc/pmacct/hosts&lt;br&gt;
plugins: memory&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/pmacct/hosts&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
5.4.3.2/32&lt;br&gt;
1.2.3.4/32&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="IP Accounting"></category><category term="monitoring"></category><category term="traffic"></category></entry><entry><title>Webmin on Debian</title><link href="http://wiki.jokeru.ro/webmin-on-debian.html" rel="alternate"></link><published>2012-12-04T22:00:00+00:00</published><updated>2012-12-04T22:00:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-12-04:/webmin-on-debian.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install perl libnet-ssleay-perl openssl libauthen-pam-perl
libpam-runtime libio-pty-perl apt-show-versions python&lt;br&gt;
\$ wget
http://prdownloads.sourceforge.net/webadmin/webmin_1.610_all.deb&lt;br&gt;
\$ dpkg --install webmin_1.610_all.deb&lt;/p&gt;
&lt;p&gt;\$ vi /etc/webmin/miniserv.conf&lt;br&gt;
- listen=10000&lt;br&gt;
+ bind=10.20.30.40&lt;/p&gt;
&lt;p&gt;\$ /usr/libexec/webmin/changepass.pl /etc/webmin root webmin_pass&lt;/p&gt;
&lt;p&gt;\$ service webmin …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install perl libnet-ssleay-perl openssl libauthen-pam-perl
libpam-runtime libio-pty-perl apt-show-versions python&lt;br&gt;
\$ wget
http://prdownloads.sourceforge.net/webadmin/webmin_1.610_all.deb&lt;br&gt;
\$ dpkg --install webmin_1.610_all.deb&lt;/p&gt;
&lt;p&gt;\$ vi /etc/webmin/miniserv.conf&lt;br&gt;
- listen=10000&lt;br&gt;
+ bind=10.20.30.40&lt;/p&gt;
&lt;p&gt;\$ /usr/libexec/webmin/changepass.pl /etc/webmin root webmin_pass&lt;/p&gt;
&lt;p&gt;\$ service webmin restart&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;theme -&gt;
http://webmin-theme-stressfree.googlecode.com/files/theme-stressfree-2.10.tar.gz&lt;/p&gt;</content><category term="Debian"></category><category term="Webmin"></category></entry><entry><title>Dante SOCKS Server</title><link href="http://wiki.jokeru.ro/dante-socks-server.html" rel="alternate"></link><published>2012-11-28T23:23:00+00:00</published><updated>2012-11-28T23:23:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-11-28:/dante-socks-server.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ cd /usr/src/&lt;br&gt;
\$ wget http://www.inet.no/dante/files/dante-1.3.2.tar.gz&lt;br&gt;
\$ gunzip dante-1.3.2.tar.gz&lt;br&gt;
\$ tar -xf dante-1.3.2.tar&lt;br&gt;
\$ cd dante-1.3.2/&lt;br&gt;
\$ ./configure&lt;br&gt;
\$ make&lt;br&gt;
\$ make install&lt;/p&gt;
&lt;p&gt;\$ /usr/local/sbin/sockd -D -N 5 -f /etc/danted.conf&lt;br&gt;
\$ tail …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ cd /usr/src/&lt;br&gt;
\$ wget http://www.inet.no/dante/files/dante-1.3.2.tar.gz&lt;br&gt;
\$ gunzip dante-1.3.2.tar.gz&lt;br&gt;
\$ tar -xf dante-1.3.2.tar&lt;br&gt;
\$ cd dante-1.3.2/&lt;br&gt;
\$ ./configure&lt;br&gt;
\$ make&lt;br&gt;
\$ make install&lt;/p&gt;
&lt;p&gt;\$ /usr/local/sbin/sockd -D -N 5 -f /etc/danted.conf&lt;br&gt;
\$ tail /var/log/syslog&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/danted.conf&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
logoutput: syslog&lt;br&gt;
internal: 10.20.30.40 port = 1234&lt;br&gt;
external: 10.20.30.40&lt;br&gt;
internal: 50.60.70.80 port = 1234&lt;br&gt;
external: 50.60.70.80&lt;br&gt;
external.rotation: same-same&lt;br&gt;
method: username none&lt;br&gt;
user.privileged: proxy&lt;br&gt;
user.notprivileged: nobody&lt;br&gt;
client pass {&lt;br&gt;
from: 1.2.3.4/0 port 1-65535 to: 0.0.0.0/0&lt;br&gt;
}&lt;br&gt;
client block {&lt;br&gt;
from: 0.0.0.0/0 to: 0.0.0.0/0&lt;br&gt;
log: connect error&lt;br&gt;
}&lt;br&gt;
pass {&lt;br&gt;
from: 1.2.3.4/0 to: 0.0.0.0/0&lt;br&gt;
protocol: tcp udp&lt;br&gt;
}&lt;br&gt;
block {&lt;br&gt;
from: 0.0.0.0/0 to: 0.0.0.0/0&lt;br&gt;
log: connect error&lt;br&gt;
}&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Dante"></category><category term="Linux"></category><category term="Proxy"></category><category term="Socks"></category><category term="Tunnel"></category></entry><entry><title>MySQL Load Balancing and Read-Write Splitting with mysql-proxy</title><link href="http://wiki.jokeru.ro/mysql-load-balancing-and-read-write-splitting-with-mysql-proxy.html" rel="alternate"></link><published>2012-11-07T12:30:00+00:00</published><updated>2012-11-07T12:30:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-11-07:/mysql-load-balancing-and-read-write-splitting-with-mysql-proxy.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install -y mysql-proxy&lt;br&gt;
\$ vi /etc/default/mysql-proxy&lt;br&gt;
\$ vi /etc/mysql-proxy&lt;br&gt;
\$ chmod 0660 /etc/mysql-proxy&lt;br&gt;
\$ /etc/init.d/mysql-proxy start&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/default/mysql-proxy&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
ENABLED="true"&lt;br&gt;
OPTIONS="--defaults-file=/etc/mysql-proxy"&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/mysql-proxy&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
[mysql-proxy]&lt;/p&gt;
&lt;p&gt;admin-address = 192.168.0.10:4041&lt;/p&gt;
&lt;p&gt;proxy-address …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install -y mysql-proxy&lt;br&gt;
\$ vi /etc/default/mysql-proxy&lt;br&gt;
\$ vi /etc/mysql-proxy&lt;br&gt;
\$ chmod 0660 /etc/mysql-proxy&lt;br&gt;
\$ /etc/init.d/mysql-proxy start&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/default/mysql-proxy&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
ENABLED="true"&lt;br&gt;
OPTIONS="--defaults-file=/etc/mysql-proxy"&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/mysql-proxy&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
[mysql-proxy]&lt;/p&gt;
&lt;p&gt;admin-address = 192.168.0.10:4041&lt;/p&gt;
&lt;p&gt;proxy-address = 192.168.0.10:3036&lt;br&gt;
proxy-backend-addresses = 192.168.0.11:3306&lt;br&gt;
proxy-read-only-backend-addresses = 192.168.0.12:3306,192.168.0.13:3306&lt;/p&gt;
&lt;p&gt;log-file = /var/log/mysql-proxy.log&lt;br&gt;
log-level = debug&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Debian"></category><category term="Load Balance"></category><category term="MySQL"></category><category term="mysql-proxy"></category></entry><entry><title>Squid3 Transparent Proxy</title><link href="http://wiki.jokeru.ro/squid3-transparent-proxy.html" rel="alternate"></link><published>2012-11-01T15:00:00+00:00</published><updated>2012-11-01T15:00:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-11-01:/squid3-transparent-proxy.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install squid3&lt;br&gt;
\$ iptables -t nat -A PREROUTING -i eth1 -p tcp -m tcp --dport 80 -j
DNAT --to-destination 192.168.0.1:3128&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/squid3/squid.conf&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
http_port 3128 transparent&lt;br&gt;
acl our_networks src 192.168.0.0/24&lt;br&gt;
acl localnet src 127 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install squid3&lt;br&gt;
\$ iptables -t nat -A PREROUTING -i eth1 -p tcp -m tcp --dport 80 -j
DNAT --to-destination 192.168.0.1:3128&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/squid3/squid.conf&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
http_port 3128 transparent&lt;br&gt;
acl our_networks src 192.168.0.0/24&lt;br&gt;
acl localnet src 127.0.0.1/255.255.255.255&lt;br&gt;
http_access allow our_networks&lt;br&gt;
http_access allow localnet&lt;br&gt;
cache_dir ufs /var/spool/squid3 7000 256 1024&lt;br&gt;
cache_peer web-main.proxy.intra parent 8080 0 login=user:pass no-query
proxy-only&lt;br&gt;
cache_peer web-backup.proxy.intra parent 8080 0 login=user:pass
no-query default&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Linux"></category><category term="Proxy"></category><category term="Squid"></category></entry><entry><title>JunOS New Aggregate Interface</title><link href="http://wiki.jokeru.ro/junos-new-aggregate-interface.html" rel="alternate"></link><published>2012-09-19T12:30:00+01:00</published><updated>2012-09-19T12:30:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-09-19:/junos-new-aggregate-interface.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
ge-2/0/19 {&lt;br&gt;
description FWLI94NOIMEPMUT002-eth1/4;&lt;br&gt;
ether-options {&lt;br&gt;
802.3ad ae43;&lt;br&gt;
}&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;ae43 {&lt;br&gt;
description "FWLI94NOIMEPMUT002-eth1/4";&lt;br&gt;
unit 0 {&lt;br&gt;
family ethernet-switching {&lt;br&gt;
port-mode trunk;&lt;br&gt;
vlan {&lt;br&gt;
members [ 12 40 50 140 150 ];&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
[/cc]&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
ge-2/0/19 {&lt;br&gt;
description FWLI94NOIMEPMUT002-eth1/4;&lt;br&gt;
ether-options {&lt;br&gt;
802.3ad ae43;&lt;br&gt;
}&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;ae43 {&lt;br&gt;
description "FWLI94NOIMEPMUT002-eth1/4";&lt;br&gt;
unit 0 {&lt;br&gt;
family ethernet-switching {&lt;br&gt;
port-mode trunk;&lt;br&gt;
vlan {&lt;br&gt;
members [ 12 40 50 140 150 ];&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
[/cc]&lt;/p&gt;</content></entry><entry><title>ISG New Zone</title><link href="http://wiki.jokeru.ro/isg-new-zone.html" rel="alternate"></link><published>2012-09-13T14:14:00+01:00</published><updated>2012-09-13T14:14:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-09-13:/isg-new-zone.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
get zone \&amp;lt;- get next available zone id&lt;/p&gt;
&lt;p&gt;set zone id 1005 "MUT_SERV_DI"&lt;br&gt;
set zone "MUT_SERV_DI" tcp-rst&lt;br&gt;
set interface "aggregate1.3" tag 241 zone "MUT_SERV_DI"&lt;br&gt;
set interface aggregate1.3 ip 192.168.241.254/24&lt;br&gt;
set interface aggregate1.3 route&lt;br&gt;
[/cc]&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
get zone \&amp;lt;- get next available zone id&lt;/p&gt;
&lt;p&gt;set zone id 1005 "MUT_SERV_DI"&lt;br&gt;
set zone "MUT_SERV_DI" tcp-rst&lt;br&gt;
set interface "aggregate1.3" tag 241 zone "MUT_SERV_DI"&lt;br&gt;
set interface aggregate1.3 ip 192.168.241.254/24&lt;br&gt;
set interface aggregate1.3 route&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="FireWall"></category><category term="ISG"></category><category term="Juniper"></category><category term="ScreenOS"></category></entry><entry><title>Server &amp; Services monitoring with Monit</title><link href="http://wiki.jokeru.ro/server-services-monitoring-with-monit.html" rel="alternate"></link><published>2012-09-13T12:00:00+01:00</published><updated>2012-09-13T12:00:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-09-13:/server-services-monitoring-with-monit.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install monit&lt;br&gt;
\$ vi /etc/default/monit&lt;br&gt;
\$ vi /etc/monit/monitrc&lt;br&gt;
\$ /etc/init.d/monit start&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/monit/monitrc&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
set daemon 60 # check services at 1 minute intervals&lt;br&gt;
set logfile syslog facility log_daemon # log to /var/log/daemon.log&lt;br&gt;
set mailserver localhost port …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install monit&lt;br&gt;
\$ vi /etc/default/monit&lt;br&gt;
\$ vi /etc/monit/monitrc&lt;br&gt;
\$ /etc/init.d/monit start&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/monit/monitrc&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
set daemon 60 # check services at 1 minute intervals&lt;br&gt;
set logfile syslog facility log_daemon # log to /var/log/daemon.log&lt;br&gt;
set mailserver localhost port 25 # send alert mails using this server&lt;br&gt;
set eventqueue # keep alert mails if mail server unavailable&lt;br&gt;
basedir /var/monit&lt;br&gt;
slots 100&lt;br&gt;
set alert monit@jokeru.ro # send alert mails to this address&lt;br&gt;
set httpd port 2812 and # start monit web server on this port&lt;br&gt;
use address 10.20.30.40 # listen on this ip address&lt;br&gt;
allow 50.60.70.80 # allow only this ip to connect&lt;br&gt;
allow admin:monit # allow only this user/pass to connect&lt;/p&gt;
&lt;p&gt;## SSH&lt;br&gt;
check process sshd with pidfile "/var/run/sshd.pid"&lt;br&gt;
start program = "/etc/init.d/ssh start"&lt;br&gt;
stop program = "/etc/init.d/ssh stop"&lt;br&gt;
if failed&lt;br&gt;
host 10.20.30.40&lt;br&gt;
port 22&lt;br&gt;
type tcp&lt;br&gt;
protocol ssh&lt;br&gt;
then restart&lt;br&gt;
#if 2 restarts within 2 cycles then timeout&lt;/p&gt;
&lt;p&gt;## SNMP&lt;br&gt;
check process snmpd with pidfile "/var/run/snmpd.pid"&lt;br&gt;
start program = "/etc/init.d/snmpd start"&lt;br&gt;
stop program = "/etc/init.d/snmpd stop"&lt;br&gt;
if failed&lt;br&gt;
host 127.0.0.1&lt;br&gt;
port 161&lt;br&gt;
type udp&lt;br&gt;
then restart&lt;br&gt;
#if 2 restarts within 2 cycles then timeout&lt;/p&gt;
&lt;p&gt;## BIND&lt;br&gt;
check process bind with pidfile "/var/run/bind/run/named.pid"&lt;br&gt;
start program = "/etc/init.d/bind9 start"&lt;br&gt;
stop program = "/etc/init.d/bind9 stop"&lt;br&gt;
if failed&lt;br&gt;
host 10.20.30.40&lt;br&gt;
port 53&lt;br&gt;
type tcp&lt;br&gt;
protocol dns&lt;br&gt;
then restart&lt;br&gt;
if failed&lt;br&gt;
host 10.20.30.40&lt;br&gt;
port 53&lt;br&gt;
type udp&lt;br&gt;
protocol dns&lt;br&gt;
then restart&lt;br&gt;
#if 2 restarts within 2 cycles then timeout&lt;/p&gt;
&lt;p&gt;## Apache&lt;br&gt;
check process apache with pidfile "/var/run/apache2.pid"&lt;br&gt;
start program = "/etc/init.d/apache2 start"&lt;br&gt;
stop program = "/etc/init.d/apache2 stop"&lt;br&gt;
if failed&lt;br&gt;
host 10.20.30.40&lt;br&gt;
port 80&lt;br&gt;
use type tcp&lt;br&gt;
protocol http&lt;br&gt;
for 2 times within 2 cycles&lt;br&gt;
then restart&lt;br&gt;
# then alert&lt;br&gt;
if totalmem &gt; 80% then alert&lt;br&gt;
#if children = 200 then restart&lt;br&gt;
#if 2 restarts within 2 cycles then timeout&lt;/p&gt;
&lt;p&gt;## MySQL&lt;br&gt;
check process mysql with pidfile "/var/lib/mysql/jokeru.pid"&lt;br&gt;
start program = "/etc/init.d/mysql start"&lt;br&gt;
stop program = "/etc/init.d/mysql stop"&lt;br&gt;
if failed&lt;br&gt;
host 127.0.0.1&lt;br&gt;
port 3306&lt;br&gt;
type tcp&lt;br&gt;
protocol mysql&lt;br&gt;
for 2 times within 2 cycles&lt;br&gt;
then restart&lt;br&gt;
if cpu &gt; 50% then alert&lt;br&gt;
if totalmem &gt; 25% then alert&lt;br&gt;
#if 2 restarts within 2 cycles then timeout&lt;/p&gt;
&lt;p&gt;## Postfix&lt;br&gt;
check process postfix with pidfile "/var/spool/postfix/pid/master.pid"&lt;br&gt;
start program = "/etc/init.d/postfix start"&lt;br&gt;
stop program = "/etc/init.d/postfix stop"&lt;br&gt;
if failed&lt;br&gt;
host 10.20.30.40&lt;br&gt;
port 25&lt;br&gt;
type tcp&lt;br&gt;
protocol smtp&lt;br&gt;
with timeout 15 seconds&lt;br&gt;
for 2 times within 2 cycles&lt;br&gt;
then restart&lt;br&gt;
#if 2 restarts within 4 cycles then timeout&lt;/p&gt;
&lt;p&gt;## DK-Filter&lt;br&gt;
check process dk-filter with pidfile
"/var/run/dk-filter/dk-filter.pid"&lt;br&gt;
start program = "/etc/init.d/dk-filter start"&lt;br&gt;
stop program = "/etc/init.d/dk-filter stop"&lt;br&gt;
if failed&lt;br&gt;
host 127.0.0.1&lt;br&gt;
port 8891&lt;br&gt;
type tcp&lt;br&gt;
then restart&lt;br&gt;
#if 2 restarts within 2 cycles then timeout&lt;/p&gt;
&lt;p&gt;## DKIM-Filter&lt;br&gt;
check process dkim-filter with pidfile
"/var/run/dkim-filter/dkim-filter.pid"&lt;br&gt;
start program = "/etc/init.d/dkim-filter start"&lt;br&gt;
stop program = "/etc/init.d/dkim-filter stop"&lt;br&gt;
if failed&lt;br&gt;
host 127.0.0.1&lt;br&gt;
port 8892&lt;br&gt;
type tcp&lt;br&gt;
then restart&lt;br&gt;
#if 2 restarts within 2 cycles then timeout&lt;/p&gt;
&lt;p&gt;## Courier POP3&lt;br&gt;
check process pop3 with pidfile "/var/run/courier/pop3d.pid"&lt;br&gt;
start program = "/etc/init.d/courier-pop start"&lt;br&gt;
stop program = "/etc/init.d/courier-pop stop"&lt;br&gt;
if failed&lt;br&gt;
host 10.20.30.40&lt;br&gt;
port 110&lt;br&gt;
type tcp&lt;br&gt;
then restart&lt;br&gt;
#if 2 restarts within 2 cycles then timeout&lt;/p&gt;
&lt;p&gt;## Courier POP3-SSL&lt;br&gt;
check process pop3-ssl with pidfile "/var/run/courier/pop3d-ssl.pid"&lt;br&gt;
start program = "/etc/init.d/courier-pop-ssl start"&lt;br&gt;
stop program = "/etc/init.d/courier-pop-ssl stop"&lt;br&gt;
if failed&lt;br&gt;
host 10.20.30.40&lt;br&gt;
port 995&lt;br&gt;
type tcp&lt;br&gt;
then restart&lt;br&gt;
#if 2 restarts within 2 cycles then timeout&lt;/p&gt;
&lt;p&gt;## Pure-FTPd&lt;br&gt;
check process pure-ftpd with pidfile
"/var/run/pure-ftpd/pure-ftpd.pid"&lt;br&gt;
start program = "/etc/init.d/pure-ftpd start"&lt;br&gt;
stop program = "/etc/init.d/pure-ftpd stop"&lt;br&gt;
if failed&lt;br&gt;
host 10.20.30.40&lt;br&gt;
port 21&lt;br&gt;
type tcp&lt;br&gt;
protocol ftp&lt;br&gt;
then restart&lt;br&gt;
#if 2 restarts within 2 cycles then timeout&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Linux"></category><category term="Monit"></category><category term="Performance"></category><category term="Ubuntu"></category></entry><entry><title>socket(): Too many open files</title><link href="http://wiki.jokeru.ro/socket-too-many-open-files.html" rel="alternate"></link><published>2012-09-02T21:21:00+01:00</published><updated>2012-09-02T21:21:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-09-02:/socket-too-many-open-files.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ ulimit -n&lt;br&gt;
1024&lt;br&gt;
\$ echo "root soft nofile 10240" &gt;&gt; /etc/security/limits.conf&lt;br&gt;
\$ echo "root hard nofile 10240" &gt;&gt; /etc/security/limits.conf&lt;/p&gt;
&lt;p&gt;# LogOut &amp;amp; LogIn&lt;br&gt;
\$ ulimit -n&lt;br&gt;
10240&lt;br&gt;
[/cc]&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ ulimit -n&lt;br&gt;
1024&lt;br&gt;
\$ echo "root soft nofile 10240" &gt;&gt; /etc/security/limits.conf&lt;br&gt;
\$ echo "root hard nofile 10240" &gt;&gt; /etc/security/limits.conf&lt;/p&gt;
&lt;p&gt;# LogOut &amp;amp; LogIn&lt;br&gt;
\$ ulimit -n&lt;br&gt;
10240&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="3proxy"></category><category term="BASH"></category><category term="Debian"></category><category term="Performance"></category><category term="Proxy"></category><category term="Socks"></category></entry><entry><title>Linux BackUp Script</title><link href="http://wiki.jokeru.ro/linux-backup-script.html" rel="alternate"></link><published>2012-08-30T16:50:00+01:00</published><updated>2012-08-30T16:50:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-08-30:/linux-backup-script.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;/root/backup/cfg&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
named /etc/named.conf /var/named/jokeru.ro&lt;br&gt;
postfix /etc/postfix/conf/&lt;br&gt;
dkim /etc/mail/dkim-milter/dkim-filter.conf&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/root/backup/run.sh&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
#!/bin/bash&lt;br&gt;
host='wiki'&lt;br&gt;
here='/root/backup/'&lt;/p&gt;
&lt;p&gt;cd \$here&lt;br&gt;
while read line&lt;br&gt;
do&lt;br&gt;
name=`echo \$line | awk '{print …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;/root/backup/cfg&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
named /etc/named.conf /var/named/jokeru.ro&lt;br&gt;
postfix /etc/postfix/conf/&lt;br&gt;
dkim /etc/mail/dkim-milter/dkim-filter.conf&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/root/backup/run.sh&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
#!/bin/bash&lt;br&gt;
host='wiki'&lt;br&gt;
here='/root/backup/'&lt;/p&gt;
&lt;p&gt;cd \$here&lt;br&gt;
while read line&lt;br&gt;
do&lt;br&gt;
name=`echo \$line | awk '{print \$1}'`&lt;br&gt;
path=`echo \$line | sed "s/\^\$name//"`&lt;br&gt;
tar -czf \$name.tgz \$path&lt;br&gt;
done \&amp;lt; cfg&lt;br&gt;
tar -czf config.tgz *.tgz&lt;br&gt;
rsync -av config.tgz backup.jokeru.ro::\$host.jokeru.ro/config/`date
+%Y-%m-%d`.tgz&lt;br&gt;
rm -fr *.tgz&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="backup"></category><category term="BASH"></category><category term="Linux"></category></entry><entry><title>Twisted DNS Authoritative Server</title><link href="http://wiki.jokeru.ro/twisted-dns-authoritative-server.html" rel="alternate"></link><published>2012-07-14T15:15:00+01:00</published><updated>2012-07-14T15:15:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-07-14:/twisted-dns-authoritative-server.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ yum install python-twisted&lt;/p&gt;
&lt;p&gt;\$ vi test.zone&lt;br&gt;
\$ twistd dns --pyzone test.zone --interface 127.0.0.1 --port 53053&lt;br&gt;
\$ netstat -tulnp | grep 53053&lt;br&gt;
tcp 0 0 127.0.0.1:53053 0.0.0.0:* LISTEN 14391/python&lt;br&gt;
udp 0 0 127.0.0.1:53053 0.0 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ yum install python-twisted&lt;/p&gt;
&lt;p&gt;\$ vi test.zone&lt;br&gt;
\$ twistd dns --pyzone test.zone --interface 127.0.0.1 --port 53053&lt;br&gt;
\$ netstat -tulnp | grep 53053&lt;br&gt;
tcp 0 0 127.0.0.1:53053 0.0.0.0:* LISTEN 14391/python&lt;br&gt;
udp 0 0 127.0.0.1:53053 0.0.0.0:* 14391/python&lt;/p&gt;
&lt;p&gt;\$ dig test +short @127.0.0.1 -p 53053&lt;br&gt;
192.168.10.10&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;test.zone&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
zone = [&lt;br&gt;
SOA(&lt;br&gt;
# For whom we are the authority&lt;br&gt;
'test',&lt;/p&gt;
&lt;p&gt;# This nameserver's name&lt;br&gt;
mname = "localhost",&lt;/p&gt;
&lt;p&gt;# Mailbox of individual who handles this&lt;br&gt;
rname = "root",&lt;/p&gt;
&lt;p&gt;# Unique serial identifying this SOA data&lt;br&gt;
serial = 2012071401,&lt;/p&gt;
&lt;p&gt;# Time interval before zone should be refreshed&lt;br&gt;
refresh = "1H",&lt;/p&gt;
&lt;p&gt;# Interval before failed refresh should be retried&lt;br&gt;
retry = "1H",&lt;/p&gt;
&lt;p&gt;# Upper limit on time interval before expiry&lt;br&gt;
expire = "1H",&lt;/p&gt;
&lt;p&gt;# Minimum TTL&lt;br&gt;
minimum = "1H"&lt;br&gt;
),&lt;/p&gt;
&lt;p&gt;NS('test', '127.0.0.1'),&lt;br&gt;
A('test', '192.168.10.10'),&lt;/p&gt;
&lt;p&gt;CNAME('www.test', 'test'),&lt;br&gt;
CNAME('ftp.test', 'test'),&lt;/p&gt;
&lt;p&gt;MX('test', 0, 'mail.test'),&lt;br&gt;
A('mail.test', '192.168.10.20')&lt;br&gt;
]&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="authoritative"></category><category term="DNS"></category></entry><entry><title>DNS Filtering</title><link href="http://wiki.jokeru.ro/dns-filtering.html" rel="alternate"></link><published>2012-06-02T00:15:00+01:00</published><updated>2012-06-02T00:15:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-06-02:/dns-filtering.html</id><summary type="html">&lt;p&gt;A simple DNS Proxy that returns NXDOMAIN if the master offers an IP
from a specified blacklist.&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ yum install python-twisted&lt;br&gt;
\$ wget https://github.com/lamby/dns-filter/zipball/master&lt;br&gt;
\$ unzip master&lt;br&gt;
\$ cd lamby-dns-filter-9c5d40d&lt;br&gt;
\$ vi dns-filter.conf&lt;br&gt;
\$ ./run.sh &amp;amp;&lt;/p&gt;
&lt;p&gt;\$ netstat -tulnp | grep 53&lt;br&gt;
udp 0 0 0.0.0 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A simple DNS Proxy that returns NXDOMAIN if the master offers an IP
from a specified blacklist.&lt;/p&gt;
&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ yum install python-twisted&lt;br&gt;
\$ wget https://github.com/lamby/dns-filter/zipball/master&lt;br&gt;
\$ unzip master&lt;br&gt;
\$ cd lamby-dns-filter-9c5d40d&lt;br&gt;
\$ vi dns-filter.conf&lt;br&gt;
\$ ./run.sh &amp;amp;&lt;/p&gt;
&lt;p&gt;\$ netstat -tulnp | grep 53&lt;br&gt;
udp 0 0 0.0.0.0:53 0.0.0.0:* 5736/python&lt;/p&gt;
&lt;p&gt;\$ tail -f /var/log/messages&lt;br&gt;
2012-06-02 01:31:27+0300 [-] twistd 8.2.0 (/usr/bin/python 2.6.6)
starting up.&lt;br&gt;
2012-06-02 01:31:27+0300 [-] reactor class:
twisted.internet.selectreactor.SelectReactor.&lt;br&gt;
2012-06-02 01:31:27+0300 [-]
&lt;class 'twisted.names.dns.dnsdatagramprotocol'&gt; starting on 53&lt;br&gt;
2012-06-02 01:31:27+0300 [-] Starting protocol
&lt;twisted.names.dns.dnsdatagramprotocol object at 0xa34b3ac&gt;&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;dns-filter.conf&lt;/strong&gt;&lt;br&gt;
[cc land='bash']&lt;br&gt;
[dns-filter]&lt;/p&gt;
&lt;p&gt;# DNS server to get results from&lt;br&gt;
master = 8.8.8.8&lt;/p&gt;
&lt;p&gt;# Invalid 'A' record IP addresses. The program will return "no such&lt;br&gt;
# domain" if one of these addresses is offered.&lt;br&gt;
invalid =&lt;br&gt;
10.20.30.41,&lt;br&gt;
10.20.30.42&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="blacklist"></category><category term="CentOS"></category><category term="DNS"></category><category term="Filtering"></category><category term="Proxy"></category></entry><entry><title>Install RAR / UnRAR on CentOS</title><link href="http://wiki.jokeru.ro/install-rar-unrar-on-centos.html" rel="alternate"></link><published>2012-05-11T07:37:00+01:00</published><updated>2012-05-11T07:37:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-05-11:/install-rar-unrar-on-centos.html</id><summary type="html">&lt;p&gt;Go to http://pkgs.repoforge.org/rpmforge-release/ and get latest rpm&lt;/p&gt;
&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ wget
http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm&lt;br&gt;
\$ rpm -i rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm&lt;br&gt;
\$ yum install rar unrar&lt;br&gt;
[/cc]&lt;/p&gt;</summary><content type="html">&lt;p&gt;Go to http://pkgs.repoforge.org/rpmforge-release/ and get latest rpm&lt;/p&gt;
&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ wget
http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm&lt;br&gt;
\$ rpm -i rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm&lt;br&gt;
\$ yum install rar unrar&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="BASH"></category><category term="CentOS"></category><category term="Linux"></category></entry><entry><title>Add SSL to Postfix</title><link href="http://wiki.jokeru.ro/add-ssl-to-postfix.html" rel="alternate"></link><published>2012-04-26T23:15:00+01:00</published><updated>2012-04-26T23:15:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-04-26:/add-ssl-to-postfix.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ vi /etc/postfix/master.cf&lt;br&gt;
\$ /etc/init.d/postfix restart&lt;/p&gt;
&lt;p&gt;\$ netstat -tulnp | grep master&lt;br&gt;
tcp 0 0 0.0.0.0:465 0.0.0.0:* LISTEN 5398/master&lt;br&gt;
tcp 0 0 0.0.0.0:25 0.0.0.0:* LISTEN 5398/master&lt;/p&gt;
&lt;p&gt;\$ openssl s_client -connect …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ vi /etc/postfix/master.cf&lt;br&gt;
\$ /etc/init.d/postfix restart&lt;/p&gt;
&lt;p&gt;\$ netstat -tulnp | grep master&lt;br&gt;
tcp 0 0 0.0.0.0:465 0.0.0.0:* LISTEN 5398/master&lt;br&gt;
tcp 0 0 0.0.0.0:25 0.0.0.0:* LISTEN 5398/master&lt;/p&gt;
&lt;p&gt;\$ openssl s_client -connect 10.20.30.40:465 -quiet&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/postfix/master.cf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
...&lt;br&gt;
smtps inet n - - - - smtpd&lt;br&gt;
-o smtpd_tls_wrappermode=yes&lt;br&gt;
...&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Linux"></category><category term="Mail"></category><category term="Postfix"></category><category term="SMTP"></category><category term="SSL"></category></entry><entry><title>Add SASL Auth to Postfix</title><link href="http://wiki.jokeru.ro/add-sasl-auth-to-postfix.html" rel="alternate"></link><published>2012-04-26T11:35:00+01:00</published><updated>2012-04-26T11:35:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-04-26:/add-sasl-auth-to-postfix.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install libsasl2-2 libsasl2-modules libsasl2-modules-sql
sasl2-bin libpam-mysql&lt;br&gt;
\$ mkdir -p /var/spool/postfix/var/run/saslauthd&lt;br&gt;
\$ vi /etc/default/saslauthd&lt;br&gt;
\$ vi /etc/pam.d/smtp&lt;br&gt;
\$ vi /etc/postfix/sasl/smtpd.conf&lt;/p&gt;
&lt;p&gt;\$ adduser postfix sasl&lt;br&gt;
\$ /etc/init.d/postfix restart&lt;br&gt;
\$ /etc/init.d/saslauthd restart&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/default/saslauthd …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install libsasl2-2 libsasl2-modules libsasl2-modules-sql
sasl2-bin libpam-mysql&lt;br&gt;
\$ mkdir -p /var/spool/postfix/var/run/saslauthd&lt;br&gt;
\$ vi /etc/default/saslauthd&lt;br&gt;
\$ vi /etc/pam.d/smtp&lt;br&gt;
\$ vi /etc/postfix/sasl/smtpd.conf&lt;/p&gt;
&lt;p&gt;\$ adduser postfix sasl&lt;br&gt;
\$ /etc/init.d/postfix restart&lt;br&gt;
\$ /etc/init.d/saslauthd restart&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/default/saslauthd&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
START=yes&lt;br&gt;
DESC="SASL Authentication Daemon"&lt;br&gt;
NAME="saslauthd"&lt;br&gt;
MECHANISMS="pam"&lt;br&gt;
MECH_OPTIONS=""&lt;br&gt;
THREADS=0&lt;br&gt;
OPTIONS="-c -m /var/spool/postfix/var/run/saslauthd -r"&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/pam.d/smtp&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
auth required pam_mysql.so user=mail passwd=XXX host=127.0.0.1 db=mail
table=users usercolumn=email passwdcolumn=password crypt=1&lt;br&gt;
account sufficient pam_mysql.so user=mail passwd=XXX host=127.0.0.1
db=mail table=users usercolumn=email passwdcolumn=password crypt=1&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/postfix/sasl/smtpd.conf&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
pwcheck_method: saslauthd&lt;br&gt;
mech_list: plain login&lt;br&gt;
allow_plaintext: true&lt;br&gt;
auxprop_plugin: mysql&lt;br&gt;
#auxprop_plugin: sql - debian Wheezy&lt;br&gt;
#sql_engine: mysql - debian Wheezy&lt;br&gt;
sql_hostnames: 127.0.0.1&lt;br&gt;
sql_user: mail&lt;br&gt;
sql_passwd: XXX&lt;br&gt;
sql_database: mail&lt;br&gt;
sql_select: select password from users where email = '%u'&lt;br&gt;
#sql_select: select password from users where email = '%u@%r' -
debian Wheezy&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Linux"></category><category term="Mail"></category><category term="Postfix"></category><category term="SMTP"></category></entry><entry><title>Test SMTP Auth</title><link href="http://wiki.jokeru.ro/test-smtp-auth.html" rel="alternate"></link><published>2012-04-25T19:00:00+01:00</published><updated>2012-04-25T19:00:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-04-25:/test-smtp-auth.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ perl -MMIME::Base64 -e 'print
encode_base64("\000test\@jokeru.ro\000password")'&lt;br&gt;
AHRlc3RAam9rZXJ1LnJvAHBhc3N3b3Jk&lt;/p&gt;
&lt;p&gt;\$ telnet mail.jokeru.ro 25 \&amp;lt;- no security&lt;br&gt;
or&lt;br&gt;
\$ openssl s_client -crlf -connect mail.jokeru.ro:25 -quiet \&amp;lt;- SSL&lt;br&gt;
or&lt;br&gt;
\$ openssl s_client -crlf -starttls smtp -connect mail.jokeru.ro:25
-quiet \&amp;lt;- TLS&lt;/p&gt;
&lt;p&gt;EHLO testing&lt;br&gt;
AUTH PLAIN AHRlc3RAam9rZXJ1LnJvAHBhc3N3b3Jk …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ perl -MMIME::Base64 -e 'print
encode_base64("\000test\@jokeru.ro\000password")'&lt;br&gt;
AHRlc3RAam9rZXJ1LnJvAHBhc3N3b3Jk&lt;/p&gt;
&lt;p&gt;\$ telnet mail.jokeru.ro 25 \&amp;lt;- no security&lt;br&gt;
or&lt;br&gt;
\$ openssl s_client -crlf -connect mail.jokeru.ro:25 -quiet \&amp;lt;- SSL&lt;br&gt;
or&lt;br&gt;
\$ openssl s_client -crlf -starttls smtp -connect mail.jokeru.ro:25
-quiet \&amp;lt;- TLS&lt;/p&gt;
&lt;p&gt;EHLO testing&lt;br&gt;
AUTH PLAIN AHRlc3RAam9rZXJ1LnJvAHBhc3N3b3Jk&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Linux"></category><category term="Mail"></category><category term="Postfix"></category><category term="SMTP"></category><category term="SSL"></category><category term="TLS"></category></entry><entry><title>Test IMAP Server</title><link href="http://wiki.jokeru.ro/test-imap-server.html" rel="alternate"></link><published>2012-04-25T16:00:00+01:00</published><updated>2012-04-25T16:00:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-04-25:/test-imap-server.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ telnet imap.jokeru.ro 143&lt;br&gt;
or&lt;br&gt;
\$ openssl s_client -connect imaps.jokeru.ro:993 -quiet&lt;/p&gt;
&lt;p&gt;01 LOGIN test@jokeru.ro password&lt;br&gt;
01 OK LOGIN Ok.&lt;/p&gt;
&lt;p&gt;02 LIST "" *&lt;br&gt;
* LIST (\HasNoChildren) "." "INBOX.Drafts"&lt;br&gt;
* LIST (\Marked \HasChildren) "." "INBOX"&lt;br&gt;
* LIST (\HasNoChildren) "." "INBOX.Sent"&lt;br&gt;
* LIST (\HasNoChildren) "." "INBOX.Junk"&lt;br&gt;
* LIST (\HasNoChildren) "." "INBOX.Trash"&lt;br&gt;
02 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ telnet imap.jokeru.ro 143&lt;br&gt;
or&lt;br&gt;
\$ openssl s_client -connect imaps.jokeru.ro:993 -quiet&lt;/p&gt;
&lt;p&gt;01 LOGIN test@jokeru.ro password&lt;br&gt;
01 OK LOGIN Ok.&lt;/p&gt;
&lt;p&gt;02 LIST "" *&lt;br&gt;
* LIST (\HasNoChildren) "." "INBOX.Drafts"&lt;br&gt;
* LIST (\Marked \HasChildren) "." "INBOX"&lt;br&gt;
* LIST (\HasNoChildren) "." "INBOX.Sent"&lt;br&gt;
* LIST (\HasNoChildren) "." "INBOX.Junk"&lt;br&gt;
* LIST (\HasNoChildren) "." "INBOX.Trash"&lt;br&gt;
02 OK LIST completed&lt;/p&gt;
&lt;p&gt;03 LOGOUT&lt;br&gt;
* BYE Courier-IMAP server shutting down&lt;br&gt;
03 OK LOGOUT completed&lt;br&gt;
Connection closed by foreign host.&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="BASH"></category><category term="CentOS"></category><category term="Debian"></category><category term="IMAP"></category><category term="Linux"></category><category term="Mail"></category></entry><entry><title>DKIM-milter on CentOS</title><link href="http://wiki.jokeru.ro/dkim-milter-on-centos.html" rel="alternate"></link><published>2012-02-25T22:50:00+00:00</published><updated>2012-02-25T22:50:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-02-25:/dkim-milter-on-centos.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ yum repolist -&gt; get distribution&lt;/p&gt;
&lt;p&gt;http://fedoraproject.org/wiki/EPEL -&gt; get rpm link&lt;/p&gt;
&lt;p&gt;\$ rpm -Uvh
http://dl.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm&lt;br&gt;
\$ yum repolist | grep epel&lt;br&gt;
\$ yum install dkim-milter&lt;/p&gt;
&lt;p&gt;\$ vi /etc/mail/dkim-milter/dkim-filter.conf&lt;br&gt;
\$ chkconfig dkim-milter on&lt;br&gt;
\$ /etc/init.d/dkim-milter start&lt;br&gt;
[/cc …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ yum repolist -&gt; get distribution&lt;/p&gt;
&lt;p&gt;http://fedoraproject.org/wiki/EPEL -&gt; get rpm link&lt;/p&gt;
&lt;p&gt;\$ rpm -Uvh
http://dl.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm&lt;br&gt;
\$ yum repolist | grep epel&lt;br&gt;
\$ yum install dkim-milter&lt;/p&gt;
&lt;p&gt;\$ vi /etc/mail/dkim-milter/dkim-filter.conf&lt;br&gt;
\$ chkconfig dkim-milter on&lt;br&gt;
\$ /etc/init.d/dkim-milter start&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/mail/dkim-milter/dkim-filter.conf&lt;/strong&gt;&lt;br&gt;
[cc lang='bash']&lt;br&gt;
Canonicalization relaxed/relaxed&lt;br&gt;
Domain jokeru.ro&lt;br&gt;
KeyFile /etc/postfix/dk.key&lt;br&gt;
Mode s&lt;br&gt;
Selector mail&lt;br&gt;
Socket inet:8892@localhost&lt;br&gt;
Syslog yes&lt;br&gt;
SyslogSuccess yes&lt;br&gt;
# if mail server is relay&lt;br&gt;
InternalHosts /etc/postfix/dkim-relay&lt;br&gt;
# end if&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="CentOS"></category><category term="DKIM"></category><category term="Mail"></category></entry><entry><title>Sniffing text based protocols</title><link href="http://wiki.jokeru.ro/sniffing-text-based-protocols.html" rel="alternate"></link><published>2012-02-24T22:50:00+00:00</published><updated>2012-02-24T22:50:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-02-24:/sniffing-text-based-protocols.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ tcpdump -i eth0 -l -s0 -w - tcp port 25 | strings&lt;br&gt;
[/cc]&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ tcpdump -i eth0 -l -s0 -w - tcp port 25 | strings&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="tcpdump"></category></entry><entry><title>Test file events using Inotify</title><link href="http://wiki.jokeru.ro/test-file-events-using-inotify.html" rel="alternate"></link><published>2012-02-23T13:50:00+00:00</published><updated>2012-02-23T13:50:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-02-23:/test-file-events-using-inotify.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ vi notifier.c&lt;br&gt;
\$ gcc notifier.c -o notifier&lt;br&gt;
\$ ./notifier&lt;br&gt;
file: test-touch, event: 0x00000100&lt;br&gt;
file: test-touch, event: 0x00000020&lt;br&gt;
file: test-touch, event: 0x00000004&lt;br&gt;
file: test-touch, event: 0x00000008&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ touch /tmp/test-touch&lt;br&gt;
\$ grep '0x00000100' /usr/include/sys/inotify.h&lt;br&gt;
#define IN_CREATE 0x00000100 /* Subfile was created. */&lt;br&gt;
\$ grep '0x00000020' …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ vi notifier.c&lt;br&gt;
\$ gcc notifier.c -o notifier&lt;br&gt;
\$ ./notifier&lt;br&gt;
file: test-touch, event: 0x00000100&lt;br&gt;
file: test-touch, event: 0x00000020&lt;br&gt;
file: test-touch, event: 0x00000004&lt;br&gt;
file: test-touch, event: 0x00000008&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ touch /tmp/test-touch&lt;br&gt;
\$ grep '0x00000100' /usr/include/sys/inotify.h&lt;br&gt;
#define IN_CREATE 0x00000100 /* Subfile was created. */&lt;br&gt;
\$ grep '0x00000020' /usr/include/sys/inotify.h&lt;br&gt;
#define IN_OPEN 0x00000020 /* File was opened. */&lt;br&gt;
\$ grep '0x00000004' /usr/include/sys/inotify.h&lt;br&gt;
#define IN_ATTRIB 0x00000004 /* Metadata changed. */&lt;br&gt;
\$ grep '0x00000008' /usr/include/sys/inotify.h&lt;br&gt;
#define IN_CLOSE_WRITE 0x00000008 /* Writtable file was closed.
*/&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;notifier.c&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
#include &lt;stdio.h&gt;&lt;br&gt;
#include &lt;stdlib.h&gt;&lt;br&gt;
#include &lt;errno.h&gt;&lt;br&gt;
#include &lt;sys types.h&gt;&lt;br&gt;
#include &lt;sys inotify.h&gt;&lt;/p&gt;
&lt;p&gt;#define EVENT_SIZE ( sizeof (struct inotify_event) )&lt;br&gt;
#define EVENT_BUF_LEN ( 1024 * ( EVENT_SIZE + 16 ) )&lt;/p&gt;
&lt;p&gt;int main( ) {&lt;/p&gt;
&lt;p&gt;int length, i;&lt;br&gt;
int fd;&lt;br&gt;
int wd;&lt;br&gt;
char buffer[EVENT_BUF_LEN];&lt;/p&gt;
&lt;p&gt;/*creating the INOTIFY instance*/&lt;br&gt;
fd = inotify_init();&lt;/p&gt;
&lt;p&gt;/*checking for error*/&lt;br&gt;
if ( fd \&amp;lt; 0 ) {&lt;br&gt;
perror( "inotify_init" );&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;/*adding the directory into watch list - validate the existence of the
directory before adding into monitoring list*/&lt;br&gt;
wd = inotify_add_watch( fd, "/tmp", IN_ALL_EVENTS );&lt;/p&gt;
&lt;p&gt;// loop&lt;br&gt;
for (;;) {&lt;/p&gt;
&lt;p&gt;i = 0;&lt;/p&gt;
&lt;p&gt;/*read to determine the event change happens on directory; actually
this read blocks until the change event occurs*/&lt;br&gt;
length = read( fd, buffer, EVENT_BUF_LEN );&lt;/p&gt;
&lt;p&gt;/*checking for error*/&lt;br&gt;
if ( length \&amp;lt; 0 ) {&lt;br&gt;
perror( "read" );&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;/*actually read return the list of change events happens; read the
change event one by one and process it accordingly*/&lt;br&gt;
while ( i \&amp;lt; length ) {&lt;br&gt;
struct inotify_event *event = ( struct inotify_event * ) &amp;amp;buffer[ i
];&lt;br&gt;
if ( event-&gt;len ) {&lt;br&gt;
printf( "file: %s, event: %#010x\n", event-&gt;name, event-&gt;mask );&lt;br&gt;
}&lt;br&gt;
i += EVENT_SIZE + event-&gt;len;&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
// end loop&lt;/p&gt;
&lt;p&gt;/*removing the directory from the watch list*/&lt;br&gt;
inotify_rm_watch( fd, wd );&lt;/p&gt;
&lt;p&gt;/*closing the INOTIFY instance*/&lt;br&gt;
close( fd );&lt;br&gt;
}&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;source:
&lt;a href="http://www.thegeekstuff.com/2010/04/inotify-c-program-example/"&gt;http://www.thegeekstuff.com/2010/04/inotify-c-program-example/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="filesystem"></category><category term="gcc"></category><category term="inotify"></category></entry><entry><title>3proxy - Free Proxy Server</title><link href="http://wiki.jokeru.ro/3proxy-free-proxy-server.html" rel="alternate"></link><published>2012-02-18T20:55:00+00:00</published><updated>2012-02-18T20:55:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-02-18:/3proxy-free-proxy-server.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install make gcc -y&lt;br&gt;
\$ cd /usr/src/&lt;br&gt;
\$ wget http://3proxy.ru/0.6.1/3proxy-0.6.1.tgz&lt;br&gt;
\$ tar -xzf 3proxy-0.6.1.tgz&lt;br&gt;
\$ cd 3proxy-0.6.1&lt;br&gt;
\$ make -f Makefile.Linux&lt;br&gt;
\$ cp src/3proxy /usr/local/bin/&lt;/p&gt;
&lt;p&gt;\$ mkdir /etc/3proxy&lt;br&gt;
\$ mkdir /var/log/3proxy&lt;br&gt;
\$ vi …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install make gcc -y&lt;br&gt;
\$ cd /usr/src/&lt;br&gt;
\$ wget http://3proxy.ru/0.6.1/3proxy-0.6.1.tgz&lt;br&gt;
\$ tar -xzf 3proxy-0.6.1.tgz&lt;br&gt;
\$ cd 3proxy-0.6.1&lt;br&gt;
\$ make -f Makefile.Linux&lt;br&gt;
\$ cp src/3proxy /usr/local/bin/&lt;/p&gt;
&lt;p&gt;\$ mkdir /etc/3proxy&lt;br&gt;
\$ mkdir /var/log/3proxy&lt;br&gt;
\$ vi /etc/3proxy/3proxy.cfg&lt;/p&gt;
&lt;p&gt;\$ 3proxy /etc/3proxy/3proxy.cfg&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/3proxy/3proxy.cfg - socks config&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
#!/usr/local/bin/3proxy&lt;/p&gt;
&lt;p&gt;daemon&lt;br&gt;
pidfile /etc/3proxy/3proxy.pid&lt;/p&gt;
&lt;p&gt;# if 3proxy.cfg is executable, a config file is needed&lt;br&gt;
config /etc/3proxy/3proxy.cfg&lt;/p&gt;
&lt;p&gt;# rotate log daily&lt;br&gt;
log /var/log/3proxy/access D&lt;br&gt;
# gzip logs&lt;br&gt;
archiver gz /bin/gzip %F&lt;br&gt;
# retain 30 log files&lt;br&gt;
rotate 30&lt;/p&gt;
&lt;p&gt;# monitor files for changes&lt;br&gt;
monitor /etc/3proxy/3proxy.cfg&lt;/p&gt;
&lt;p&gt;# define users - cleartext password&lt;br&gt;
users "user1:CL:pass1" "user2:CL:pass2"&lt;/p&gt;
&lt;p&gt;internal 10.20.30.41&lt;br&gt;
external 10.20.30.41&lt;br&gt;
auth strong&lt;br&gt;
allow user11 * * * * * *&lt;br&gt;
socks -p6969&lt;br&gt;
flush&lt;/p&gt;
&lt;p&gt;internal 10.20.30.42&lt;br&gt;
external 10.20.30.42&lt;br&gt;
auth iponly&lt;br&gt;
allow * 50.60.70.81,50.60.70.82 * * * * *&lt;br&gt;
socks -p6969&lt;br&gt;
flush&lt;br&gt;
[/cc]&lt;br&gt;
&lt;strong&gt;user &amp;amp; pass auth works only on SOCKSv5 and HTTP proxy&lt;/strong&gt;&lt;/p&gt;</content><category term="3proxy"></category><category term="Linux"></category><category term="Proxy"></category><category term="Socks"></category></entry><entry><title>RoundRobin OutGoing SMTP IP Address</title><link href="http://wiki.jokeru.ro/roundrobin-outgoing-smtp-ip-address.html" rel="alternate"></link><published>2012-02-17T21:21:00+00:00</published><updated>2012-02-17T21:21:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-02-17:/roundrobin-outgoing-smtp-ip-address.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ iptables -t nat -F&lt;br&gt;
\$ iptables -t nat -I POSTROUTING -m state --state NEW -p tcp --dport
25 -o eth0 -m statistic --mode nth --every 1 -j SNAT --to-source
10.20.30.41&lt;br&gt;
\$ iptables -t nat -I POSTROUTING -m state --state NEW -p tcp --dport
25 -o eth0 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ iptables -t nat -F&lt;br&gt;
\$ iptables -t nat -I POSTROUTING -m state --state NEW -p tcp --dport
25 -o eth0 -m statistic --mode nth --every 1 -j SNAT --to-source
10.20.30.41&lt;br&gt;
\$ iptables -t nat -I POSTROUTING -m state --state NEW -p tcp --dport
25 -o eth0 -m statistic --mode nth --every 2 -j SNAT --to-source
10.20.30.42&lt;br&gt;
\$ iptables -t nat -I POSTROUTING -m state --state NEW -p tcp --dport
25 -o eth0 -m statistic --mode nth --every 3 -j SNAT --to-source
10.20.30.43&lt;br&gt;
\$ iptables -t nat -I POSTROUTING -m state --state NEW -p tcp --dport
25 -o eth0 -m statistic --mode nth --every 4 -j SNAT --to-source
10.20.30.44&lt;br&gt;
\$ iptables -t nat -I POSTROUTING -m state --state NEW -p tcp --dport
25 -o eth0 -m statistic --mode nth --every 5 -j SNAT --to-source
10.20.30.45&lt;/p&gt;
&lt;p&gt;\$ iptables -L -t nat -nv&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="BASH"></category><category term="iptables"></category><category term="Linux"></category><category term="Postfix"></category><category term="SMTP"></category></entry><entry><title>Dovecot POP3S Server</title><link href="http://wiki.jokeru.ro/dovecot-pop3s-server.html" rel="alternate"></link><published>2012-02-15T12:45:00+00:00</published><updated>2012-02-15T12:45:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-02-15:/dovecot-pop3s-server.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ yum install dovecot&lt;/p&gt;
&lt;p&gt;\$ cd /etc/dovecot/&lt;br&gt;
\$ vi dovecot.conf&lt;br&gt;
\$ vi dovecot.pass&lt;/p&gt;
&lt;p&gt;\$ service dovecot restart&lt;br&gt;
\$ netstat -tulnp | grep dovecot&lt;br&gt;
tcp 0 0 10.20.30.40:995 0.0.0.0:* LISTEN 24996/dovecot&lt;/p&gt;
&lt;p&gt;\$ openssl s_client -connect 10.20.30.40:995&lt;br&gt;
user root@jokeru.ro&lt;br&gt;
pass …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ yum install dovecot&lt;/p&gt;
&lt;p&gt;\$ cd /etc/dovecot/&lt;br&gt;
\$ vi dovecot.conf&lt;br&gt;
\$ vi dovecot.pass&lt;/p&gt;
&lt;p&gt;\$ service dovecot restart&lt;br&gt;
\$ netstat -tulnp | grep dovecot&lt;br&gt;
tcp 0 0 10.20.30.40:995 0.0.0.0:* LISTEN 24996/dovecot&lt;/p&gt;
&lt;p&gt;\$ openssl s_client -connect 10.20.30.40:995&lt;br&gt;
user root@jokeru.ro&lt;br&gt;
pass r00t&lt;br&gt;
list&lt;br&gt;
retr 1&lt;br&gt;
quit&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/dovecot/dovecot.conf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
# bind to ip&lt;br&gt;
listen = 10.20.30.40&lt;br&gt;
# enable protocol&lt;br&gt;
protocols = pop3&lt;br&gt;
# disable non-ssl&lt;br&gt;
service pop3-login {&lt;br&gt;
inet_listener pop3 {&lt;br&gt;
port=0&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
# TLS settings&lt;br&gt;
ssl_cert = &lt;/etc&gt; ssl_key = &lt;/etc&gt; # AUTH settings&lt;br&gt;
auth_mechanisms = plain&lt;br&gt;
disable_plaintext_auth = no&lt;br&gt;
passdb {&lt;br&gt;
driver = passwd-file&lt;br&gt;
args = username_format=%u /etc/dovecot/dovecot.pass&lt;br&gt;
}&lt;br&gt;
userdb {&lt;br&gt;
driver = static&lt;br&gt;
args = uid=postfix gid=postfix&lt;br&gt;
}&lt;br&gt;
first_valid_uid = 89&lt;br&gt;
mail_location = maildir:/home/mail/%d/%n&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/dovecot/dovecot.pass&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
root@jokeru.ro:{PLAIN}r00t&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="CentOS"></category><category term="POP3"></category><category term="POP3S"></category><category term="Postfix"></category><category term="SSL"></category><category term="TLS"></category></entry><entry><title>Unbound DNS Resolver</title><link href="http://wiki.jokeru.ro/unbound-dns-resolver.html" rel="alternate"></link><published>2012-02-01T10:35:00+00:00</published><updated>2012-02-01T10:35:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-02-01:/unbound-dns-resolver.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ rpm -ihv
http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-5.noarch.rpm&lt;br&gt;
\$ yum install unbound&lt;/p&gt;
&lt;p&gt;\$ vi /etc/unbound/unbound.conf&lt;/p&gt;
&lt;p&gt;\$ cd /etc/unbound/&lt;br&gt;
\$ wget ftp://FTP.INTERNIC.NET/domain/named.cache&lt;/p&gt;
&lt;p&gt;\$ vi /etc/init.d/unbound - add mount / unmount to start / stop&lt;/p&gt;
&lt;p&gt;\$ mkdir -p /var/lib …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ rpm -ihv
http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-5.noarch.rpm&lt;br&gt;
\$ yum install unbound&lt;/p&gt;
&lt;p&gt;\$ vi /etc/unbound/unbound.conf&lt;/p&gt;
&lt;p&gt;\$ cd /etc/unbound/&lt;br&gt;
\$ wget ftp://FTP.INTERNIC.NET/domain/named.cache&lt;/p&gt;
&lt;p&gt;\$ vi /etc/init.d/unbound - add mount / unmount to start / stop&lt;/p&gt;
&lt;p&gt;\$ mkdir -p /var/lib/unbound/etc/unbound&lt;br&gt;
\$ mkdir -p /var/lib/unbound/var/log/unbound&lt;br&gt;
\$ chown -R unbound:unbound /var/lib/unbound&lt;/p&gt;
&lt;p&gt;\$ mkdir /var/log/unbound&lt;br&gt;
\$ chown unbound:unbound /var/log/unbound&lt;/p&gt;
&lt;p&gt;\$ yum install policycoreutils-python&lt;br&gt;
\$ semanage port -a -t dns_port_t -p tcp 8953&lt;br&gt;
\$ semanage port -l | grep dns&lt;/p&gt;
&lt;p&gt;\$ service unbound start&lt;br&gt;
\$ chkconfig unbound on&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="CentOS"></category><category term="DNS"></category><category term="Linux"></category><category term="SELinux"></category></entry><entry><title>Juniper Olive</title><link href="http://wiki.jokeru.ro/juniper-olive.html" rel="alternate"></link><published>2012-01-13T15:21:00+00:00</published><updated>2012-01-13T15:21:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2012-01-13:/juniper-olive.html</id><summary type="html">&lt;p&gt;Windows 7 Ultimate SP1&lt;br&gt;
VirtualBox-4.1.8-75467-Win&lt;br&gt;
Free BSD 4.11-RELEASE-i386-miniinst&lt;br&gt;
jinstall-10.4R5.5-domestic-signed&lt;/p&gt;
&lt;p&gt;http://sleepyrich.blogspot.com/2010/03/preparing-virtualbox-and-freebsd-for.html  &lt;/p&gt;
&lt;p&gt;http://sleepyrich.blogspot.com/2010/03/juniper-olive-on-sun-virtualbox.html&lt;/p&gt;</summary><content type="html">&lt;p&gt;Windows 7 Ultimate SP1&lt;br&gt;
VirtualBox-4.1.8-75467-Win&lt;br&gt;
Free BSD 4.11-RELEASE-i386-miniinst&lt;br&gt;
jinstall-10.4R5.5-domestic-signed&lt;/p&gt;
&lt;p&gt;http://sleepyrich.blogspot.com/2010/03/preparing-virtualbox-and-freebsd-for.html  &lt;/p&gt;
&lt;p&gt;http://sleepyrich.blogspot.com/2010/03/juniper-olive-on-sun-virtualbox.html&lt;/p&gt;</content><category term="JunOS"></category><category term="Olive"></category><category term="VirtualBox"></category><category term="VM"></category></entry><entry><title>Traversing of tables and chains</title><link href="http://wiki.jokeru.ro/traversing-of-tables-and-chains.html" rel="alternate"></link><published>2011-12-14T11:55:00+00:00</published><updated>2011-12-14T11:55:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2011-12-14:/traversing-of-tables-and-chains.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.faqs.org/docs/iptables/traversingoftables.html"&gt;http://www.faqs.org/docs/iptables/traversingoftables.html&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.faqs.org/docs/iptables/traversingoftables.html"&gt;http://www.faqs.org/docs/iptables/traversingoftables.html&lt;/a&gt;&lt;/p&gt;</content><category term="iptables"></category><category term="Linux"></category></entry><entry><title>Triggering Commands On File/Directory Changes</title><link href="http://wiki.jokeru.ro/triggering-commands-on-filedirectory-changes.html" rel="alternate"></link><published>2011-12-10T14:20:00+00:00</published><updated>2011-12-10T14:20:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2011-12-10:/triggering-commands-on-filedirectory-changes.html</id><summary type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install incron&lt;/p&gt;
&lt;p&gt;\$ echo 'root' &gt; /etc/incron.allow&lt;br&gt;
\$ incrontab -e \&amp;lt;- add "/etc/apache2/sites-enabled/ IN_MODIFY
/etc/init.d/apache2 reload"&lt;br&gt;
\$ /etc/init.d/incrond start&lt;br&gt;
[/cc]&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang='bash']&lt;br&gt;
\$ apt-get install incron&lt;/p&gt;
&lt;p&gt;\$ echo 'root' &gt; /etc/incron.allow&lt;br&gt;
\$ incrontab -e \&amp;lt;- add "/etc/apache2/sites-enabled/ IN_MODIFY
/etc/init.d/apache2 reload"&lt;br&gt;
\$ /etc/init.d/incrond start&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="BASH"></category><category term="incron"></category><category term="Linux"></category></entry><entry><title>TCP Tuning for busy systems</title><link href="http://wiki.jokeru.ro/tcp-tuning-for-busy-system.html" rel="alternate"></link><published>2011-08-18T11:53:00+01:00</published><updated>2011-08-18T11:53:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2011-08-18:/tcp-tuning-for-busy-system.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ vi /etc/sysctl.conf&lt;/p&gt;
&lt;p&gt;# The wait time before TCP/IP can release a closed connection&lt;br&gt;
net.ipv4.tcp_fin_timeout = 15&lt;br&gt;
# The wait time between isAlive interval probes&lt;br&gt;
net.ipv4.tcp_keepalive_intvl = 15&lt;br&gt;
# The number of probes before timing out&lt;br&gt;
net.ipv4.tcp_keepalive_probes = 5&lt;br&gt;
# Reuse sockets in the time-wait state …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ vi /etc/sysctl.conf&lt;/p&gt;
&lt;p&gt;# The wait time before TCP/IP can release a closed connection&lt;br&gt;
net.ipv4.tcp_fin_timeout = 15&lt;br&gt;
# The wait time between isAlive interval probes&lt;br&gt;
net.ipv4.tcp_keepalive_intvl = 15&lt;br&gt;
# The number of probes before timing out&lt;br&gt;
net.ipv4.tcp_keepalive_probes = 5&lt;br&gt;
# Reuse sockets in the time-wait state&lt;br&gt;
net.ipv4.tcp_tw_reuse = 1&lt;br&gt;
# Increase system IP port limits&lt;br&gt;
net.ipv4.ip_local_port_range = 10000 65000&lt;/p&gt;
&lt;p&gt;\$ sysctl -p&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="Linux"></category><category term="Performance"></category><category term="Proxy"></category><category term="Socks"></category><category term="Squid"></category><category term="Tuning"></category></entry><entry><title>SRG - Squid Report Generator</title><link href="http://wiki.jokeru.ro/srg-squid-report-generator.html" rel="alternate"></link><published>2011-07-13T20:25:00+01:00</published><updated>2011-07-13T20:25:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2011-07-13:/srg-squid-report-generator.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install srg&lt;/p&gt;
&lt;p&gt;\$ vi /etc/default/srg&lt;br&gt;
\$ vi /etc/srg/srg.conf&lt;br&gt;
\$ vi /etc/cron.daily/srg&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/default/srg&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
REPORTBASE=/var/www/srg&lt;br&gt;
CONFIGFILE=/etc/srg/srg.conf&lt;br&gt;
MAILUSER=""&lt;br&gt;
DAILY_REPORT_RETAIN_DAYS="180"&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/srg/srg.conf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
log_file "/var/log …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install srg&lt;/p&gt;
&lt;p&gt;\$ vi /etc/default/srg&lt;br&gt;
\$ vi /etc/srg/srg.conf&lt;br&gt;
\$ vi /etc/cron.daily/srg&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/default/srg&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
REPORTBASE=/var/www/srg&lt;br&gt;
CONFIGFILE=/etc/srg/srg.conf&lt;br&gt;
MAILUSER=""&lt;br&gt;
DAILY_REPORT_RETAIN_DAYS="180"&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/srg/srg.conf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
log_file "/var/log/squid/access.log /var/log/squid/access.log.1"&lt;br&gt;
output_dir "/var/www/srg"&lt;br&gt;
output_url "/srg/"&lt;br&gt;
groupby "U"&lt;br&gt;
show_rates true&lt;br&gt;
iptouser_file "/etc/srg/ip2user"&lt;br&gt;
nonameexists_showip true&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;Open http://127.0.0.1/srg/&lt;/p&gt;</content><category term="bandwidth"></category><category term="Debian"></category><category term="Linux"></category><category term="Performance"></category><category term="Proxy"></category><category term="Squid"></category></entry><entry><title>PPTP Server on Ubuntu</title><link href="http://wiki.jokeru.ro/pptp-server-on-ubuntu.html" rel="alternate"></link><published>2011-06-21T09:15:00+01:00</published><updated>2011-06-21T09:15:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2011-06-21:/pptp-server-on-ubuntu.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install pptpd bcrelay&lt;/p&gt;
&lt;p&gt;\$ vi /etc/pptpd.conf&lt;br&gt;
\$ vi /etc/ppp/pptpd-options&lt;br&gt;
\$ vi /etc/ppp/chap-secrets&lt;br&gt;
\$ /etc/init.d/pptpd restart&lt;/p&gt;
&lt;p&gt;\$ netstat -tulnp | grep pptpd&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/pptpd.conf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
listen 10.20.30.40&lt;br&gt;
option /etc/ppp/pptpd-options&lt;br&gt;
logwtmp&lt;br&gt;
localip 192.168.20.1 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install pptpd bcrelay&lt;/p&gt;
&lt;p&gt;\$ vi /etc/pptpd.conf&lt;br&gt;
\$ vi /etc/ppp/pptpd-options&lt;br&gt;
\$ vi /etc/ppp/chap-secrets&lt;br&gt;
\$ /etc/init.d/pptpd restart&lt;/p&gt;
&lt;p&gt;\$ netstat -tulnp | grep pptpd&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/pptpd.conf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
listen 10.20.30.40&lt;br&gt;
option /etc/ppp/pptpd-options&lt;br&gt;
logwtmp&lt;br&gt;
localip 192.168.20.1&lt;br&gt;
remoteip 192.168.20.101-200&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/ppp/pptpd-options&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
name pptpd&lt;br&gt;
refuse-pap&lt;br&gt;
refuse-chap&lt;br&gt;
refuse-mschap&lt;br&gt;
require-mschap-v2&lt;br&gt;
require-mppe-128&lt;br&gt;
proxyarp&lt;br&gt;
nodefaultroute&lt;br&gt;
lock&lt;br&gt;
nobsdcomp&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/ppp/chap-secrets&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
# Secrets for authentication using CHAP&lt;br&gt;
# client server secret IP addresses&lt;br&gt;
test pptpd test *&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="GRE"></category><category term="Linux"></category><category term="pptpd"></category><category term="Tunnel"></category><category term="Ubuntu"></category><category term="VPN"></category></entry><entry><title>Vsftpd with Virtual Users</title><link href="http://wiki.jokeru.ro/vsftpd-with-virtual-users.html" rel="alternate"></link><published>2011-05-10T14:44:00+01:00</published><updated>2011-05-10T14:44:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2011-05-10:/vsftpd-with-virtual-users.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ yum install vsftpd db4-utils&lt;/p&gt;
&lt;p&gt;\$ cd /etc/vsftpd/&lt;br&gt;
\$ echo -e "user_name\npass_word" &gt; virtual-users.txt&lt;br&gt;
\$ db_load -T -t hash -f virtual-users.txt
/etc/vsftpd/virtual-users.db&lt;br&gt;
\$ chmod 600 virtual-users.*&lt;br&gt;
\$ vi vsftpd.conf&lt;/p&gt;
&lt;p&gt;\$ vi /etc/pam.d/vsftpd-virtual&lt;/p&gt;
&lt;p&gt;\$ chown -R apache:apache /var/www/html/*&lt;br&gt;
\$ service vsftpd restart&lt;br&gt;
\$ chkconfig --levels …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ yum install vsftpd db4-utils&lt;/p&gt;
&lt;p&gt;\$ cd /etc/vsftpd/&lt;br&gt;
\$ echo -e "user_name\npass_word" &gt; virtual-users.txt&lt;br&gt;
\$ db_load -T -t hash -f virtual-users.txt
/etc/vsftpd/virtual-users.db&lt;br&gt;
\$ chmod 600 virtual-users.*&lt;br&gt;
\$ vi vsftpd.conf&lt;/p&gt;
&lt;p&gt;\$ vi /etc/pam.d/vsftpd-virtual&lt;/p&gt;
&lt;p&gt;\$ chown -R apache:apache /var/www/html/*&lt;br&gt;
\$ service vsftpd restart&lt;br&gt;
\$ chkconfig --levels 235 vsftpd on&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/vsftpd/vsftpd.conf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
# run in standalone mode&lt;br&gt;
listen=YES&lt;br&gt;
# bind server to ip&lt;br&gt;
listen_address=10.20.30.40&lt;/p&gt;
&lt;p&gt;# disables anonymous FTP&lt;br&gt;
anonymous_enable=NO&lt;br&gt;
# enables non-anonymous FTP&lt;br&gt;
local_enable=YES&lt;br&gt;
# activates virtual users&lt;br&gt;
guest_enable=YES&lt;br&gt;
# the real username which guest users are mapped to&lt;br&gt;
guest_username=apache&lt;br&gt;
# virtual users to use local privs, not anon privs&lt;br&gt;
virtual_use_local_privs=YES&lt;br&gt;
# the home directory for each virtual user&lt;br&gt;
#local_root=/var/www/html&lt;br&gt;
# or&lt;br&gt;
user_sub_token=\$USER&lt;br&gt;
local_root=/var/www/html/\$USER&lt;br&gt;
# the virtual user is restricted to the virtual FTP area&lt;br&gt;
chroot_local_user=YES&lt;br&gt;
# enables uploads and new directories&lt;br&gt;
write_enable=YES&lt;br&gt;
# the PAM file used by authentication of virtual uses&lt;br&gt;
pam_service_name=vsftpd-virtual&lt;br&gt;
# hides the FTP server user IDs and just display "ftp" in directory
listings&lt;br&gt;
hide_ids=YES&lt;br&gt;
# the umask for file creation&lt;br&gt;
local_umask=077&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/pam.d/vsftpd-virtual&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
#%PAM-1.0&lt;br&gt;
auth required pam_userdb.so db=/etc/vsftpd/virtual-users&lt;br&gt;
account required pam_userdb.so db=/etc/vsftpd/virtual-users&lt;br&gt;
session required pam_loginuid.so&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="CentOS"></category><category term="FTP"></category><category term="Linux"></category><category term="Vsftpd"></category></entry><entry><title>Postfix Domain Keys – DK</title><link href="http://wiki.jokeru.ro/postfix-domain-keys-%e2%80%93-dk.html" rel="alternate"></link><published>2011-04-25T08:55:00+01:00</published><updated>2011-04-25T08:55:00+01:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2011-04-25:/postfix-domain-keys-%e2%80%93-dk.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install dk-filter&lt;/p&gt;
&lt;p&gt;\$ vi /etc/default/dk-filter&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/dk.domains&lt;/p&gt;
&lt;p&gt;\$ dkim-genkey -s mail -d jokeru.ro&lt;br&gt;
\$ mv mail.private /etc/postfix/dk.key&lt;br&gt;
\$ chmod 444 /etc/postfix/dk.key&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/dk.sign&lt;/p&gt;
&lt;p&gt;\$ service dk-filter restart&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/main.cf&lt;br&gt;
\$ service postfix restart …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install dk-filter&lt;/p&gt;
&lt;p&gt;\$ vi /etc/default/dk-filter&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/dk.domains&lt;/p&gt;
&lt;p&gt;\$ dkim-genkey -s mail -d jokeru.ro&lt;br&gt;
\$ mv mail.private /etc/postfix/dk.key&lt;br&gt;
\$ chmod 444 /etc/postfix/dk.key&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/dk.sign&lt;/p&gt;
&lt;p&gt;\$ service dk-filter restart&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/main.cf&lt;br&gt;
\$ service postfix restart&lt;/p&gt;
&lt;p&gt;\$ cat mail.txt; rm -f mail.txt&lt;br&gt;
\$ vi /etc/bind/zone.jokeru.ro&lt;br&gt;
\$ service bind9 reload&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/default/dk-filter&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
# Sane defaults: log to syslog, sign only&lt;br&gt;
DAEMON_OPTS="-l -b s"&lt;br&gt;
# Sign for example.com with key in /etc/mail/domainkey.key using&lt;br&gt;
# selector '2007' (e.g. 2007._domainkey.example.com)&lt;br&gt;
DAEMON_OPTS="\$DAEMON_OPTS -d /etc/postfix/dk.domains -s
/etc/postfix/dk.key -S mail -i /etc/postfix/dk.sign"&lt;br&gt;
# See dk-filter(8) for a complete list of options&lt;br&gt;
#&lt;br&gt;
# Uncomment to specify an alternate socket&lt;br&gt;
#SOCKET="/var/run/dk-filter/dk-filter.sock" # default&lt;br&gt;
#SOCKET="inet:54321" # listen on all interfaces on port 54321&lt;br&gt;
SOCKET="inet:8891@localhost" # listen on loopback on port 8891&lt;br&gt;
#SOCKET="inet:12345@192.0.2.1" # listen on 192.0.2.1 on port 12345&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/postfix/dk.domains&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
jokeru.ro&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/postfix/dk.sign&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
127.0.0.1&lt;br&gt;
10.20.30.40&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/postfix/main.cf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
.....&lt;br&gt;
# DK&lt;br&gt;
milter_default_action = accept&lt;br&gt;
milter_protocol = 2&lt;br&gt;
smtpd_milters = inet:localhost:8891&lt;br&gt;
non_smtpd_milters = inet:localhost:8891&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/bind/zone.jokeru.ro&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
.....&lt;br&gt;
; DK&lt;br&gt;
;Policy Record&lt;br&gt;
_domainkey IN TXT "o=-"&lt;br&gt;
;Selector Record&lt;br&gt;
mail._domainkey IN TXT "k=rsa;
p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDtlAf0dNXkQGxDAPSgWl9iongp/LcYrK0XNXFicLsPaBqwFWAxC/MljjfERSOv0olN7ZgHyUkqdYCgSK73U3b++0ToQG5l3Vet1pXzYFwkrwW3xSDaDfxfulWtP5Nuch621d4lrh50pl7WJ/GHCiAtjAo9p8GPIZW43xNduoAtiQIDAQAB"&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;source:
&lt;a href="https://help.ubuntu.com/community/Postfix/DomainKeys"&gt;https://help.ubuntu.com/community/Postfix/DomainKeys&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="DK"></category><category term="Mail"></category><category term="Postfix"></category><category term="Ubuntu"></category></entry><entry><title>SNMPd</title><link href="http://wiki.jokeru.ro/snmpd.html" rel="alternate"></link><published>2011-02-13T20:50:00+00:00</published><updated>2011-02-13T20:50:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2011-02-13:/snmpd.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ yum install net-snmp net-snmp-utils&lt;br&gt;
\$ rpm -ql net-snmp&lt;/p&gt;
&lt;p&gt;\$ mv /etc/snmp/snmpd.conf /etc/snmp/snmpd.conf.org&lt;br&gt;
\$ vi /etc/snmp/snmpd.conf&lt;br&gt;
\$ vi /etc/sysconfig/snmpd.options&lt;/p&gt;
&lt;p&gt;\$ chkconfig snmpd on&lt;br&gt;
\$ service snmpd start&lt;br&gt;
\$ netstat -tulnp | grep snmpd&lt;br&gt;
udp 0 0 10.0.0.2:161 0.0 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ yum install net-snmp net-snmp-utils&lt;br&gt;
\$ rpm -ql net-snmp&lt;/p&gt;
&lt;p&gt;\$ mv /etc/snmp/snmpd.conf /etc/snmp/snmpd.conf.org&lt;br&gt;
\$ vi /etc/snmp/snmpd.conf&lt;br&gt;
\$ vi /etc/sysconfig/snmpd.options&lt;/p&gt;
&lt;p&gt;\$ chkconfig snmpd on&lt;br&gt;
\$ service snmpd start&lt;br&gt;
\$ netstat -tulnp | grep snmpd&lt;br&gt;
udp 0 0 10.0.0.2:161 0.0.0.0:* 2126/snmpd&lt;br&gt;
udp 0 0 127.0.0.1:161 0.0.0.0:* 2126/snmpd&lt;br&gt;
\$ snmpwalk -v1 -cpublic 127.0.0.1 sysLocation&lt;br&gt;
SNMPv2-MIB::sysLocation.0 = STRING: Wiki&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/snmp/snmpd.conf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
syslocation Wiki&lt;br&gt;
syscontact Wiki &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#119;&amp;#105;&amp;#107;&amp;#105;&amp;#64;&amp;#106;&amp;#111;&amp;#107;&amp;#101;&amp;#114;&amp;#117;&amp;#46;&amp;#114;&amp;#111;"&gt;&amp;#119;&amp;#105;&amp;#107;&amp;#105;&amp;#64;&amp;#106;&amp;#111;&amp;#107;&amp;#101;&amp;#114;&amp;#117;&amp;#46;&amp;#114;&amp;#111;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;####&lt;br&gt;
# First, map the community into a security name&lt;br&gt;
# sec.name source community&lt;br&gt;
com2sec RO-SN-Local localhost public&lt;br&gt;
com2sec RO-SN-Lan 10.0.0.0/24 private&lt;/p&gt;
&lt;p&gt;####&lt;br&gt;
# Second, map the security name into a group name&lt;br&gt;
# group name security model security name&lt;br&gt;
group RO-GN-Local v1 RO-SN-Local&lt;br&gt;
group RO-GN-Local v2c RO-SN-Local&lt;br&gt;
group RO-GN-Lan v2c RO-SN-Lan&lt;/p&gt;
&lt;p&gt;####&lt;br&gt;
# Third, create a view for us to let the group have rights to&lt;br&gt;
# name incl/excl subtree mask(optional)&lt;br&gt;
view All included .1 80&lt;/p&gt;
&lt;p&gt;####&lt;br&gt;
# Finally, grant the group read-only access to the view&lt;br&gt;
# group context sec.model sec.level prefix read write notif&lt;br&gt;
access RO-GN-Local "" any noauth exact All none none&lt;br&gt;
access RO-GN-Lan "" any noauth exact All none none&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/sysconfig/snmpd.options&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
# snmpd command line options&lt;br&gt;
OPTIONS="-Lsd -Lf /dev/null -I -smux -p /var/run/snmpd.pid 127.0.0.1
10.0.0.2"&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="CentOS"></category><category term="Linux"></category><category term="SNMP"></category><category term="SNMPd"></category></entry><entry><title>Postfix Domain Keys Identified Mail - DKIM</title><link href="http://wiki.jokeru.ro/postfix-domain-keys-identified-mail-dkim.html" rel="alternate"></link><published>2011-01-26T23:23:00+00:00</published><updated>2011-01-26T23:23:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2011-01-26:/postfix-domain-keys-identified-mail-dkim.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install dkim-filter&lt;/p&gt;
&lt;p&gt;\$ vi /etc/default/dkim-filter&lt;br&gt;
\$ vi /etc/dkim-filter.conf&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/dk.domains&lt;/p&gt;
&lt;p&gt;\$ dkim-genkey -s mail -d jokeru.ro&lt;br&gt;
\$ mv mail.private /etc/postfix/dk.key&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/dk.sign&lt;/p&gt;
&lt;p&gt;\$ service dkim-filter restart&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/main.cf&lt;br&gt;
\$ service postfix restart&lt;/p&gt;
&lt;p&gt;\$ cat mail …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install dkim-filter&lt;/p&gt;
&lt;p&gt;\$ vi /etc/default/dkim-filter&lt;br&gt;
\$ vi /etc/dkim-filter.conf&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/dk.domains&lt;/p&gt;
&lt;p&gt;\$ dkim-genkey -s mail -d jokeru.ro&lt;br&gt;
\$ mv mail.private /etc/postfix/dk.key&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/dk.sign&lt;/p&gt;
&lt;p&gt;\$ service dkim-filter restart&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/main.cf&lt;br&gt;
\$ service postfix restart&lt;/p&gt;
&lt;p&gt;\$ cat mail.txt; rm -f mail.txt&lt;br&gt;
\$ vi /etc/bind/zone.jokeru.ro&lt;br&gt;
\$ service bind9 reload&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/default/dkim-filter&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
SOCKET="inet:8892@localhost" # Ubuntu default - listen on loopback on
port 8892&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/dkim-filter.conf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
Syslog yes&lt;br&gt;
Domain /etc/postfix/dk.domains&lt;br&gt;
KeyFile /etc/postfix/dk.key&lt;br&gt;
Selector mail&lt;br&gt;
Canonicalization relaxed/relaxed&lt;br&gt;
Mode s&lt;br&gt;
SignatureAlgorithm rsa-sha256&lt;br&gt;
X-Header yes&lt;br&gt;
InternalHosts /etc/postfix/dk.sign&lt;br&gt;
ExternalIgnoreList /etc/postfix/dk.sign&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/postfix/dk.domains&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
jokeru.ro&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/postfix/dk.sign&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
127.0.0.1&lt;br&gt;
10.20.30.40&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/postfix/main.cf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
.....&lt;br&gt;
# DKIM&lt;br&gt;
milter_default_action = accept&lt;br&gt;
milter_protocol = 2&lt;br&gt;
smtpd_milters = inet:localhost:8892&lt;br&gt;
non_smtpd_milters = inet:localhost:8892&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/bind/zone.jokeru.ro&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
.....&lt;br&gt;
; DKIM&lt;br&gt;
;Policy Record&lt;br&gt;
_domainkey IN TXT "o=-"&lt;br&gt;
;Selector Record&lt;br&gt;
mail._domainkey IN TXT "k=rsa;
p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDtlAf0dNXkQGxDAPSgWl9iongp/LcYrK0XNXFicLsPaBqwFWAxC/MljjfERSOv0olN7ZgHyUkqdYCgSK73U3b++0ToQG5l3Vet1pXzYFwkrwW3xSDaDfxfulWtP5Nuch621d4lrh50pl7WJ/GHCiAtjAo9p8GPIZW43xNduoAtiQIDAQAB"&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;source:
&lt;a href="https://help.ubuntu.com/community/Postfix/DKIM"&gt;https://help.ubuntu.com/community/Postfix/DKIM&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="DKIM"></category><category term="Mail"></category><category term="Postfix"></category><category term="Ubuntu"></category></entry><entry><title>Postfix monitoring with pflogsumm</title><link href="http://wiki.jokeru.ro/postfix-monitoring-with-pflogsumm.html" rel="alternate"></link><published>2011-01-12T22:55:00+00:00</published><updated>2011-01-12T22:55:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2011-01-12:/postfix-monitoring-with-pflogsumm.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install pflogsumm bsd-mailx&lt;/p&gt;
&lt;p&gt;\$ vi /etc/logrotate.conf&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/daily_report.sh&lt;br&gt;
\$ chmod +x /etc/postfix/daily_report.sh&lt;/p&gt;
&lt;p&gt;\$ crontab -e&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/logrotate.conf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
.....&lt;br&gt;
/var/log/mail.log {&lt;br&gt;
missingok&lt;br&gt;
daily&lt;br&gt;
rotate 7&lt;br&gt;
create&lt;br&gt;
compress&lt;br&gt;
start 0&lt;br&gt;
}&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/postfix/daily_report.sh&lt;/strong&gt;&lt;br&gt;
[cc lang …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install pflogsumm bsd-mailx&lt;/p&gt;
&lt;p&gt;\$ vi /etc/logrotate.conf&lt;/p&gt;
&lt;p&gt;\$ vi /etc/postfix/daily_report.sh&lt;br&gt;
\$ chmod +x /etc/postfix/daily_report.sh&lt;/p&gt;
&lt;p&gt;\$ crontab -e&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/logrotate.conf&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
.....&lt;br&gt;
/var/log/mail.log {&lt;br&gt;
missingok&lt;br&gt;
daily&lt;br&gt;
rotate 7&lt;br&gt;
create&lt;br&gt;
compress&lt;br&gt;
start 0&lt;br&gt;
}&lt;br&gt;
[/cc]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/postfix/daily_report.sh&lt;/strong&gt;&lt;br&gt;
[cc lang="bash"]&lt;br&gt;
#!/bin/sh&lt;br&gt;
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&lt;/p&gt;
&lt;p&gt;
/bin/gunzip /var/log/mail.log.0.gz  
/bin/gunzip /var/log/mail.log.1.gz  
(echo '

~~~~ {style="font-size:12px"}
'; pflogsumm -d yesterday --problems_first /var/log/mail.log.0 /var/log/mail.log.1) |
 /usr/bin/bsd-mailx -a"From: pflogsumm@mail.jokeru.ro" -a"Subject: Mail Server Statistics - mail.jokeru.ro" -a"MIME-Version: 1.0" -a"Content-Type: text/html;charset=iso-8859-1" postmaster
/bin/gzip /var/log/mail.log.0
/bin/gzip /var/log/mail.log.1
exit 0
[/cc]
 
crontab
[cc lang="bash"]
00      10      *       *       *       /etc/postfix/daily_report.sh &amp;&gt; /dev/null
[/cc]
~~~~</content><category term="Mail"></category><category term="pflogsumm"></category><category term="Postfix"></category><category term="Ubuntu"></category></entry><entry><title>Pure-FTPd</title><link href="http://wiki.jokeru.ro/pure-ftpd.html" rel="alternate"></link><published>2011-01-05T20:20:00+00:00</published><updated>2011-01-05T20:20:00+00:00</updated><author><name>jokeru</name></author><id>tag:wiki.jokeru.ro,2011-01-05:/pure-ftpd.html</id><summary type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install pure-ftpd&lt;/p&gt;
&lt;p&gt;\$ cd /etc/pure-ftpd/conf/&lt;br&gt;
\$ rm -f *&lt;br&gt;
\$ echo "clf:/var/log/pure-ftpd/transfer.log" &gt; AltLog&lt;br&gt;
\$ echo "10.20.30.40,21" &gt; Bind&lt;br&gt;
\$ echo "yes" &gt; ChrootEveryone&lt;br&gt;
\$ echo "yes" &gt; DisplayDotFiles&lt;br&gt;
\$ echo "yes" &gt; DontResolve&lt;br&gt;
\$ echo "yes" &gt; IPV4Only&lt;br&gt;
\$ echo "3" &gt; MaxClientsPerIP&lt;br&gt;
\$ echo "yes" &gt; NoAnonymous&lt;br&gt;
\$ echo "/etc/pure-ftpd/pureftpd.pdb …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[cc lang="bash"]&lt;br&gt;
\$ apt-get install pure-ftpd&lt;/p&gt;
&lt;p&gt;\$ cd /etc/pure-ftpd/conf/&lt;br&gt;
\$ rm -f *&lt;br&gt;
\$ echo "clf:/var/log/pure-ftpd/transfer.log" &gt; AltLog&lt;br&gt;
\$ echo "10.20.30.40,21" &gt; Bind&lt;br&gt;
\$ echo "yes" &gt; ChrootEveryone&lt;br&gt;
\$ echo "yes" &gt; DisplayDotFiles&lt;br&gt;
\$ echo "yes" &gt; DontResolve&lt;br&gt;
\$ echo "yes" &gt; IPV4Only&lt;br&gt;
\$ echo "3" &gt; MaxClientsPerIP&lt;br&gt;
\$ echo "yes" &gt; NoAnonymous&lt;br&gt;
\$ echo "/etc/pure-ftpd/pureftpd.pdb" &gt; PureDB&lt;br&gt;
\$ echo "1" &gt; TLS&lt;/p&gt;
&lt;p&gt;\$ cd /etc/pure-ftpd/auth/&lt;br&gt;
\$ rm -f *&lt;br&gt;
\$ ln -s /etc/pure-ftpd/conf/PureDB PureDB&lt;/p&gt;
&lt;p&gt;\$ cd /etc/pure-ftpd/&lt;br&gt;
\$ rm -fr db/&lt;/p&gt;
&lt;p&gt;\$ openssl req -x509 -nodes -newkey rsa:1024 -keyout
/etc/ssl/private/pure-ftpd.pem -out /etc/ssl/private/pure-ftpd.pem&lt;br&gt;
\$ chmod 600 /etc/ssl/private/pure-ftpd.pem&lt;/p&gt;
&lt;p&gt;\$ pure-pw useradd "ftp-www" -c "FTP to /var/www/" -u www-data -d
/var/www/ -m&lt;/p&gt;
&lt;p&gt;\$ service pure-ftpd restart&lt;br&gt;
\$ netstat -tulnp | grep :21&lt;br&gt;
[/cc]&lt;/p&gt;</content><category term="FTP"></category><category term="Linux"></category><category term="Pure-FTPd"></category><category term="Ubuntu"></category></entry></feed>